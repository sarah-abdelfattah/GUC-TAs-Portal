[{"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/index.js":"1","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/reportWebVitals.js":"2","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/App.js":"3","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Location.jsx":"4","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Department.jsx":"5","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx":"6","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Faculty.jsx":"7","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/SideBar.jsx":"8","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Homepage.jsx":"9","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Login.jsx":"10","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/NavBar.jsx":"11","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Course.jsx":"12","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/ChangePassword.jsx":"13","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx":"14","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx":"15","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx":"16","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff.jsx":"17","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Profile.jsx":"18","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx":"19","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx":"20","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx":"21","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/test.jsx":"22","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/constants.js":"23","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/auth.js":"24","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/checkLogin.js":"25","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axiosCall.js":"26","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/setAuthToken.js":"27","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Add.jsx":"28","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Delete.jsx":"29","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Update.jsx":"30","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/UpdateLocation.jsx":"31","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/DeleteLocation.jsx":"32","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx":"33","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx":"34","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx":"35","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/AddLocation.jsx":"36","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceRecord.jsx":"37","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/AddDepartment.jsx":"38","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx":"39","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx":"40","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx":"41","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx":"42","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx":"43","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx":"44","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/DeleteCourse.jsx":"45","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/AddCourse.jsx":"46","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/UpdateCourse.jsx":"47","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axios.js":"48","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys.js":"49","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys_dev.js":"50","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Send.jsx":"51","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Accept.jsx":"52","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/View.jsx":"53","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/send.jsx":"54","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/NewStaffMember.jsx":"55","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx":"56","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/StaffProfile.jsx":"57","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceTable.jsx":"58","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx":"59","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx":"60","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx":"61","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx":"62","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Schedule.jsx":"63","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/RequestsDropDown.jsx":"64","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx":"65","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx":"66","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx":"67","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx":"68","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx":"69","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx":"70","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx":"71","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx":"72","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx":"73","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx":"74","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx":"75","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx":"76","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/viewReq.jsx":"77","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/Request.jsx":"78"},{"size":266,"mtime":1609599311000,"results":"79","hashOfConfig":"80"},{"size":362,"mtime":1609599311000,"results":"81","hashOfConfig":"80"},{"size":6395,"mtime":1610142504222,"results":"82","hashOfConfig":"80"},{"size":1626,"mtime":1609609006093,"results":"83","hashOfConfig":"80"},{"size":1651,"mtime":1609609006092,"results":"84","hashOfConfig":"80"},{"size":640,"mtime":1609609006000,"results":"85","hashOfConfig":"80"},{"size":1609,"mtime":1609609006092,"results":"86","hashOfConfig":"80"},{"size":2401,"mtime":1610106396375,"results":"87","hashOfConfig":"80"},{"size":7078,"mtime":1610106396467,"results":"88","hashOfConfig":"80"},{"size":3764,"mtime":1609963607895,"results":"89","hashOfConfig":"80"},{"size":1233,"mtime":1610111986506,"results":"90","hashOfConfig":"80"},{"size":1583,"mtime":1609777429503,"results":"91","hashOfConfig":"80"},{"size":7639,"mtime":1610106396463,"results":"92","hashOfConfig":"80"},{"size":560,"mtime":1609963607895,"results":"93","hashOfConfig":"80"},{"size":2627,"mtime":1610106396468,"results":"94","hashOfConfig":"80"},{"size":803,"mtime":1610106396461,"results":"95","hashOfConfig":"80"},{"size":6549,"mtime":1609963607896,"results":"96","hashOfConfig":"80"},{"size":9351,"mtime":1610106396492,"results":"97","hashOfConfig":"80"},{"size":12407,"mtime":1610106396482,"results":"98","hashOfConfig":"80"},{"size":2032,"mtime":1609963607893,"results":"99","hashOfConfig":"80"},{"size":6532,"mtime":1610106396467,"results":"100","hashOfConfig":"80"},{"size":5487,"mtime":1609777429525,"results":"101","hashOfConfig":"80"},{"size":177,"mtime":1609613696000,"results":"102","hashOfConfig":"80"},{"size":547,"mtime":1609963607877,"results":"103","hashOfConfig":"80"},{"size":575,"mtime":1609963607888,"results":"104","hashOfConfig":"80"},{"size":1039,"mtime":1609963607878,"results":"105","hashOfConfig":"80"},{"size":257,"mtime":1609777429502,"results":"106","hashOfConfig":"80"},{"size":434,"mtime":1610106396372,"results":"107","hashOfConfig":"80"},{"size":460,"mtime":1610106396373,"results":"108","hashOfConfig":"80"},{"size":455,"mtime":1610106396375,"results":"109","hashOfConfig":"80"},{"size":4714,"mtime":1610106396443,"results":"110","hashOfConfig":"80"},{"size":3427,"mtime":1610106396387,"results":"111","hashOfConfig":"80"},{"size":2016,"mtime":1610106396381,"results":"112","hashOfConfig":"80"},{"size":3402,"mtime":1610106396383,"results":"113","hashOfConfig":"80"},{"size":2598,"mtime":1610106396382,"results":"114","hashOfConfig":"80"},{"size":3290,"mtime":1610106396384,"results":"115","hashOfConfig":"80"},{"size":697,"mtime":1609777429483,"results":"116","hashOfConfig":"80"},{"size":4326,"mtime":1610106396379,"results":"117","hashOfConfig":"80"},{"size":6461,"mtime":1610106396381,"results":"118","hashOfConfig":"80"},{"size":4053,"mtime":1610106396380,"results":"119","hashOfConfig":"80"},{"size":1998,"mtime":1610111986507,"results":"120","hashOfConfig":"80"},{"size":3282,"mtime":1610106396459,"results":"121","hashOfConfig":"80"},{"size":1188,"mtime":1609777429494,"results":"122","hashOfConfig":"80"},{"size":2168,"mtime":1610106396457,"results":"123","hashOfConfig":"80"},{"size":5615,"mtime":1610106396378,"results":"124","hashOfConfig":"80"},{"size":4581,"mtime":1610106396377,"results":"125","hashOfConfig":"80"},{"size":7927,"mtime":1610106396378,"results":"126","hashOfConfig":"80"},{"size":395,"mtime":1609777429495,"results":"127","hashOfConfig":"80"},{"size":137,"mtime":1609609006087,"results":"128","hashOfConfig":"80"},{"size":515,"mtime":1610125888256,"results":"129","hashOfConfig":"80"},{"size":4100,"mtime":1610106396374,"results":"130","hashOfConfig":"80"},{"size":350,"mtime":1609795178942,"results":"131","hashOfConfig":"80"},{"size":441,"mtime":1610106396376,"results":"132","hashOfConfig":"80"},{"size":859,"mtime":1609846416030,"results":"133","hashOfConfig":"80"},{"size":10587,"mtime":1610106396486,"results":"134","hashOfConfig":"80"},{"size":916,"mtime":1609963607896,"results":"135","hashOfConfig":"80"},{"size":13344,"mtime":1610106396497,"results":"136","hashOfConfig":"80"},{"size":18150,"mtime":1610111986505,"results":"137","hashOfConfig":"80"},{"size":4657,"mtime":1610106396477,"results":"138","hashOfConfig":"80"},{"size":9130,"mtime":1610111986507,"results":"139","hashOfConfig":"80"},{"size":896,"mtime":1610106396495,"results":"140","hashOfConfig":"80"},{"size":16801,"mtime":1610111986508,"results":"141","hashOfConfig":"80"},{"size":9463,"mtime":1610111986506,"results":"142","hashOfConfig":"80"},{"size":4244,"mtime":1610106396373,"results":"143","hashOfConfig":"80"},{"size":1431,"mtime":1610130564232,"results":"144","hashOfConfig":"80"},{"size":3005,"mtime":1610106396448,"results":"145","hashOfConfig":"80"},{"size":3019,"mtime":1610106396448,"results":"146","hashOfConfig":"80"},{"size":2698,"mtime":1610106396447,"results":"147","hashOfConfig":"80"},{"size":6240,"mtime":1610107414143,"results":"148","hashOfConfig":"80"},{"size":2184,"mtime":1610106396446,"results":"149","hashOfConfig":"80"},{"size":3658,"mtime":1610106396451,"results":"150","hashOfConfig":"80"},{"size":3596,"mtime":1610106396672,"results":"151","hashOfConfig":"80"},{"size":3503,"mtime":1610106396673,"results":"152","hashOfConfig":"80"},{"size":4034,"mtime":1610142327238,"results":"153","hashOfConfig":"80"},{"size":140,"mtime":1610130070398,"results":"154","hashOfConfig":"80"},{"size":6704,"mtime":1610111986508,"results":"155","hashOfConfig":"80"},{"size":290,"mtime":1610142394158,"results":"156","hashOfConfig":"80"},{"size":1317,"mtime":1610141649230,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"c5tsfr",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"160"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"273"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"160"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"160"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"160"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"160"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"160"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"160"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"160"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"160"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"160"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"160"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"160"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"160"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/index.js",[],["343","344"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/reportWebVitals.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/App.js",["345","346","347","348","349"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Location.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Department.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Faculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/SideBar.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Homepage.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Login.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/NavBar.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Course.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/ChangePassword.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx",["350"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\n// import {axiosInstance} from '../helpers/setAuthToken'\n\nfunction InstCourseCoverage() {\n  const [rows, setRows] = useState([]);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            setRows(coverageDisplay);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-style\">\n      <h7 class=\"coverage-title\">Courses Coverage</h7>\n      <div class=\"line\"></div>\n      <TableContainer class=\"table-container\" component={Paper}>\n        <Table class=\"table-style\" aria-label=\"customized table\">\n          <TableHead className=\"dark-blue\">\n            <TableRow>\n              <TableCell>Course Name</TableCell>\n              <TableCell align=\"center\">Coverage</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.course_name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.course_name}\n                </TableCell>\n                <TableCell align=\"center\">{row.course_coverage}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstCourseCoverage;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx",["351"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstructorSlotsAssigned() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"13:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"15:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/staffMembers/viewMySchedule`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              switch (slotsDisplay[i].day) {\n                case \"Saturday\":\n                  sat.push(slotsDisplay[i]);\n                  break;\n                case \"Sunday\":\n                  sun.push(slotsDisplay[i]);\n                  break;\n                case \"Monday\":\n                  mon.push(slotsDisplay[i]);\n                  break;\n                case \"Tuesday\":\n                  tues.push(slotsDisplay[i]);\n                  break;\n                case \"Wednesday\":\n                  wed.push(slotsDisplay[i]);\n                  break;\n                case \"Thursday\":\n                  thurs.push(slotsDisplay[i]);\n                  break;\n                default:\n                  break;\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-styleS\">\n      <h7 class=\"slots-titleS\">Academic Schedule</h7>\n      <div class=\"slots-lineS\"></div>\n      <TableContainer class=\"table-slots-containerS\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"yellow\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st\n                <br /> 08:15 - 09:45\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd\n                <br /> 10:00 - 11:30\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd\n                <br /> 11:45 - 13:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th\n                <br /> 13:45 - 15:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th\n                <br /> 15:45 - 17:15\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff.jsx",["352"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport { link } from \"../helpers/constants.js\";\nimport { Button } from \"@material-ui/core\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction Staff() {\n  const [data, setData] = useState([]); //table data\n  const [courses, setCourses] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\"get\", `/staffMembers/all/all`);\n\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n              };\n            });\n            setData(data);\n            let data2 = courses.data.data;\n            let data3 = data2.push({ course: \"all\" });\n            console.log(data3);\n            setCourses(data2);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          //   document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={11}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={35}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n              ]}\n              align=\"center\"\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"Save User\",\n                  onClick: (event, rowData) => {\n                    document.location.href =\n                      window.location.origin +\n                      `/viewAttendanceRecord/${rowData.id}`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFF\",\n                  color: \"#000\",\n                  letterSpacing: \"0.1em\",\n                  fontSize: \"18px\",\n                  margin: \"0\",\n                  padding: \"0 0 10px 0\",\n                },\n                rowStyle: {\n                  fontSize: \"15px\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <Button\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    variant=\"contained\"\n                    style={{\n                      textTransform: \"none\",\n                      background: \"#045CC8\",\n                      color: \"#fff\",\n                    }}\n                    size=\"small\"\n                  >\n                    Attendance\n                  </Button>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Staff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Profile.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx",["353"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstructorSlotsAssigned() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"01:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"03:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/slotsAssignment`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data.data;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              for (var j = 0; j < slotsDisplay[i].course_slots.length; j++) {\n                var obj = {\n                  coursename: slotsDisplay[i].course_name,\n                  day: slotsDisplay[i].course_slots[j].day,\n                  time: slotsDisplay[i].course_slots[j].time,\n                  location: slotsDisplay[i].course_slots[j].location,\n                };\n                switch (obj.day) {\n                  case \"Saturday\":\n                    sat.push(obj);\n                    break;\n                  case \"Sunday\":\n                    sun.push(obj);\n                    break;\n                  case \"Monday\":\n                    mon.push(obj);\n                    break;\n                  case \"Tuesday\":\n                    tues.push(obj);\n                    break;\n                  case \"Wednesday\":\n                    wed.push(obj);\n                    break;\n                  case \"Thursday\":\n                    thurs.push(obj);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-style\">\n      <h7 class=\"slots-title\">Slots</h7>\n      <div class=\"slots-line\"></div>\n      <TableContainer class=\"table-slots-container\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"dark-blue\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st Slot <br /> (08:15 - 09:45)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd Slot <br /> (10:00 - 11:30)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd Slot <br /> (11:45 - 13:15)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th Slot <br /> (13:45 - 15:15)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th Slot <br /> (15:45 - 17:15)\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx",["354"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction ViewCourseCoverage() {\n  const [data, setData] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/viewCourseCoverage`\n          );\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data;\n            setData(data);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">View course coverage</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Course name\", field: \"course\" },\n                { title: \"Coverage %\", field: \"coverage\" },\n              ]}\n              data={data}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#045CC8\",\n                  color: \"#FFF\",\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\nexport default ViewCourseCoverage;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx",["355"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport { Button } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction ViewAllStaff() {\n  const [data, setData] = useState([]); //table data\n  const [courses, setCourses] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/getAllStaffMembers/all`\n          );\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n          const courses = await axiosCall(\"get\", `${link}/departments/courses`);\n\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n              };\n            });\n            setData(data);\n            let data2 = courses.data.data;\n            let data3 = data2.push({ course: \"all\" });\n            console.log(data3);\n            setCourses(data2);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  async function handleOnChange(event) {\n    try {\n      const res = await axiosCall(\n        \"get\",\n        `${link}/departments/getAllStaffMembers/${event.course}`\n      );\n      const locations = await axiosCall(\"get\", `${link}/locations/room/all`);\n\n      let data = res.data.data.map((staff) => {\n        return {\n          name: staff.name,\n          gucId: staff.gucId,\n          gender: staff.gender,\n          email: staff.email,\n          role: staff.role,\n          salary: staff.salary,\n          dayOff: staff.dayOff,\n          id: staff._id,\n          location: locations.data.data\n            .map((location) => {\n              if (staff.officeLocation === location._id) {\n                return location.location;\n              } else return null;\n            })\n            .filter((location) => location !== null),\n        };\n      });\n      setData(data);\n    } catch (err) {\n      console.log(\"~err\", err);\n    }\n  }\n\n  return (\n    // styling\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={40}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n              ]}\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"Save User\",\n                  onClick: (event, rowData) => {\n                    document.location.href = `${rowData.id}/viewSchedule`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFFFFF\",\n                  color: \"#000000\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <Button\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ textTransform: \"none\" }}\n                    size=\"small\"\n                  >\n                    View schedule\n                  </Button>\n                ),\n                Toolbar: (props) => (\n                  <Autocomplete\n                    size=\"small\"\n                    id=\"debug\"\n                    options={courses}\n                    onChange={(event, newValue) => {\n                      handleOnChange(newValue);\n                    }}\n                    getOptionLabel={(option) => option.course}\n                    style={{ width: \"30%\", margin: \"auto\" }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"View staff members per course\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default ViewAllStaff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/test.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/constants.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/auth.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/checkLogin.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axiosCall.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/setAuthToken.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Add.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Delete.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Update.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/UpdateLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/DeleteLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/AddLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceRecord.jsx",[],["356","357"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/AddDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx",["358","359","360"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction HODMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"courseCoverage\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default HODMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx",["361","362","363"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction TAMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"course\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default TAMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx",["364","365","366"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction CIMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"course\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default CIMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/DeleteCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/AddCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/UpdateCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axios.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys_dev.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Send.jsx",["367","368","369","370","371","372","373","374","375","376","377","378","379"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Accept.jsx",[],["380","381"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/View.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/send.jsx",["382"],"//drop down list\nimport React, { useState, useEffect } from \"react\";\n \nfunction Sendd(){\n       const[choosenReq,setChosen ] =useState(\"\")                       \n  return( \n              <select \n                        value={choosenReq} \n                        onChange={(event) => {setChosen(event.target.value);}}\n                        \n            >\n                        <option value=\"Replacement Request\">Replacement Request</option>\n                        <option value=\"Slot Request\">Slot Requesty</option>\n                        <option value=\"Change DayOff\">Change DayOff</option>\n                        <option value=\"Leave Request\">Leave Request</option>   \n                    </select> \n                    \n                    \n                    \n                    )\n                    }\n                    export default Sendd;","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/NewStaffMember.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/StaffProfile.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceTable.jsx",["383"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport Fade from \"react-reveal/Fade\";\nimport { IoFilter, IoCloseSharp } from \"react-icons/io5\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  TimePicker,\n} from \"@material-ui/pickers\";\n\nfunction AttendanceTable(props) {\n  const [staff, setStaff] = useState([]);\n  const [HR, setHr] = useState(false);\n  const [originalData, setOriginalData] = useState([]);\n  const [data, setData] = useState([]); //table data\n  const [filtered, setFiltered] = useState(false);\n  const [selectedMonth, setMonth] = useState(\"Month\");\n\n  const { addToast } = useToasts();\n\n  const month = [\n    \"11 Jan - 10 Feb\", //0 1-2\n    \"11 Feb - 10 Mar\", //1 2-3\n    \"11 Mar - 10 Apr\", //2 3-4\n    \"11 Apr - 10 May\", //3 4-5\n    \"11 May - 10 Jun\", //4 5-6\n    \"11 Jun - 10 Jul\", //5 6-7\n    \"11 Jul - 10 Aug\", //6 7-8\n    \"11 Aug - 10 Sep\", //7 8-9\n    \"11 Sep - 10 Oct\", //8 9-10\n    \"11 Oct - 10 Nov\", //9 10-11\n    \"11 Nov - 10 Dec\", //10 11-12\n    \"11 Dec - 10 Jan\", //11 12-1\n  ];\n\n  const compare = (a, b) => {\n    const rec1 = a.date;\n    const rec2 = b.date;\n\n    let comparison = 0;\n    if (rec1 < rec2) {\n      comparison = 1;\n    } else if (rec1 > rec2) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n          let staff = \"\";\n          if (temp.data.data) staff = temp.data.data;\n\n          if (props.hr) setHr(true);\n\n          if (staff) {\n            setStaff(staff);\n            let records = staff.attendanceRecords;\n            // console.log(\n            //   \"🚀 ~ file: AttendanceTable.jsx ~ line 73 ~ fetchData ~ records\",\n            //   records\n            // );\n            // for (let i = 0; i < records.length; i++) {\n            //   console.log(records[i].endTime);\n            //   let nweDate = \"2021-01-01T\" + records[i].endTime;\n            //   records[i].endTime = new Date(nweDate);\n\n            //   // console.log(t);\n            // }\n\n            //sorted .. from most to least recent\n            const result = records.sort(compare);\n            setOriginalData(result);\n            setData(result);\n          } else {\n            addToast(\"Error occurred, please try again later\", {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n        }\n      }\n      fetchData();\n    }\n  }, [props]);\n\n  const handleFilter = async () => {\n    try {\n      if (selectedMonth === \"Month\") {\n      } else {\n        setFiltered(true);\n        let term = parseInt(month.indexOf(selectedMonth));\n        if (term > -1) {\n          let month1 = term + 1;\n          let month2;\n          if (month1 === 12) month2 = 1;\n          else month2 = month1 + 1;\n\n          const res = await axiosCall(\n            \"get\",\n            `attendance/viewAttendance/${month1}/${month2}`\n          );\n\n          addToast(\"filtered successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n\n          return setData(res.data);\n        } else {\n          addToast(\"Sorry this is not a valid month\", {\n            appearance: \"danger\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (error) {\n      addToast(\"crashed\", {\n        appearance: \"danger\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  const handleRemoveFilter = async () => {\n    setData(originalData);\n    setFiltered(false);\n    setMonth(\"\");\n  };\n\n  const handleRowUpdate = async (newData, oldData) => {\n    //get number\n    const filtered = originalData.filter((rec) => rec.date === oldData.date);\n    let numberHere = 0;\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i]._id === oldData._id) {\n        numberHere = i + 1;\n        break;\n      }\n    }\n\n    const newSignIn = newData.startTime;\n    const newSignOut = newData.endTime;\n\n    if (typeof newSignIn === \"object\" && typeof newSignOut === \"object\") {\n      return addToast(\"Sorry you cannot both signIn and sign Out\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else if (!oldData.startTime && newData.startTime) {\n      //changed signIn\n      let time = newData.startTime.toLocaleTimeString().split(\" \");\n      let signIn = time[0];\n      let splitted = time[0].split(\":\");\n      if (time[1] === \"PM\") {\n        splitted[0] = parseInt(splitted[0]) + 12;\n      } else {\n        if (parseInt(splitted[0]) < 7) {\n          splitted[0] = 7;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n      }\n      signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n      if (signIn.length < 8) signIn = \"0\" + signIn;\n\n      const body = {\n        id: staff.gucId,\n        signIn: signIn,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (!oldData.endTime && newData.endTime) {\n      //changed signOut\n\n      let time = newData.endTime.toLocaleTimeString().split(\" \");\n      let signOut = time[0];\n      if (time[1] === \"PM\") {\n        let splitted = time[0].split(\":\");\n        splitted[0] = parseInt(splitted[0]) + 12;\n        if (splitted[0] > 19) {\n          splitted[0] = 19;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n        signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n      }\n      if (signOut.length < 8) signOut = \"0\" + signOut;\n\n      const body = {\n        id: staff.gucId,\n        signOut: signOut,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (\n      (typeof oldData.startTime === \"string\" &&\n        typeof newData.startTime === \"object\") ||\n      (typeof oldData.endTime === \"string\" &&\n        typeof newData.endTime === \"object\")\n    ) {\n      return addToast(\"You can not change existing records\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else {\n      return addToast(\"You did not change any record\", {\n        appearance: \"warning\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  const handleRowAdd = async (newData) => {\n    let input = newData.date;\n\n    if (!newData.date || !newData.startTime || !newData.endTime) {\n      return addToast(\"Please enter all details\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n\n    //day\n    let day;\n    switch (input.toString().split(\" \")[0]) {\n      case \"Sat\":\n        day = \"Saturday\";\n        break;\n      case \"Sun\":\n        day = \"Sunday\";\n        break;\n      case \"Mon\":\n        day = \"Monday\";\n        break;\n      case \"Tues\":\n        day = \"Tuesday\";\n        break;\n      case \"Wed\":\n        day = \"Wednesday\";\n        break;\n      case \"Thu\":\n        day = \"Thursday\";\n        break;\n      case \"Fri\":\n        return addToast(\"Sorry you cannot add a record on Friday\", {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      default:\n        break;\n    }\n\n    //date\n    let dayOfMonth =\n      input.getDate() > 9 ? input.getDate() : \"0\" + input.getDate();\n    let monthOfYear =\n      input.getMonth() + 1 > 9\n        ? input.getMonth() + 1\n        : \"0\" + (input.getMonth() + 1);\n\n    let date = input.getFullYear() + \"-\" + monthOfYear + \"-\" + dayOfMonth;\n\n    //signIn\n    let time = newData.startTime.toLocaleTimeString().split(\" \");\n    let signIn = time[0];\n    let splitted = time[0].split(\":\");\n    if (time[1] === \"PM\") {\n      splitted[0] = parseInt(splitted[0]) + 12;\n    } else {\n      if (parseInt(splitted[0]) < 7) {\n        splitted[0] = 7;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n    }\n    signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n    if (signIn.length < 8) signIn = \"0\" + signIn;\n\n    //signOut\n    time = newData.endTime.toLocaleTimeString().split(\" \");\n    let signOut = time[0];\n    if (time[1] === \"PM\") {\n      let splitted = time[0].split(\":\");\n      splitted[0] = parseInt(splitted[0]) + 12;\n      if (splitted[0] > 19) {\n        splitted[0] = 19;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n      signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n    }\n    if (signOut.length < 8) signOut = \"0\" + signOut;\n\n    const body = {\n      id: staff.gucId,\n      signIn: signIn,\n      signOut: signOut,\n      date: date,\n      day: day,\n      number: 1,\n    };\n\n    const res = await axiosCall(\"put\", \"attendance/addMissingSignInOut\", body);\n\n    if (res.data.data) {\n      addToast(\"Record updated successfully\", {\n        appearance: \"success\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n\n      let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n      let staffUpdated = \"\";\n      if (temp.data.data) staffUpdated = temp.data.data;\n\n      if (staffUpdated) {\n        let records = staffUpdated.attendanceRecords;\n\n        //sorted .. from most to least recent\n        const result = records.sort(compare);\n\n        setOriginalData(result);\n        setData(result);\n      }\n    }\n    if (res.data.error) {\n      addToast(res.data.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">{props.title}</h3>\n        <hr className=\"general-line\" />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <MaterialTable\n                title=\"\"\n                columns={[\n                  {\n                    title: \"Day\",\n                    field: \"day\",\n                    filtering: false,\n                  },\n                  {\n                    title: \"Date\",\n                    field: \"date\",\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign In\",\n                    field: \"startTime\",\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <TimePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign Out\",\n                    field: \"endTime\",\n                    sorting: false,\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <TimePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"leave\",\n                    field: \"absentsatisfied\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Absent Status\",\n                    field: \"absentStatus\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Description\",\n                    field: \"description\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                ]}\n                align=\"center\"\n                data={data}\n                options={{\n                  search: true,\n                  // filtering: true,\n                  sorting: true,\n                  actionsColumnIndex: -1,\n                  headerStyle: {\n                    backgroundColor: \"#FFF\",\n                    color: \"#000\",\n                    letterSpacing: \"0.1em\",\n                    fontSize: \"18px\",\n                    margin: \"0\",\n                    padding: \"0 0 10px 0\",\n                  },\n                  rowStyle: {\n                    fontSize: \"15px\",\n                  },\n                }}\n                components={{\n                  Toolbar: (props) => (\n                    <div className=\"select-table-container\">\n                      <MTableToolbar {...props} />\n                      <Select\n                        className=\"table-select month\"\n                        value={selectedMonth}\n                        onChange={(event) => setMonth(event.target.value)}\n                        placeholder=\"Month\"\n                      >\n                        <MenuItem className=\"\" value={\"Month\"} key={\"Month\"}>\n                          Month\n                        </MenuItem>\n                        {month.map((mon) => (\n                          <MenuItem className=\"\" value={mon} key={mon}>\n                            {mon}\n                          </MenuItem>\n                        ))}\n                      </Select>\n\n                      <IoFilter\n                        className=\"filter-icon\"\n                        onClick={() => handleFilter()}\n                      />\n                      {filtered ? (\n                        <IoCloseSharp\n                          className=\"filter-icon\"\n                          onClick={handleRemoveFilter}\n                        />\n                      ) : null}\n                    </div>\n                  ),\n                }}\n                editable={\n                  HR\n                    ? {\n                        // handle row add\n                        onRowAdd: (newData) =>\n                          new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                              handleRowAdd(newData, resolve);\n\n                              resolve();\n                            }, 1500);\n                          }),\n\n                        //to update row\n                        onRowUpdate: (newData, oldData) =>\n                          new Promise((resolve) => {\n                            setTimeout(() => {\n                              handleRowUpdate(newData, oldData);\n                              resolve();\n                            }, 1500);\n                          }),\n                      }\n                    : false\n                }\n              />\n            </Grid>\n          </Grid>\n        </MuiPickersUtilsProvider>\n      </Fade>\n    </div>\n  );\n}\n\nexport default AttendanceTable;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx",["384"],"import React, { useState, useEffect } from \"react\";\nimport { link } from '../helpers/constants';\n\nimport Button from '@material-ui/core/Button';\nimport {\n    FormControl,\n    InputLabel,\n    Select,\n    FormHelperText,\n    MenuItem,\n    Input,\n  } from \"@material-ui/core\";\n\nimport { useToasts } from 'react-toast-notifications'\nimport {axiosCall} from \"../helpers/axiosCall\";\n\n\nimport {axios} from '../helpers/axios';\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstrCourseAssignCC() {\n    const [courses,setCourses] = useState([]);\n    const [course,setCourse] = useState(\"\");\n    const [id,setID] = useState(\"\");\n    const {addToast} = useToasts();\n    useEffect(()=>{\n        async function fetchData() {\n        const loggedInUser = localStorage.getItem(\"user\");\n\t\tif (!loggedInUser) {\n\t\t  document.location.href = window.location.origin + \"/login\"; \n\t\t}else{\n            try{\n                const response = await axios.get(`${link}/academicMember/courseInstructor/courseCoverage`);\n                if(response.data.error){\n                    addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n                }else{\n                    const coverageDisplay = response.data.data;\n                    const coursesState = coverageDisplay.map((course)=>{\n                        return course.course_name;\n                    })\n                    setCourses(coursesState);\n                }\n            }catch(e){\n                console.log('~ err', e);\n                document.location.href = window.location.origin + \"/unauthorized\";\n            }\n        }\n    }\n    fetchData();\n    },[]);\n    const handleOnChange = (target) => {\n        setCourse(target.value);\n    };\n\n    const handleSubmit = async()=>{\n        try{\n            let response = await axiosCall(\"post\",`${link}/academicMember/courseInstructor/courseCoordinator`,\n            {\n                gucId: id,\n                courseName: course,\n            });\n\n            if(response.data.error){\n                addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n            }else if(response.data.data){\n                addToast(`The academic member '${response.data.data.courseCoordinator}' is assigned successfully to be the course coordinator of the course '${response.data.data.courseName}'`,\n                 {appearance: 'success',autoDismiss: true});\n            }else{\n                addToast(\"The GUC ID should be written in the corrent format: 'role-IDNumber' e.g. HR-1\", {appearance: 'warning',autoDismiss: true});\n            }\n        }catch(e){\n            console.log('~ err', e);\n            document.location.href = window.location.origin + \"/unauthorized\";\n        }\n    }\n\n    return (\n        <div>\n        <h3 className=\"general-header\">Assign a Course Coordinator</h3>\n        <hr className=\"general-line\" />\n        <br/>\n        <div className=\"crud-inner-container\">\n        <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n            <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                handleOnChange(event.target);\n                }}\n            >\n                {courses.length > 0 &&\n                courses.map((coursename) => (\n                    <MenuItem\n                    className=\"crud-menuItem\"\n                    value={coursename}\n                    key={coursename}\n                    >\n                    {coursename}\n                    </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText className=\"crud-helperText\">\n                This field is required\n            </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n            <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n            />\n            <FormHelperText className=\"crud-helperText\">\n                This field is required\n            </FormHelperText>\n            </FormControl>\n        </div>\n\n        <Button\n            variant = \"success\"\n            className= \"crud-submit crud-add-btn green\"\n                        \n            disabled={id === \"\" || course === \"\"? true : false}\n            onClick={handleSubmit}\n        >\n            Assign\n        </Button>\n        </div>\n        </div>\n    )\n}\n\nexport default InstrCourseAssignCC\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx",["385","386"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../helpers/constants\";\n\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../helpers/axiosCall\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nimport Add from \"../components/Add\";\nimport Update from \"../components/Update\";\nimport Delete from \"../components/Delete\";\n\nfunction AcademicMemberCourseSlot() {\n  const [courses, setCourses] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [crudBtns, setBtns] = useState({\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [day, setDay] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [timing, setTiming] = useState(\"\");\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  const { addToast } = useToasts();\n\n  const handleOnChange = (target) => {\n    setCourse(target.value);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            const coursesState = coverageDisplay.map((course) => {\n              return course.course_name;\n            });\n            setCourses(coursesState);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      let response = null;\n      let optionSelected = \"\";\n      if (crudBtns.add) {\n        optionSelected = \"post\";\n      } else if (crudBtns.update) {\n        optionSelected = \"put\";\n      } else if (crudBtns.delete) {\n        optionSelected = \"delete\";\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      let slot = timing.substring(0, 3);\n      let convertedTiming = \"\";\n      switch (slot) {\n        case \"1st\":\n          convertedTiming = \"08:15 AM\";\n          break;\n        case \"2nd\":\n          convertedTiming = \"10:00 AM\";\n          break;\n        case \"3rd\":\n          convertedTiming = \"11:45 AM\";\n          break;\n        case \"4th\":\n          convertedTiming = \"01:45 PM\";\n          break;\n        case \"5th\":\n          convertedTiming = \"03:45 PM\";\n          break;\n      }\n      response = await axiosCall(\n        optionSelected,\n        `${link}/academicMember/courseInstructor/slotsAssignment`,\n        {\n          gucId: id,\n          courseName: course,\n          slot: {\n            day: day,\n            time: convertedTiming,\n          },\n        }\n      );\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        if (optionSelected === \"post\")\n          addToast(\"The slot assignment is added successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        else if (optionSelected === \"put\") {\n          addToast(\"The slot assignment is updated successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        } else {\n          addToast(\"The slot assignment is deleted successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  return (\n    <div className=\"crud-outer-container\">\n      <div className=\"crud-container\">\n        <Add\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: true,\n              update: false,\n              delete: false,\n            })\n          }\n        />\n        <Update\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: true,\n              delete: false,\n            })\n          }\n        />\n        <Delete\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: false,\n              delete: true,\n            })\n          }\n        />\n      </div>\n\n      {!crudBtns.add && !crudBtns.update && !crudBtns.delete ? null : (\n        <div className=\"crud-inner-container\">\n          <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                  handleOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Day</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={day}\n                onChange={(event) => {\n                  setDay(event.target.value);\n                }}\n              >\n                {weekDays.map((weekDay) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={weekDay}\n                    key={weekDay}\n                  >\n                    {weekDay}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Timing</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={timing}\n                onChange={(event) => {\n                  setTiming(event.target.value);\n                }}\n              >\n                {slotTiming.map((slotTime) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={slotTime}\n                    key={slotTime}\n                  >\n                    {slotTime}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n              <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n              />\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n          </div>\n\n          <Button\n            variant={\n              crudBtns.add ? \"success\" : crudBtns.update ? \"primary\" : \"danger\"\n            }\n            className={\n              crudBtns.add\n                ? \"crud-submit crud-add-btn green\"\n                : crudBtns.update\n                ? \"crud-submit crud-update-btn blue\"\n                : \"crud-submit crud-delete-btn red\"\n            }\n            disabled={\n              id === \"\" || timing === \"\" || day === \"\" || course === \"\"\n                ? true\n                : false\n            }\n            onClick={handleSubmit}\n          >\n            {crudBtns.add ? \"Assign\" : crudBtns.update ? \"Update\" : \"Delete\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AcademicMemberCourseSlot;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx",["387"],"import React, { useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Schedule from \"../../components/Schedule\";\nimport checkLogin from \"../../helpers/checkLogin\";\n\nfunction InstructorSlotsAssigned() {\n  const [id, setId] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n\n        //get user\n        const url = document.location.pathname.split(\"/\");\n        const id = url[url.length - 1];\n\n        setId(id);\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <div>{id ? <Schedule id={id} /> : null}</div>;\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx",["388","389","390","391"],"import React, { useState, useEffect } from \"react\";\n//Icons\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n//Components\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\n//CRUD\nimport { axios } from \"../../helpers/axios\";\nimport { link } from \"../../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../../helpers/axiosCall\";\n\n//Styling\nimport \"../../styles/_colorSchema.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction CourseSlotCRUD() {\n  //States needed\n  const [courses, setCourses] = useState([]); //To get the courses and put it in the list\n  const [course1, setCourse] = useState(\"\"); //The selected course\n  const [day, setDay] = useState(\"\"); //The day added-deleted\n  const [location, setLocation] = useState(\"\"); //The location added-deleted\n  const [timing, setTiming] = useState(\"\"); //The timing added-deleted\n  const [dayU, setDayU] = useState(\"\"); //The day updated\n  const [locationU, setLocationU] = useState(\"\"); //The location updated\n  const [timingU, setTimingU] = useState(\"\"); //The timing updated\n  const [optionSelected, setOptionSelected] = useState(\"add\"); //To keep track of the selected option\n  const [buttonEnabled, setButtonEnabled] = useState(true); //To know if we can enable the button\n\n  const { addToast } = useToasts();\n  const useStyles = makeStyles((theme) => ({\n    mainGridContainer: {\n      marginTop: \"150px\",\n    },\n    gridContainer: {\n      backgroundColor: \"white\",\n      boxShadow: \"0px 0px 15px 0px rgba(0, 0, 0, 0.64)\",\n      borderRadius: \"13px\",\n    },\n    courseSlotsDiv: {\n      width: \"60%\",\n      height: \"80%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      display: \"block\",\n    },\n    button: {\n      backgroundColor:\n        optionSelected === \"add\"\n          ? \"#058c42\"\n          : optionSelected === \"update\"\n          ? \"#045CC8\"\n          : \" #C81927\",\n      color: \"white\",\n    },\n    radio: {\n      \"&$checked\": {\n        color: \"#058c42\",\n      },\n    },\n    checked: {},\n  }));\n  const classes = useStyles();\n  //Constants for select options\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  //Handling components changes and update states\n  //1- Choose course\n  const handleOnChangeCourse = (newValue) => {\n    setCourse(newValue);\n  };\n  //2- Choose option\n  const handleOnChangeRadio = (e) => {\n    setOptionSelected(e.target.value);\n    if (e.target.value === \"add\" || e.target.value === \"delete\") {\n      setDayU(\"\");\n      setTimingU(\"\");\n      setLocationU(\"\");\n    }\n    // handleButtonEnable();\n  };\n  //3- Choose day\n  const handleOnChangeDay = (newValue) => {\n    setDay(newValue);\n  };\n  //3- Choose updated day\n  const handleOnChangeDayU = (newValue) => {\n    setDayU(newValue);\n  };\n  //4- Choose a timing\n  const handleOnChangeTiming = (newValue) => {\n    setTiming(newValue);\n    // handleButtonEnable();\n  };\n  //5- Choose an updated timing\n  const handleOnChangeTimingU = (newValue) => {\n    setTimingU(newValue);\n    // handleButtonEnable();\n  };\n  //6- Write a location\n  const handleOnChangeLocation = (e) => {\n    setLocation(e.target.value);\n    // handleButtonEnable();\n  };\n  //7- Write the updated location\n  const handleOnChangeLocationU = (e) => {\n    setLocationU(e.target.value);\n    // handleButtonEnable();\n  };\n  //8- Handling the submitting\n  const handleSubmit = async (e) => {\n    try {\n      let response = null;\n      if (optionSelected === \"add\") {\n        console.log(\"add\");\n        response = await axios.post(`${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else if (optionSelected === \"update\") {\n        response = await axios.put(`${link}/slots/courseSlot`, {\n          course: course1,\n          dayOld: day,\n          timeOld: timing.substring(10, 15),\n          locationOld: location,\n          dayNew: dayU,\n          timeNew: timingU.substring(10, 15),\n          locationNew: locationU,\n        });\n      } else if (optionSelected === \"delete\") {\n        console.log(course1);\n        response = await axiosCall(\"delete\", `${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else if (response.data.errorJ) {\n        addToast(\n          \"The location should be written in the format: 'Building.RoomNumber' e.g.'C7.209'\",\n          { appearance: \"warning\", autoDismiss: true }\n        );\n      } else {\n        console.log(response.data.data);\n        addToast(response.data.data, {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  const handleButtonEnable = () => {\n    if (\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        (optionSelected === \"add\" || optionSelected === \"delete\")) ||\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        dayU &&\n        locationU &&\n        timingU &&\n        optionSelected === \"update\")\n    ) {\n      setButtonEnabled(false);\n    } else {\n      setButtonEnabled(true);\n    }\n  };\n\n  useEffect(async () => {\n    try {\n      const response = await axios.get(`${link}/courses/coursesCC`);\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const myCourses = response.data.data;\n        setCourses(myCourses);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  }, []);\n\n  useEffect(() => {\n    handleButtonEnable();\n  }, [\n    courses,\n    course1,\n    day,\n    dayU,\n    timing,\n    timingU,\n    location,\n    locationU,\n    optionSelected,\n    buttonEnabled,\n  ]);\n\n  return (\n    <div className={classes.courseSlotsDiv}>\n      <Grid container className={classes.mainGridContainer} justify=\"center\">\n        <Grid\n          item\n          container\n          spacing={7}\n          className={classes.gridContainer}\n          justify=\"space-between\"\n          xs={12}\n          sm={12}\n          md={12}\n        >\n          {/* Choose Course */}\n          <Grid item container spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"5px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <LibraryBooksIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={7}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={courses}\n                getOptionLabel={(coursename) => coursename}\n                onChange={(e, newValue) => handleOnChangeCourse(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Course\" value={course1} />\n                )}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            spacing={2}\n            xs={12}\n            sm={12}\n            md={6}\n            justify=\"space-between\"\n          >\n            <Grid item xs={12} sm={12} md={2}>\n              <FormControlLabel\n                value=\"add\"\n                control={\n                  <Radio\n                    classes={{ root: classes.radio, checked: classes.checked }}\n                    value=\"add\"\n                    checked={optionSelected === \"add\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Add\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"30px\" }}>\n              <FormControlLabel\n                value=\"update\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    value=\"update\"\n                    checked={optionSelected === \"update\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Update\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"115px\" }}>\n              <FormControlLabel\n                value=\"delete\"\n                control={\n                  <Radio\n                    value=\"delete\"\n                    checked={optionSelected === \"delete\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Delete\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <TodayIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={weekDays}\n                getOptionLabel={(day) => day}\n                onChange={(e, newValue) => handleOnChangeDay(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Day\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update day */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <TodayIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={weekDays}\n                  getOptionLabel={(day) => day}\n                  onChange={(e, newValue) => handleOnChangeDayU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New day\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container spacing={2} item xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <AccessTimeIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={slotTiming}\n                getOptionLabel={(slot) => slot}\n                onChange={(e, newValue) => handleOnChangeTiming(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Timing\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot timing */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <AccessTimeIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={slotTiming}\n                  getOptionLabel={(slot) => slot}\n                  onChange={(e, newValue) => handleOnChangeTimingU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New timing\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n            >\n              <LocationOnIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <TextField\n                // id=\"standard-error-helper-text\"\n                label=\"Location\"\n                // helperText=\"Incorrect entry.\"\n                placeholder=\"eg. C7.209\"\n                onChange={handleOnChangeLocation}\n                // margin=\"normal\"\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot location */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n              >\n                <AddLocationIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <TextField\n                  // id=\"standard-error-helper-text\"\n                  label=\"New location\"\n                  // helperText=\"Incorrect entry.\"\n                  placeholder=\"eg. C7.209\"\n                  onChange={handleOnChangeLocationU}\n                  // margin=\"normal\"\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container xs={12} sm={12} md={12} justify=\"flex-end\">\n            <Grid item xs={12} sm={12} md={2}>\n              <Button\n                variant=\"contained\"\n                // color = {optionSelected === 'add'?\"success\":optionSelected === 'update'?\"primary\":\"secondary\"}\n                className={classes.button}\n                startIcon={\n                  optionSelected === \"add\" ? (\n                    <AddCircleIcon />\n                  ) : optionSelected === \"update\" ? (\n                    <EditIcon />\n                  ) : (\n                    <DeleteIcon />\n                  )\n                }\n                onClick={handleSubmit}\n                disabled={buttonEnabled}\n              >\n                {optionSelected === \"add\"\n                  ? \"Add\"\n                  : optionSelected === \"update\"\n                  ? \"Update\"\n                  : \"Delete\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CourseSlotCRUD;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Schedule.jsx",["392","393"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport auth from \"../helpers/auth\";\nimport checkLogin from \"../helpers/checkLogin\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction Schedule(props) {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"13:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"15:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n        await auth([\"Course Instructor\"]);\n\n        let response;\n        if (props.gucId) {\n          response = await axios.get(`${link}/staffMembers/viewMySchedule`);\n        } else if (props.id) {\n          response = await axios.get(\n            `${link}/staffMembers/viewStaffSchedule/${props.id}`\n          );\n        }\n\n        if (response.data.error) {\n          addToast(response.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        } else if (response.data) {\n          const slotsDisplay = response.data;\n          var sat = [];\n          var sun = [];\n          var mon = [];\n          var tues = [];\n          var wed = [];\n          var thurs = [];\n          for (var i = 0; i < slotsDisplay.length; i++) {\n            switch (slotsDisplay[i].day) {\n              case \"Saturday\":\n                sat.push(slotsDisplay[i]);\n                break;\n              case \"Sunday\":\n                sun.push(slotsDisplay[i]);\n                break;\n              case \"Monday\":\n                mon.push(slotsDisplay[i]);\n                break;\n              case \"Tuesday\":\n                tues.push(slotsDisplay[i]);\n                break;\n              case \"Wednesday\":\n                wed.push(slotsDisplay[i]);\n                break;\n              case \"Thursday\":\n                thurs.push(slotsDisplay[i]);\n                break;\n              default:\n                break;\n            }\n          }\n          setSats(orderDays(sat));\n          setSuns(orderDays(sun));\n          setMons(orderDays(mon));\n          setTuess(orderDays(tues));\n          setWeds(orderDays(wed));\n          setThurss(orderDays(thurs));\n        }\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-styleS\">\n      <h7 class=\"slots-titleS\">Academic Schedule</h7>\n      <div class=\"slots-lineS\"></div>\n      <TableContainer class=\"table-slots-containerS\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"yellow\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st\n                <br /> 08:15 - 09:45\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd\n                <br /> 10:00 - 11:30\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd\n                <br /> 11:45 - 13:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th\n                <br /> 13:45 - 15:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th\n                <br /> 15:45 - 17:15\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default Schedule;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/RequestsDropDown.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx",["394","395"],"import React, { useState } from \"react\";\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nimport Sent from \"./request/ViewRequests/Sent\";\nimport Received from \"./request/ViewRequests/Received\";\n\nfunction ViewRequestsDropDown() {\n  const [type, setType] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n\n  const handleSelectType = (value) => {\n    setType(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div className=\"RequestsDropDown\">\n      <div\n        className=\"crud-inner-container request-select\"\n        style={{\n          minHeight: \"0\",\n        }}\n      >\n        <Select\n          className=\"crud-select \"\n           \n          placeholder=\"Select Type\"\n          \n        \n          value={value}\n            onChange={(event) => {\n              setValue(event.target.value);\n            }}\n        >\n          <MenuItem\n            className=\"crud-menuItem \"\n            value=\"Sent Requests\"\n            key=\"Sent Requests\"\n          >\n            Sent Requests\n          </MenuItem>\n          <MenuItem\n            className=\"crud-menuItem\"\n            value=\"Received Requests\"\n            key=\"Received Requests\"\n          >\n            Received Requests\n          </MenuItem>\n        </Select>\n      </div>\n\n      {value === \"Sent Requests\" ? (\n        <Sent/>\n      ) : value === \"Received Requests\" ? (\n        <Received />\n      ) : null}\n    </div>\n  );\n}\n\nexport default ViewRequestsDropDown;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx",["396"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Sick() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Sick\",\n          SickDayDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Sick Day Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Sick;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx",["397"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Maternity() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Maternity\",\n          startDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Maternity Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Maternity;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx",["398"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\n\nimport { FormControl, InputLabel } from \"@material-ui/core\";\n\nfunction Compensation() {\n  const [date1, setDate1] = useState();\n  const [date2, setDate2] = useState();\n  const [Reason, setReason] = useState(\"\");\n  const { addToast } = useToasts();\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Compensation\",\n        LeaveDate: date1,\n        CompensationDate: date2,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate1();\n        setDate2();\n        setReason(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Leave Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date1}\n            onChange={setDate1}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Compensation Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date2}\n            onChange={setDate2}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date1 == null || date2 == null || Reason == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Compensation;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx",["399","400","401","402","403"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Annual() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [TAID, setTAID] = useState(\"\");\n  const [time, setTime] = useState();\n\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"Course\");\n  const [check, setCheck] = useState(\"\");\n  const [rep, setRep] = useState({\n    reps: [\n      {\n        TAId: \"\",\n        time: null,\n        coursename: \"\",\n      },\n    ],\n  });\n\n  const array = [];\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      var object = {\n        TAId: TAID,\n        time: time,\n        coursename: courseChosen,\n      };\n      var res = time.split(\":\");\n      date.setHours(res[0], res[1], 0);\n      console.log(date);\n      var str =\n        date.getFullYear() +\n        \"-\" +\n        (date.getMonth() + 1) +\n        \"-\" +\n        date.getDate() +\n        \"T\" +\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \":00\";\n      //  console.log(dates);\n      const body1 = {\n        id: TAID,\n        date: str,\n        courseName: courseChosen,\n      };\n      var resp1 = await axiosCall(\"post\", \"requests/checkRep\", body1);\n      setCheck(resp1.data);\n\n      if (resp1.data == \"success\") {\n        console.log(object);\n        setRep({ reps: rep.reps.concat([object]) });\n\n        addToast(\n          \" replacement added successfully,add another one if you want\",\n          {\n            appearance: \"success\",\n            autoDismiss: true,\n          }\n        );\n        setTAID(\"\");\n        setTime();\n        setCourseChosen(\"\");\n        //ha3mlha add f el array w h set kol 7aga b 0 tany w hatl3lh toast by2olh added successfully\n        //click add if you have another replacement\n      }  \n         if (resp1.data.error) {\n        addToast(resp1.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        }); \n      } \n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Annual\",\n        AnnualLeaveDate: date,\n        rep: rep,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setReason(\"\");\n        setRep([\n          {\n            TAId: \"\",\n            time: null,\n            coursename: \"\",\n          },\n        ]);\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Replacement</InputLabel>\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">TA ID</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n          <Input\n            className=\"crud-input\"\n            value={TAID}\n            onChange={(event) => setTAID(event.target.value)}\n          />\n\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Time</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <TimePicker className=\"crud-input\" onChange={setTime} value={time} />\n\n          <br />\n          <br />\n\n          <Button\n            variant=\"success\"\n            className=\"crud-submit crud-add-btn green\"\n            disabled={\n              date == null || time == null || TAID == \"\" || courseChosen == \"\"\n                ? true\n                : false\n            }\n            onClick={handleClick}\n          >\n            Add\n          </Button>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Annual;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx",["404"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nfunction Slot() {\n  const [loc, setLoc] = useState(\"\");\n  const [date, setDate] = useState();\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Slot Request\",\n        date: date,\n        locationType: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n\n          <br />\n          <br />\n\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n\n          <br />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location Type</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={loc}\n            onChange={(event) => {\n              setLoc(event.target.value);\n            }}\n          >\n            <MenuItem className=\"crud-menuItem\" value=\"Tutorial Room\">\n              Tutorial Room\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lecture Hall\">\n              Lecture Hall\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lab\">\n              Lab\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Office\">\n              Office\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" ? true : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Slot;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx",["405","406"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Replacement() {\n  const [date, setDate] = useState();\n  const [recId, setRecId] = useState(\"\");\n  const [loc, setLoc] = useState(\"\");\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Replacement Request\",\n        replacementDate: date,\n        recieverId: recId,\n        location: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setRecId(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n          <br />\n          <br />\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Receiver id</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={recId}\n            onChange={(event) => setRecId(event.target.value)}\n          />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={loc}\n            onChange={(event) => setLoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" || recId == \"\"\n            ? true\n            : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Replacement;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx",["407"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nfunction ChangeDayOff() {\n  const [NewDayOff, setDayOff] = useState(\"\");\n  const [Reason, setReason] = useState(\" \");\n  const [CurDayOff, setCurDayOff] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const Day = await axiosCall(\"get\", \"requests/dayOff\");\n      setCurDayOff(Day.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Change DayOff\",\n        newDayOff: NewDayOff,\n        reason: Reason,\n      };\n      if (NewDayOff == CurDayOff) {\n        addToast(\"already Your Current DayOff\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        setDayOff(\"\");\n        setReason(\"\");\n      }\n\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setReason(\"\");\n        setDayOff(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"crud-inner-container\">\n        <div className=\"crud-form\">\n          <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">New DayOff</InputLabel>\n            <Select\n              className=\"crud-select\"\n              value={NewDayOff}\n              onChange={(event) => {\n                setDayOff(event.target.value);\n              }}\n            >\n              <MenuItem className=\"crud-menuItem\" value=\"Saturday\">\n                Saturday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Sunday\">\n                Sunday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Monday\">\n                Monday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Tuesday\">\n                Tuesday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Wednesday\">\n                Wednesday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Thursday\">\n                Thursday\n              </MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n            <br />\n            <br />\n            <textarea\n              className=\"crud-input\"\n              rows=\"3\"\n              cols=\"40\"\n              value={Reason}\n              onChange={(event) => {\n                setReason(event.target.value);\n              }}\n            ></textarea>\n          </FormControl>\n        </div>\n        <Button\n          variant=\"success\"\n          className=\"crud-submit crud-add-btn green\"\n          disabled={NewDayOff === \"\" ? true : false}\n          onClick={handleSubmit}\n        >\n          Send\n        </Button>\n      </div>\n    </div>\n  );\n}\nexport default ChangeDayOff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx",["408","409","410","411","412","413","414","415"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx",["416"],"import React, { useState } from \"react\";\n\nfunction Received() {\n  return <div>\n   <h1>hello world</h1>\n  </div>;\n}\nexport default Received;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx",["417","418","419"],"import React, { useState, useEffect } from \"react\";\nimport { axios } from \"../helpers/axios\"\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Button from '@material-ui/core/Button';\nimport MaterialTable from \"material-table\";\nimport { Grid } from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Fade from \"react-reveal/Fade\";\n\nfunction SlotLinkingCC() {\n    const {addToast} = useToasts(); \n    const [rows,setRows] = useState([]);\n    const [reqIDRes,setReqIDRes] = useState(0);\n    const switchDay = (day)=>{\n        switch(day){\n            case 1: return \"Monday\";\n            case 2: return \"Tuesday\";\n            case 3: return \"Wednesday\";\n            case 4: return \"Thursday\";\n            case 5: return \"Friday\";\n            case 6: return \"Saturday\";\n            default: return \"Sunday\"\n        }\n    }\n    useEffect(async()=>{\n        try{\n            const response = await axios.get(`${link}/requests/viewSlotRequest`);\n            if(response.data.error){\n                addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n            }else{\n                let myRequests = response.data.data;\n                let index = 1;\n                myRequests.map((req)=>{\n                    req.id = index++;\n                    let dateConvert = new Date(req.date);\n                    req.time =  (dateConvert.getHours()<10?\"0\":\"\") + dateConvert.getHours() +\":\"\n                                + (dateConvert.getMinutes()<10?\"0\":\"\") + dateConvert.getMinutes();\n                    req.day = switchDay(dateConvert.getDay());\n\n                })\n                console.log(myRequests);\n                setRows(myRequests)\n            }\n        }catch(e){\n            console.log('~ err', e);\n            document.location.href = window.location.origin + \"/unauthorized\";\n        }\n    },[reqIDRes])\n    const useStyles = makeStyles((theme)=>({\n        acceptButton:{\n            backgroundColor:\"#00c458\",\n            color: \"white\"\n            // marginLeft:\"20px\"\n        },\n        rejecttButton:{\n            backgroundColor:\"#ff2638\",\n            color: \"white\"\n            // marginLeft:\"20px\"\n        },\n    }))\n\n    const handleSubmit = async (e,rowData) =>{\n        let submittedStatus = e.currentTarget.value;\n        try{\n            const response = await axios.put(`${link}/requests/acceptRejectSlotLinking`,\n            {\n                reqNumber: rowData.id,\n                status: submittedStatus\n            });\n            if(response.data.error){\n                addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n            }else{\n                if(submittedStatus === \"accepted\" && response.data.data === \"The slot-linking request is rejected successfully\"){\n                    addToast(`The slot-linking request is rejected since there is no locations of type ${rowData.locationType} at the requested time.`,\n                    {appearance: 'warning',autoDismiss: true});\n                }else{\n                    addToast(response.data.data, {appearance: 'success',autoDismiss: true});\n                }\n                setReqIDRes(rowData.id)\n            }\n        }catch(e){\n            console.log('~ err', e);\n            document.location.href = window.location.origin + \"/unauthorized\";\n        }\n    }\n    const classes = useStyles();\n    return (\n        <div className=\"my-table\">\n        <Fade>\n        <h3 className=\"general-header\">Slot Requests</h3>\n        <hr className=\"general-line\" />\n        <Grid container justify = \"center\" alignItems = \"center\" spacing = {2}>\n            <Grid item xs = {10} sm ={10} md = {10}>\n                <MaterialTable\n                    title=\"\"\n                    columns={[\n                        { title: \"Course name\", field: \"coursename\" },\n                        { title: \"Day\", field: \"day\" },\n                        { title: \"Time\", field: \"time\" },\n                        { title: \"Location type\", field: \"locationType\"},\n                        { title: \"Sender\", field: \"sender.gucId\"},\n                        { title: \"Status\", field: \"status\"},\n                        { title: \"Subject\", field: \"subject\"},\n                    ]}\n                    data={rows}\n                    actions={[\n                        {\n                        icon: 'save',\n                        tooltip: 'Save User',\n                        onClick: (event, rowData) => handleSubmit(event,rowData)\n                        }\n                    ]}\n                    options={{\n                        headerStyle: {\n                        backgroundColor: '#01579b',\n                        color: '#FFF'\n                        }\n                    }}\n                    components={{\n                        Action: props => (\n                            <div style = {{width:\"150px\"}}>\n                                <Button\n                                    onClick={(event) => props.action.onClick(event, props.data)}\n                                    // color=\"primary\"\n                                    // class = \"green\"\n                                    // style = {{backgroundColor: \"#058c42\"}}\n                                    className = {classes.acceptButton}\n                                    variant=\"contained\"\n                                    style={{textTransform: 'none'}}\n                                    size=\"small\"\n                                    value = \"accepted\"\n                                    disabled = {props.data.status === \"pending\"?false:true}\n                                >\n                                    Accept\n                                </Button>\n                                &nbsp;&nbsp;\n                                <Button\n                                    onClick={(event) => props.action.onClick(event, props.data)}\n                                    // color=\"secondary\"\n                                    className = {classes.rejecttButton}\n                                    variant=\"contained\"\n                                    style={{textTransform: 'none'}}\n                                    size=\"small\"\n                                    value = \"rejected\"\n                                    disabled = {props.data.status === \"pending\"?false:true}\n                                >\n                                    Reject\n                                </Button>\n                            </div>\n                        ),\n                    }}/>\n            </Grid>\n        </Grid>\n        </Fade>\n        </div>\n    )\n}\n\nexport default SlotLinkingCC\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/viewReq.jsx",["420","421","422"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/Request.jsx",[],{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","severity":1,"message":"428","line":4,"column":17,"nodeType":"429","messageId":"430","endLine":4,"endColumn":25},{"ruleId":"427","severity":1,"message":"431","line":4,"column":27,"nodeType":"429","messageId":"430","endLine":4,"endColumn":36},{"ruleId":"427","severity":1,"message":"432","line":29,"column":8,"nodeType":"429","messageId":"430","endLine":29,"endColumn":18},{"ruleId":"427","severity":1,"message":"433","line":68,"column":7,"nodeType":"429","messageId":"430","endLine":68,"endColumn":8},{"ruleId":"434","severity":1,"message":"435","line":121,"column":116,"nodeType":"436","endLine":124,"endColumn":19},{"ruleId":"437","severity":1,"message":"438","line":49,"column":6,"nodeType":"439","endLine":49,"endColumn":8,"suggestions":"440"},{"ruleId":"437","severity":1,"message":"438","line":136,"column":6,"nodeType":"439","endLine":136,"endColumn":8,"suggestions":"441"},{"ruleId":"437","severity":1,"message":"442","line":68,"column":6,"nodeType":"439","endLine":68,"endColumn":8,"suggestions":"443"},{"ruleId":"437","severity":1,"message":"438","line":144,"column":6,"nodeType":"439","endLine":144,"endColumn":8,"suggestions":"444"},{"ruleId":"437","severity":1,"message":"438","line":40,"column":6,"nodeType":"439","endLine":40,"endColumn":8,"suggestions":"445"},{"ruleId":"437","severity":1,"message":"438","line":73,"column":6,"nodeType":"439","endLine":73,"endColumn":8,"suggestions":"446"},{"ruleId":"423","replacedBy":"447"},{"ruleId":"425","replacedBy":"448"},{"ruleId":"427","severity":1,"message":"449","line":5,"column":10,"nodeType":"429","messageId":"430","endLine":5,"endColumn":22},{"ruleId":"427","severity":1,"message":"450","line":6,"column":10,"nodeType":"429","messageId":"430","endLine":6,"endColumn":22},{"ruleId":"427","severity":1,"message":"451","line":6,"column":24,"nodeType":"429","messageId":"430","endLine":6,"endColumn":39},{"ruleId":"427","severity":1,"message":"449","line":5,"column":10,"nodeType":"429","messageId":"430","endLine":5,"endColumn":22},{"ruleId":"427","severity":1,"message":"450","line":6,"column":10,"nodeType":"429","messageId":"430","endLine":6,"endColumn":22},{"ruleId":"427","severity":1,"message":"451","line":6,"column":24,"nodeType":"429","messageId":"430","endLine":6,"endColumn":39},{"ruleId":"427","severity":1,"message":"449","line":5,"column":10,"nodeType":"429","messageId":"430","endLine":5,"endColumn":22},{"ruleId":"427","severity":1,"message":"450","line":6,"column":10,"nodeType":"429","messageId":"430","endLine":6,"endColumn":22},{"ruleId":"427","severity":1,"message":"451","line":6,"column":24,"nodeType":"429","messageId":"430","endLine":6,"endColumn":39},{"ruleId":"427","severity":1,"message":"431","line":16,"column":27,"nodeType":"429","messageId":"430","endLine":16,"endColumn":36},{"ruleId":"427","severity":1,"message":"452","line":17,"column":10,"nodeType":"429","messageId":"430","endLine":17,"endColumn":23},{"ruleId":"427","severity":1,"message":"453","line":18,"column":10,"nodeType":"429","messageId":"430","endLine":18,"endColumn":20},{"ruleId":"427","severity":1,"message":"454","line":35,"column":10,"nodeType":"429","messageId":"430","endLine":35,"endColumn":20},{"ruleId":"427","severity":1,"message":"455","line":35,"column":22,"nodeType":"429","messageId":"430","endLine":35,"endColumn":35},{"ruleId":"456","severity":1,"message":"457","line":76,"column":12,"nodeType":"458","messageId":"459","endLine":76,"endColumn":14},{"ruleId":"456","severity":1,"message":"457","line":78,"column":16,"nodeType":"458","messageId":"459","endLine":78,"endColumn":18},{"ruleId":"456","severity":1,"message":"457","line":80,"column":16,"nodeType":"458","messageId":"459","endLine":80,"endColumn":18},{"ruleId":"456","severity":1,"message":"457","line":83,"column":14,"nodeType":"458","messageId":"459","endLine":83,"endColumn":16},{"ruleId":"456","severity":1,"message":"457","line":86,"column":14,"nodeType":"458","messageId":"459","endLine":86,"endColumn":16},{"ruleId":"456","severity":1,"message":"457","line":89,"column":15,"nodeType":"458","messageId":"459","endLine":89,"endColumn":17},{"ruleId":"456","severity":1,"message":"457","line":92,"column":15,"nodeType":"458","messageId":"459","endLine":92,"endColumn":17},{"ruleId":"456","severity":1,"message":"457","line":95,"column":16,"nodeType":"458","messageId":"459","endLine":95,"endColumn":18},{"ruleId":"423","replacedBy":"460"},{"ruleId":"425","replacedBy":"461"},{"ruleId":"427","severity":1,"message":"431","line":2,"column":27,"nodeType":"429","messageId":"430","endLine":2,"endColumn":36},{"ruleId":"437","severity":1,"message":"438","line":98,"column":6,"nodeType":"439","endLine":98,"endColumn":13,"suggestions":"462"},{"ruleId":"437","severity":1,"message":"438","line":50,"column":7,"nodeType":"439","endLine":50,"endColumn":9,"suggestions":"463"},{"ruleId":"437","severity":1,"message":"438","line":76,"column":7,"nodeType":"439","endLine":76,"endColumn":9,"suggestions":"464"},{"ruleId":"465","severity":1,"message":"466","line":94,"column":13,"nodeType":"467","messageId":"468","endLine":100,"endColumn":14},{"ruleId":"437","severity":1,"message":"438","line":29,"column":6,"nodeType":"439","endLine":29,"endColumn":8,"suggestions":"469"},{"ruleId":"437","severity":1,"message":"470","line":199,"column":15,"nodeType":"471","endLine":212,"endColumn":6},{"ruleId":"437","severity":1,"message":"438","line":212,"column":7,"nodeType":"439","endLine":212,"endColumn":9,"suggestions":"472"},{"ruleId":"437","severity":1,"message":"473","line":217,"column":5,"nodeType":"439","endLine":217,"endColumn":94,"suggestions":"474"},{"ruleId":"475","severity":1,"message":"476","line":294,"column":50,"nodeType":"477","endLine":294,"endColumn":54},{"ruleId":"427","severity":1,"message":"478","line":79,"column":15,"nodeType":"429","messageId":"430","endLine":79,"endColumn":18},{"ruleId":"437","severity":1,"message":"479","line":144,"column":6,"nodeType":"439","endLine":144,"endColumn":8,"suggestions":"480"},{"ruleId":"427","severity":1,"message":"481","line":8,"column":10,"nodeType":"429","messageId":"430","endLine":8,"endColumn":14},{"ruleId":"427","severity":1,"message":"482","line":11,"column":9,"nodeType":"429","messageId":"430","endLine":11,"endColumn":25},{"ruleId":"456","severity":1,"message":"457","line":99,"column":43,"nodeType":"458","messageId":"459","endLine":99,"endColumn":45},{"ruleId":"456","severity":1,"message":"457","line":99,"column":43,"nodeType":"458","messageId":"459","endLine":99,"endColumn":45},{"ruleId":"456","severity":1,"message":"457","line":89,"column":60,"nodeType":"458","messageId":"459","endLine":89,"endColumn":62},{"ruleId":"427","severity":1,"message":"483","line":25,"column":10,"nodeType":"429","messageId":"430","endLine":25,"endColumn":15},{"ruleId":"427","severity":1,"message":"484","line":36,"column":9,"nodeType":"429","messageId":"430","endLine":36,"endColumn":14},{"ruleId":"456","severity":1,"message":"457","line":78,"column":22,"nodeType":"458","messageId":"459","endLine":78,"endColumn":24},{"ruleId":"456","severity":1,"message":"457","line":205,"column":52,"nodeType":"458","messageId":"459","endLine":205,"endColumn":54},{"ruleId":"456","severity":1,"message":"457","line":205,"column":74,"nodeType":"458","messageId":"459","endLine":205,"endColumn":76},{"ruleId":"456","severity":1,"message":"457","line":122,"column":54,"nodeType":"458","messageId":"459","endLine":122,"endColumn":56},{"ruleId":"456","severity":1,"message":"457","line":119,"column":54,"nodeType":"458","messageId":"459","endLine":119,"endColumn":56},{"ruleId":"456","severity":1,"message":"457","line":119,"column":69,"nodeType":"458","messageId":"459","endLine":119,"endColumn":71},{"ruleId":"456","severity":1,"message":"457","line":30,"column":21,"nodeType":"458","messageId":"459","endLine":30,"endColumn":23},{"ruleId":"427","severity":1,"message":"485","line":7,"column":8,"nodeType":"429","messageId":"430","endLine":7,"endColumn":14},{"ruleId":"427","severity":1,"message":"486","line":10,"column":9,"nodeType":"429","messageId":"430","endLine":10,"endColumn":19},{"ruleId":"427","severity":1,"message":"487","line":12,"column":10,"nodeType":"429","messageId":"430","endLine":12,"endColumn":14},{"ruleId":"427","severity":1,"message":"488","line":17,"column":12,"nodeType":"429","messageId":"430","endLine":17,"endColumn":20},{"ruleId":"427","severity":1,"message":"489","line":17,"column":21,"nodeType":"429","messageId":"430","endLine":17,"endColumn":32},{"ruleId":"437","severity":1,"message":"470","line":20,"column":15,"nodeType":"471","endLine":43,"endColumn":6},{"ruleId":"437","severity":1,"message":"438","line":43,"column":7,"nodeType":"439","endLine":43,"endColumn":9,"suggestions":"490"},{"ruleId":"427","severity":1,"message":"491","line":45,"column":8,"nodeType":"429","messageId":"430","endLine":45,"endColumn":20},{"ruleId":"427","severity":1,"message":"428","line":1,"column":17,"nodeType":"429","messageId":"430","endLine":1,"endColumn":25},{"ruleId":"437","severity":1,"message":"470","line":26,"column":15,"nodeType":"471","endLine":49,"endColumn":6},{"ruleId":"492","severity":1,"message":"493","line":34,"column":37,"nodeType":"471","messageId":"494","endLine":34,"endColumn":39},{"ruleId":"437","severity":1,"message":"438","line":49,"column":7,"nodeType":"439","endLine":49,"endColumn":17,"suggestions":"495"},{"ruleId":"427","severity":1,"message":"428","line":1,"column":17,"nodeType":"429","messageId":"430","endLine":1,"endColumn":25},{"ruleId":"427","severity":1,"message":"487","line":2,"column":10,"nodeType":"429","messageId":"430","endLine":2,"endColumn":14},{"ruleId":"427","severity":1,"message":"496","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},"no-native-reassign",["497"],"no-negated-in-lhs",["498"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'checkLogin' is defined but never used.","'t' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["499"],["500"],"React Hook useEffect has missing dependencies: 'addToast' and 'courses.data.data'. Either include them or remove the dependency array.",["501"],["502"],["503"],["504"],["497"],["498"],"'MdLocationOn' is defined but never used.","'FaUniversity' is defined but never used.","'FaClipboardList' is defined but never used.","'CSSTransition' is defined but never used.","'Dropdwonme' is defined but never used.","'activeMenu' is assigned a value but never used.","'setActiveMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["497"],["498"],["505"],["506"],["507"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["508"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["509"],"React Hook useEffect has a missing dependency: 'handleButtonEnable'. Either include it or remove the dependency array.",["510"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'props.gucId', and 'props.id'. Either include them or remove the dependency array.",["511"],"'type' is assigned a value but never used.","'handleSelectType' is assigned a value but never used.","'check' is assigned a value but never used.","'array' is assigned a value but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'link' is defined but never used.","'reqIDRes' is assigned a value but never used.","'setReqIDRes' is assigned a value but never used.",["512"],"'handleSubmit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["513"],"'axiosCall' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"514","fix":"515"},{"desc":"514","fix":"516"},{"desc":"517","fix":"518"},{"desc":"514","fix":"519"},{"desc":"514","fix":"520"},{"desc":"514","fix":"521"},{"desc":"522","fix":"523"},{"desc":"514","fix":"524"},{"desc":"514","fix":"525"},{"desc":"514","fix":"526"},{"desc":"514","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"514","fix":"532"},{"desc":"533","fix":"534"},"Update the dependencies array to be: [addToast]",{"range":"535","text":"536"},{"range":"537","text":"536"},"Update the dependencies array to be: [addToast, courses.data.data]",{"range":"538","text":"539"},{"range":"540","text":"536"},{"range":"541","text":"536"},{"range":"542","text":"536"},"Update the dependencies array to be: [addToast, props]",{"range":"543","text":"544"},{"range":"545","text":"536"},{"range":"546","text":"536"},{"range":"547","text":"536"},{"range":"548","text":"536"},"Update the dependencies array to be: [courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",{"range":"549","text":"550"},"Update the dependencies array to be: [addToast, props.gucId, props.id]",{"range":"551","text":"552"},{"range":"553","text":"536"},"Update the dependencies array to be: [addToast, reqIDRes]",{"range":"554","text":"555"},[1644,1646],"[addToast]",[4219,4221],[2253,2255],"[addToast, courses.data.data]",[4646,4648],[1226,1228],[2510,2512],[2996,3003],"[addToast, props]",[1627,1629],[2325,2327],[791,793],[7971,7973],[8037,8126],"[courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",[4356,4358],"[addToast, props.gucId, props.id]",[1353,1355],[1912,1922],"[addToast, reqIDRes]"]