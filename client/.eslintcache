[{"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/index.js":"1","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/reportWebVitals.js":"2","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/App.js":"3","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Location.jsx":"4","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Department.jsx":"5","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx":"6","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Faculty.jsx":"7","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/SideBar.jsx":"8","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Homepage.jsx":"9","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Login.jsx":"10","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/NavBar.jsx":"11","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Course.jsx":"12","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/ChangePassword.jsx":"13","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx":"14","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx":"15","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx":"16","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff.jsx":"17","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Profile.jsx":"18","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx":"19","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx":"20","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx":"21","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/test.jsx":"22","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/constants.js":"23","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/auth.js":"24","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/checkLogin.js":"25","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axiosCall.js":"26","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/setAuthToken.js":"27","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Add.jsx":"28","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Delete.jsx":"29","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Update.jsx":"30","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/UpdateLocation.jsx":"31","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/DeleteLocation.jsx":"32","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx":"33","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx":"34","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx":"35","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/AddLocation.jsx":"36","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceRecord.jsx":"37","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/AddDepartment.jsx":"38","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx":"39","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx":"40","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx":"41","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx":"42","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx":"43","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx":"44","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/DeleteCourse.jsx":"45","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/AddCourse.jsx":"46","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/UpdateCourse.jsx":"47","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axios.js":"48","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys.js":"49","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys_dev.js":"50","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Send.jsx":"51","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Accept.jsx":"52","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/View.jsx":"53","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/send.jsx":"54","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/NewStaffMember.jsx":"55","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx":"56","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/StaffProfile.jsx":"57","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceTable.jsx":"58","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx":"59","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx":"60","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx":"61","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx":"62","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Schedule.jsx":"63","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/RequestsDropDown.jsx":"64","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx":"65","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx":"66","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx":"67","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx":"68","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx":"69","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx":"70","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx":"71","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx":"72","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx":"73","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx":"74","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx":"75","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx":"76","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/viewReq.jsx":"77","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/Request.jsx":"78","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/InstructorAssignment.jsx":"79","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewTeachingAssignments.jsx":"80","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/viewRequests.jsx":"81","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/styles/StyledComponents.js":"82","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/Request.jsx":"83","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Notification.jsx":"84"},{"size":266,"mtime":1609599311000,"results":"85","hashOfConfig":"86"},{"size":362,"mtime":1609599311000,"results":"87","hashOfConfig":"86"},{"size":7197,"mtime":1610200177073,"results":"88","hashOfConfig":"86"},{"size":1626,"mtime":1609609006093,"results":"89","hashOfConfig":"86"},{"size":1651,"mtime":1609609006092,"results":"90","hashOfConfig":"86"},{"size":640,"mtime":1609609006000,"results":"91","hashOfConfig":"86"},{"size":1609,"mtime":1609609006092,"results":"92","hashOfConfig":"86"},{"size":2401,"mtime":1610106396375,"results":"93","hashOfConfig":"86"},{"size":7183,"mtime":1610200177102,"results":"94","hashOfConfig":"86"},{"size":3756,"mtime":1610200177102,"results":"95","hashOfConfig":"86"},{"size":1921,"mtime":1610200177079,"results":"96","hashOfConfig":"86"},{"size":1583,"mtime":1609777429503,"results":"97","hashOfConfig":"86"},{"size":7639,"mtime":1610106396463,"results":"98","hashOfConfig":"86"},{"size":560,"mtime":1609963607895,"results":"99","hashOfConfig":"86"},{"size":2627,"mtime":1610106396468,"results":"100","hashOfConfig":"86"},{"size":803,"mtime":1610106396461,"results":"101","hashOfConfig":"86"},{"size":6549,"mtime":1609963607896,"results":"102","hashOfConfig":"86"},{"size":9422,"mtime":1610200177103,"results":"103","hashOfConfig":"86"},{"size":12407,"mtime":1610106396482,"results":"104","hashOfConfig":"86"},{"size":2694,"mtime":1610200177098,"results":"105","hashOfConfig":"86"},{"size":6546,"mtime":1610200177096,"results":"106","hashOfConfig":"86"},{"size":5487,"mtime":1609777429525,"results":"107","hashOfConfig":"86"},{"size":399,"mtime":1610200177093,"results":"108","hashOfConfig":"86"},{"size":547,"mtime":1609963607877,"results":"109","hashOfConfig":"86"},{"size":575,"mtime":1609963607888,"results":"110","hashOfConfig":"86"},{"size":1039,"mtime":1609963607878,"results":"111","hashOfConfig":"86"},{"size":257,"mtime":1609777429502,"results":"112","hashOfConfig":"86"},{"size":434,"mtime":1610106396372,"results":"113","hashOfConfig":"86"},{"size":460,"mtime":1610106396373,"results":"114","hashOfConfig":"86"},{"size":455,"mtime":1610106396375,"results":"115","hashOfConfig":"86"},{"size":4714,"mtime":1610106396443,"results":"116","hashOfConfig":"86"},{"size":3427,"mtime":1610106396387,"results":"117","hashOfConfig":"86"},{"size":2016,"mtime":1610106396381,"results":"118","hashOfConfig":"86"},{"size":3402,"mtime":1610106396383,"results":"119","hashOfConfig":"86"},{"size":2598,"mtime":1610106396382,"results":"120","hashOfConfig":"86"},{"size":3287,"mtime":1610200177090,"results":"121","hashOfConfig":"86"},{"size":697,"mtime":1609777429483,"results":"122","hashOfConfig":"86"},{"size":4326,"mtime":1610106396379,"results":"123","hashOfConfig":"86"},{"size":7480,"mtime":1610200177087,"results":"124","hashOfConfig":"86"},{"size":4081,"mtime":1610200177087,"results":"125","hashOfConfig":"86"},{"size":1998,"mtime":1610111986507,"results":"126","hashOfConfig":"86"},{"size":3282,"mtime":1610106396459,"results":"127","hashOfConfig":"86"},{"size":1188,"mtime":1609777429494,"results":"128","hashOfConfig":"86"},{"size":2168,"mtime":1610106396457,"results":"129","hashOfConfig":"86"},{"size":5643,"mtime":1610200177086,"results":"130","hashOfConfig":"86"},{"size":4609,"mtime":1610200177085,"results":"131","hashOfConfig":"86"},{"size":7955,"mtime":1610200177086,"results":"132","hashOfConfig":"86"},{"size":395,"mtime":1609777429495,"results":"133","hashOfConfig":"86"},{"size":137,"mtime":1609609006087,"results":"134","hashOfConfig":"86"},{"size":515,"mtime":1610125888256,"results":"135","hashOfConfig":"86"},{"size":4100,"mtime":1610106396374,"results":"136","hashOfConfig":"86"},{"size":350,"mtime":1609795178942,"results":"137","hashOfConfig":"86"},{"size":441,"mtime":1610106396376,"results":"138","hashOfConfig":"86"},{"size":859,"mtime":1609846416030,"results":"139","hashOfConfig":"86"},{"size":10587,"mtime":1610106396486,"results":"140","hashOfConfig":"86"},{"size":916,"mtime":1609963607896,"results":"141","hashOfConfig":"86"},{"size":13344,"mtime":1610200177104,"results":"142","hashOfConfig":"86"},{"size":18149,"mtime":1610200177078,"results":"143","hashOfConfig":"86"},{"size":4657,"mtime":1610106396477,"results":"144","hashOfConfig":"86"},{"size":9130,"mtime":1610111986507,"results":"145","hashOfConfig":"86"},{"size":896,"mtime":1610106396495,"results":"146","hashOfConfig":"86"},{"size":16801,"mtime":1610111986508,"results":"147","hashOfConfig":"86"},{"size":9531,"mtime":1610200177082,"results":"148","hashOfConfig":"86"},{"size":4244,"mtime":1610106396373,"results":"149","hashOfConfig":"86"},{"size":1365,"mtime":1610223785805,"results":"150","hashOfConfig":"86"},{"size":3005,"mtime":1610106396448,"results":"151","hashOfConfig":"86"},{"size":3019,"mtime":1610106396448,"results":"152","hashOfConfig":"86"},{"size":2698,"mtime":1610106396447,"results":"153","hashOfConfig":"86"},{"size":6240,"mtime":1610107414143,"results":"154","hashOfConfig":"86"},{"size":2184,"mtime":1610106396446,"results":"155","hashOfConfig":"86"},{"size":3658,"mtime":1610106396451,"results":"156","hashOfConfig":"86"},{"size":3596,"mtime":1610106396672,"results":"157","hashOfConfig":"86"},{"size":3503,"mtime":1610106396673,"results":"158","hashOfConfig":"86"},{"size":3568,"mtime":1610223785806,"results":"159","hashOfConfig":"86"},{"size":6904,"mtime":1610223841915,"results":"160","hashOfConfig":"86"},{"size":6704,"mtime":1610216593643,"results":"161","hashOfConfig":"86"},{"size":11775,"mtime":1610210394908,"results":"162","hashOfConfig":"86"},{"size":1317,"mtime":1610141649230,"results":"163","hashOfConfig":"86"},{"size":11227,"mtime":1610200177095,"results":"164","hashOfConfig":"86"},{"size":15543,"mtime":1610200177100,"results":"165","hashOfConfig":"86"},{"size":5998,"mtime":1610200177100,"results":"166","hashOfConfig":"86"},{"size":743,"mtime":1610200177106,"results":"167","hashOfConfig":"86"},{"size":9112,"mtime":1610203251103,"results":"168","hashOfConfig":"86"},{"size":2454,"mtime":1610200177080,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"c5tsfr",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"172"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"172"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"172"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"172"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"172"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"172"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"285"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"172"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"172"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"172"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"172"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"172"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"172"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"172"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"172"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"172"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/index.js",[],["365","366"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/reportWebVitals.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/App.js",["367","368","369"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Location.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Department.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Faculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/SideBar.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Homepage.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Login.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/NavBar.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Course.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/ChangePassword.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx",["370"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\n// import {axiosInstance} from '../helpers/setAuthToken'\n\nfunction InstCourseCoverage() {\n  const [rows, setRows] = useState([]);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            setRows(coverageDisplay);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-style\">\n      <h7 class=\"coverage-title\">Courses Coverage</h7>\n      <div class=\"line\"></div>\n      <TableContainer class=\"table-container\" component={Paper}>\n        <Table class=\"table-style\" aria-label=\"customized table\">\n          <TableHead className=\"dark-blue\">\n            <TableRow>\n              <TableCell>Course Name</TableCell>\n              <TableCell align=\"center\">Coverage</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.course_name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.course_name}\n                </TableCell>\n                <TableCell align=\"center\">{row.course_coverage}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstCourseCoverage;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx",["371"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstructorSlotsAssigned() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"13:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"15:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/staffMembers/viewMySchedule`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              switch (slotsDisplay[i].day) {\n                case \"Saturday\":\n                  sat.push(slotsDisplay[i]);\n                  break;\n                case \"Sunday\":\n                  sun.push(slotsDisplay[i]);\n                  break;\n                case \"Monday\":\n                  mon.push(slotsDisplay[i]);\n                  break;\n                case \"Tuesday\":\n                  tues.push(slotsDisplay[i]);\n                  break;\n                case \"Wednesday\":\n                  wed.push(slotsDisplay[i]);\n                  break;\n                case \"Thursday\":\n                  thurs.push(slotsDisplay[i]);\n                  break;\n                default:\n                  break;\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-styleS\">\n      <h7 class=\"slots-titleS\">Academic Schedule</h7>\n      <div class=\"slots-lineS\"></div>\n      <TableContainer class=\"table-slots-containerS\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"yellow\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st\n                <br /> 08:15 - 09:45\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd\n                <br /> 10:00 - 11:30\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd\n                <br /> 11:45 - 13:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th\n                <br /> 13:45 - 15:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th\n                <br /> 15:45 - 17:15\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff.jsx",["372"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport { link } from \"../helpers/constants.js\";\nimport { Button } from \"@material-ui/core\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction Staff() {\n  const [data, setData] = useState([]); //table data\n  const [courses, setCourses] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\"get\", `/staffMembers/all/all`);\n\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n              };\n            });\n            setData(data);\n            let data2 = courses.data.data;\n            let data3 = data2.push({ course: \"all\" });\n            console.log(data3);\n            setCourses(data2);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          //   document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={11}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={35}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n              ]}\n              align=\"center\"\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"Save User\",\n                  onClick: (event, rowData) => {\n                    document.location.href =\n                      window.location.origin +\n                      `/viewAttendanceRecord/${rowData.id}`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFF\",\n                  color: \"#000\",\n                  letterSpacing: \"0.1em\",\n                  fontSize: \"18px\",\n                  margin: \"0\",\n                  padding: \"0 0 10px 0\",\n                },\n                rowStyle: {\n                  fontSize: \"15px\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <Button\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    variant=\"contained\"\n                    style={{\n                      textTransform: \"none\",\n                      background: \"#045CC8\",\n                      color: \"#fff\",\n                    }}\n                    size=\"small\"\n                  >\n                    Attendance\n                  </Button>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Staff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Profile.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx",["373"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import TablePagination from '@material-ui/core/TablePagination';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstructorSlotsAssigned() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"01:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"03:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/slotsAssignment`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data.data;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              for (var j = 0; j < slotsDisplay[i].course_slots.length; j++) {\n                var obj = {\n                  coursename: slotsDisplay[i].course_name,\n                  day: slotsDisplay[i].course_slots[j].day,\n                  time: slotsDisplay[i].course_slots[j].time,\n                  location: slotsDisplay[i].course_slots[j].location,\n                };\n                switch (obj.day) {\n                  case \"Saturday\":\n                    sat.push(obj);\n                    break;\n                  case \"Sunday\":\n                    sun.push(obj);\n                    break;\n                  case \"Monday\":\n                    mon.push(obj);\n                    break;\n                  case \"Tuesday\":\n                    tues.push(obj);\n                    break;\n                  case \"Wednesday\":\n                    wed.push(obj);\n                    break;\n                  case \"Thursday\":\n                    thurs.push(obj);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-style\">\n      <h7 class=\"slots-title\">Slots</h7>\n      <div class=\"slots-line\"></div>\n      <TableContainer class=\"table-slots-container\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"dark-blue\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st Slot <br /> (08:15 - 09:45)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd Slot <br /> (10:00 - 11:30)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd Slot <br /> (11:45 - 13:15)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th Slot <br /> (13:45 - 15:15)\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th Slot <br /> (15:45 - 17:15)\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupied\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx",["374"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction ViewCourseCoverage() {\n  const [data, setData] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/viewCourseCoverage`\n          );\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data;\n            setData(data);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">View course coverage</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Course name\", field: \"course\" },\n                { title: \"Coverage %\", field: \"coverage\" },\n              ]}\n              data={data}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#045CC8\",\n                  color: \"#FFF\",\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\nexport default ViewCourseCoverage;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx",["375"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport { Button } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction ViewAllStaff() {\n  const [data, setData] = useState([]); //table data\n  const [courses, setCourses] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/getAllStaffMembers/all`\n          );\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n          const courses = await axiosCall(\"get\", `${link}/departments/courses`);\n\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n              };\n            });\n            setData(data);\n            let data2 = courses.data.data;\n            let data3 = data2.push({ course: \"all\" });\n            console.log(data3);\n            setCourses(data2);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  async function handleOnChange(event) {\n    try {\n      const res = await axiosCall(\n        \"get\",\n        `${link}/departments/getAllStaffMembers/${event.course}`\n      );\n      const locations = await axiosCall(\"get\", `${link}/locations/room/all`);\n\n      let data = res.data.data.map((staff) => {\n        return {\n          name: staff.name,\n          gucId: staff.gucId,\n          gender: staff.gender,\n          email: staff.email,\n          role: staff.role,\n          salary: staff.salary,\n          dayOff: staff.dayOff,\n          id: staff._id,\n          location: locations.data.data\n            .map((location) => {\n              if (staff.officeLocation === location._id) {\n                return location.location;\n              } else return null;\n            })\n            .filter((location) => location !== null),\n        };\n      });\n      setData(data);\n    } catch (err) {\n      console.log(\"~err\", err);\n    }\n  }\n\n  return (\n    // styling\n    <div>\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={40}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n              ]}\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"Save User\",\n                  onClick: (event, rowData) => {\n                    document.location.href = `${rowData.id}/viewSchedule`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFFFFF\",\n                  color: \"#000000\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <Button\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ textTransform: \"none\" }}\n                    size=\"small\"\n                  >\n                    View schedule\n                  </Button>\n                ),\n                Toolbar: (props) => (\n                  <Autocomplete\n                    size=\"small\"\n                    id=\"debug\"\n                    options={courses}\n                    onChange={(event, newValue) => {\n                      handleOnChange(newValue);\n                    }}\n                    getOptionLabel={(option) => option.course}\n                    style={{ width: \"30%\", margin: \"auto\" }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"View staff members per course\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default ViewAllStaff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/test.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/constants.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/auth.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/checkLogin.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axiosCall.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/setAuthToken.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Add.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Delete.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Update.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/UpdateLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/DeleteLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/location/AddLocation.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceRecord.jsx",[],["376","377"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/AddDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx",["378","379","380"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction HODMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"courseCoverage\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default HODMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx",["381","382","383"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction TAMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"course\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default TAMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx",["384","385","386"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction CIMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"course\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default CIMenuItems;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/DeleteCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/AddCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/course/UpdateCourse.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/helpers/axios.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/config/keys_dev.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Send.jsx",["387","388","389","390","391","392","393","394","395","396","397","398","399"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Accept.jsx",[],["400","401"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/View.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/send.jsx",["402"],"//drop down list\nimport React, { useState, useEffect } from \"react\";\n \nfunction Sendd(){\n       const[choosenReq,setChosen ] =useState(\"\")                       \n  return( \n              <select \n                        value={choosenReq} \n                        onChange={(event) => {setChosen(event.target.value);}}\n                        \n            >\n                        <option value=\"Replacement Request\">Replacement Request</option>\n                        <option value=\"Slot Request\">Slot Requesty</option>\n                        <option value=\"Change DayOff\">Change DayOff</option>\n                        <option value=\"Leave Request\">Leave Request</option>   \n                    </select> \n                    \n                    \n                    \n                    )\n                    }\n                    export default Sendd;","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/NewStaffMember.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/StaffProfile.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/AttendanceTable.jsx",["403"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport Fade from \"react-reveal/Fade\";\nimport { IoFilter, IoCloseSharp } from \"react-icons/io5\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  TimePicker,\n} from \"@material-ui/pickers\";\n\nfunction AttendanceTable(props) {\n  const [staff, setStaff] = useState([]);\n  const [HR, setHr] = useState(false);\n  const [originalData, setOriginalData] = useState([]);\n  const [data, setData] = useState([]); //table data\n  const [filtered, setFiltered] = useState(false);\n  const [selectedMonth, setMonth] = useState(\"Month\");\n\n  const { addToast } = useToasts();\n\n  const month = [\n    \"11 Jan - 10 Feb\", //0 1-2\n    \"11 Feb - 10 Mar\", //1 2-3\n    \"11 Mar - 10 Apr\", //2 3-4\n    \"11 Apr - 10 May\", //3 4-5\n    \"11 May - 10 Jun\", //4 5-6\n    \"11 Jun - 10 Jul\", //5 6-7\n    \"11 Jul - 10 Aug\", //6 7-8\n    \"11 Aug - 10 Sep\", //7 8-9\n    \"11 Sep - 10 Oct\", //8 9-10\n    \"11 Oct - 10 Nov\", //9 10-11\n    \"11 Nov - 10 Dec\", //10 11-12\n    \"11 Dec - 10 Jan\", //11 12-1\n  ];\n\n  const compare = (a, b) => {\n    const rec1 = a.date;\n    const rec2 = b.date;\n\n    let comparison = 0;\n    if (rec1 < rec2) {\n      comparison = 1;\n    } else if (rec1 > rec2) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n          let staff = \"\";\n          if (temp.data.data) staff = temp.data.data;\n\n          if (props.hr) setHr(true);\n\n          if (staff) {\n            setStaff(staff);\n            let records = staff.attendanceRecords;\n            // console.log(\n            //   \"🚀 ~ file: AttendanceTable.jsx ~ line 73 ~ fetchData ~ records\",\n            //   records\n            // );\n            // for (let i = 0; i < records.length; i++) {\n            //   console.log(records[i].endTime);\n            //   let nweDate = \"2021-01-01T\" + records[i].endTime;\n            //   records[i].endTime = new Date(nweDate);\n\n            //   // console.log(t);\n            // }\n\n            //sorted .. from most to least recent\n            const result = records.sort(compare);\n            setOriginalData(result);\n            setData(result);\n          } else {\n            addToast(\"Error occurred, please try again later\", {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n        }\n      }\n      fetchData();\n    }\n  }, [props]);\n\n  const handleFilter = async () => {\n    try {\n      if (selectedMonth === \"Month\") {\n      } else {\n        setFiltered(true);\n        let term = parseInt(month.indexOf(selectedMonth));\n        if (term > -1) {\n          let month1 = term + 1;\n          let month2;\n          if (month1 === 12) month2 = 1;\n          else month2 = month1 + 1;\n\n          const res = await axiosCall(\n            \"get\",\n            `attendance/viewAttendance/${month1}/${month2}`\n          );\n\n          addToast(\"filtered successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n\n          return setData(res.data);\n        } else {\n          addToast(\"Sorry this is not a valid month\", {\n            appearance: \"danger\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (error) {\n      addToast(\"crashed\", {\n        appearance: \"danger\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  const handleRemoveFilter = async () => {\n    setData(originalData);\n    setFiltered(false);\n    setMonth(\"\");\n  };\n\n  const handleRowUpdate = async (newData, oldData) => {\n    //get number\n    const filtered = originalData.filter((rec) => rec.date === oldData.date);\n    let numberHere = 0;\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i]._id === oldData._id) {\n        numberHere = i + 1;\n        break;\n      }\n    }\n\n    const newSignIn = newData.startTime;\n    const newSignOut = newData.endTime;\n\n    if (typeof newSignIn === \"object\" && typeof newSignOut === \"object\") {\n      return addToast(\"Sorry you cannot both signIn and sign Out\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else if (!oldData.startTime && newData.startTime) {\n      //changed signIn\n      let time = newData.startTime.toLocaleTimeString().split(\" \");\n      let signIn = time[0];\n      let splitted = time[0].split(\":\");\n      if (time[1] === \"PM\") {\n        splitted[0] = parseInt(splitted[0]) + 12;\n      } else {\n        if (parseInt(splitted[0]) < 7) {\n          splitted[0] = 7;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n      }\n      signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n      if (signIn.length < 8) signIn = \"0\" + signIn;\n\n      const body = {\n        id: staff.gucId,\n        signIn: signIn,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (!oldData.endTime && newData.endTime) {\n      //changed signOut\n\n      let time = newData.endTime.toLocaleTimeString().split(\" \");\n      let signOut = time[0];\n      if (time[1] === \"PM\") {\n        let splitted = time[0].split(\":\");\n        splitted[0] = parseInt(splitted[0]) + 12;\n        if (splitted[0] > 19) {\n          splitted[0] = 19;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n        signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n      }\n      if (signOut.length < 8) signOut = \"0\" + signOut;\n\n      const body = {\n        id: staff.gucId,\n        signOut: signOut,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (\n      (typeof oldData.startTime === \"string\" &&\n        typeof newData.startTime === \"object\") ||\n      (typeof oldData.endTime === \"string\" &&\n        typeof newData.endTime === \"object\")\n    ) {\n      return addToast(\"You can not change existing records\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else {\n      return addToast(\"You did not change any record\", {\n        appearance: \"warning\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  const handleRowAdd = async (newData) => {\n    let input = newData.date;\n\n    if (!newData.date || !newData.startTime || !newData.endTime) {\n      return addToast(\"Please enter all details\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n\n    //day\n    let day;\n    switch (input.toString().split(\" \")[0]) {\n      case \"Sat\":\n        day = \"Saturday\";\n        break;\n      case \"Sun\":\n        day = \"Sunday\";\n        break;\n      case \"Mon\":\n        day = \"Monday\";\n        break;\n      case \"Tues\":\n        day = \"Tuesday\";\n        break;\n      case \"Wed\":\n        day = \"Wednesday\";\n        break;\n      case \"Thu\":\n        day = \"Thursday\";\n        break;\n      case \"Fri\":\n        return addToast(\"Sorry you cannot add a record on Friday\", {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      default:\n        break;\n    }\n\n    //date\n    let dayOfMonth =\n      input.getDate() > 9 ? input.getDate() : \"0\" + input.getDate();\n    let monthOfYear =\n      input.getMonth() + 1 > 9\n        ? input.getMonth() + 1\n        : \"0\" + (input.getMonth() + 1);\n\n    let date = input.getFullYear() + \"-\" + monthOfYear + \"-\" + dayOfMonth;\n\n    //signIn\n    let time = newData.startTime.toLocaleTimeString().split(\" \");\n    let signIn = time[0];\n    let splitted = time[0].split(\":\");\n    if (time[1] === \"PM\") {\n      splitted[0] = parseInt(splitted[0]) + 12;\n    } else {\n      if (parseInt(splitted[0]) < 7) {\n        splitted[0] = 7;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n    }\n    signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n    if (signIn.length < 8) signIn = \"0\" + signIn;\n\n    //signOut\n    time = newData.endTime.toLocaleTimeString().split(\" \");\n    let signOut = time[0];\n    if (time[1] === \"PM\") {\n      let splitted = time[0].split(\":\");\n      splitted[0] = parseInt(splitted[0]) + 12;\n      if (splitted[0] > 19) {\n        splitted[0] = 19;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n      signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n    }\n    if (signOut.length < 8) signOut = \"0\" + signOut;\n\n    const body = {\n      id: staff.gucId,\n      signIn: signIn,\n      signOut: signOut,\n      date: date,\n      day: day,\n      number: 1,\n    };\n\n    const res = await axiosCall(\"put\", \"attendance/addMissingSignInOut\", body);\n\n    if (res.data.data) {\n      addToast(\"Record updated successfully\", {\n        appearance: \"success\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n\n      let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n      let staffUpdated = \"\";\n      if (temp.data.data) staffUpdated = temp.data.data;\n\n      if (staffUpdated) {\n        let records = staffUpdated.attendanceRecords;\n\n        //sorted .. from most to least recent\n        const result = records.sort(compare);\n\n        setOriginalData(result);\n        setData(result);\n      }\n    }\n    if (res.data.error) {\n      addToast(res.data.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">{props.title}</h3>\n        <hr className=\"general-line\" />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <MaterialTable\n                title=\"\"\n                columns={[\n                  {\n                    title: \"Day\",\n                    field: \"day\",\n                    filtering: false,\n                  },\n                  {\n                    title: \"Date\",\n                    field: \"date\",\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign In\",\n                    field: \"startTime\",\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <TimePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign Out\",\n                    field: \"endTime\",\n                    sorting: false,\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <TimePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"leave\",\n                    field: \"absentsatisfied\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Absent Status\",\n                    field: \"absentStatus\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Description\",\n                    field: \"description\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                ]}\n                align=\"center\"\n                data={data}\n                options={{\n                  search: true,\n                  // filtering: true,\n                  sorting: true,\n                  actionsColumnIndex: -1,\n                  headerStyle: {\n                    backgroundColor: \"#FFF\",\n                    color: \"#000\",\n                    letterSpacing: \"0.1em\",\n                    fontSize: \"18px\",\n                    margin: \"0\",\n                    padding: \"0 0 10px 0\",\n                  },\n                  rowStyle: {\n                    fontSize: \"15px\",\n                  },\n                }}\n                components={{\n                  Toolbar: (props) => (\n                    <div className=\"select-table-container\">\n                      <MTableToolbar {...props} />\n                      <Select\n                        className=\"table-select month\"\n                        value={selectedMonth}\n                        onChange={(event) => setMonth(event.target.value)}\n                        placeholder=\"Month\"\n                      >\n                        <MenuItem className=\"\" value={\"Month\"} key={\"Month\"}>\n                          Month\n                        </MenuItem>\n                        {month.map((mon) => (\n                          <MenuItem className=\"\" value={mon} key={mon}>\n                            {mon}\n                          </MenuItem>\n                        ))}\n                      </Select>\n\n                      <IoFilter\n                        className=\"filter-icon\"\n                        onClick={() => handleFilter()}\n                      />\n                      {filtered ? (\n                        <IoCloseSharp\n                          className=\"filter-icon\"\n                          onClick={handleRemoveFilter}\n                        />\n                      ) : null}\n                    </div>\n                  ),\n                }}\n                editable={\n                  HR\n                    ? {\n                        // handle row add\n                        onRowAdd: (newData) =>\n                          new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                              handleRowAdd(newData, resolve);\n\n                              resolve();\n                            }, 1500);\n                          }),\n\n                        //to update row\n                        onRowUpdate: (newData, oldData) =>\n                          new Promise((resolve) => {\n                            setTimeout(() => {\n                              handleRowUpdate(newData, oldData);\n                              resolve();\n                            }, 1500);\n                          }),\n                      }\n                    : false\n                }\n              />\n            </Grid>\n          </Grid>\n        </MuiPickersUtilsProvider>\n      </Fade>\n    </div>\n  );\n}\n\nexport default AttendanceTable;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx",["404"],"import React, { useState, useEffect } from \"react\";\nimport { link } from '../helpers/constants';\n\nimport Button from '@material-ui/core/Button';\nimport {\n    FormControl,\n    InputLabel,\n    Select,\n    FormHelperText,\n    MenuItem,\n    Input,\n  } from \"@material-ui/core\";\n\nimport { useToasts } from 'react-toast-notifications'\nimport {axiosCall} from \"../helpers/axiosCall\";\n\n\nimport {axios} from '../helpers/axios';\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstrCourseAssignCC() {\n    const [courses,setCourses] = useState([]);\n    const [course,setCourse] = useState(\"\");\n    const [id,setID] = useState(\"\");\n    const {addToast} = useToasts();\n    useEffect(()=>{\n        async function fetchData() {\n        const loggedInUser = localStorage.getItem(\"user\");\n\t\tif (!loggedInUser) {\n\t\t  document.location.href = window.location.origin + \"/login\"; \n\t\t}else{\n            try{\n                const response = await axios.get(`${link}/academicMember/courseInstructor/courseCoverage`);\n                if(response.data.error){\n                    addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n                }else{\n                    const coverageDisplay = response.data.data;\n                    const coursesState = coverageDisplay.map((course)=>{\n                        return course.course_name;\n                    })\n                    setCourses(coursesState);\n                }\n            }catch(e){\n                console.log('~ err', e);\n                document.location.href = window.location.origin + \"/unauthorized\";\n            }\n        }\n    }\n    fetchData();\n    },[]);\n    const handleOnChange = (target) => {\n        setCourse(target.value);\n    };\n\n    const handleSubmit = async()=>{\n        try{\n            let response = await axiosCall(\"post\",`${link}/academicMember/courseInstructor/courseCoordinator`,\n            {\n                gucId: id,\n                courseName: course,\n            });\n\n            if(response.data.error){\n                addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\n            }else if(response.data.data){\n                addToast(`The academic member '${response.data.data.courseCoordinator}' is assigned successfully to be the course coordinator of the course '${response.data.data.courseName}'`,\n                 {appearance: 'success',autoDismiss: true});\n            }else{\n                addToast(\"The GUC ID should be written in the corrent format: 'role-IDNumber' e.g. HR-1\", {appearance: 'warning',autoDismiss: true});\n            }\n        }catch(e){\n            console.log('~ err', e);\n            document.location.href = window.location.origin + \"/unauthorized\";\n        }\n    }\n\n    return (\n        <div>\n        <h3 className=\"general-header\">Assign a Course Coordinator</h3>\n        <hr className=\"general-line\" />\n        <br/>\n        <div className=\"crud-inner-container\">\n        <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n            <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                handleOnChange(event.target);\n                }}\n            >\n                {courses.length > 0 &&\n                courses.map((coursename) => (\n                    <MenuItem\n                    className=\"crud-menuItem\"\n                    value={coursename}\n                    key={coursename}\n                    >\n                    {coursename}\n                    </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText className=\"crud-helperText\">\n                This field is required\n            </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n            <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n            />\n            <FormHelperText className=\"crud-helperText\">\n                This field is required\n            </FormHelperText>\n            </FormControl>\n        </div>\n\n        <Button\n            variant = \"success\"\n            className= \"crud-submit crud-add-btn green\"\n                        \n            disabled={id === \"\" || course === \"\"? true : false}\n            onClick={handleSubmit}\n        >\n            Assign\n        </Button>\n        </div>\n        </div>\n    )\n}\n\nexport default InstrCourseAssignCC\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx",["405","406"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../helpers/constants\";\n\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../helpers/axiosCall\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nimport Add from \"../components/Add\";\nimport Update from \"../components/Update\";\nimport Delete from \"../components/Delete\";\n\nfunction AcademicMemberCourseSlot() {\n  const [courses, setCourses] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [crudBtns, setBtns] = useState({\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [day, setDay] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [timing, setTiming] = useState(\"\");\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  const { addToast } = useToasts();\n\n  const handleOnChange = (target) => {\n    setCourse(target.value);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            const coursesState = coverageDisplay.map((course) => {\n              return course.course_name;\n            });\n            setCourses(coursesState);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      let response = null;\n      let optionSelected = \"\";\n      if (crudBtns.add) {\n        optionSelected = \"post\";\n      } else if (crudBtns.update) {\n        optionSelected = \"put\";\n      } else if (crudBtns.delete) {\n        optionSelected = \"delete\";\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      let slot = timing.substring(0, 3);\n      let convertedTiming = \"\";\n      switch (slot) {\n        case \"1st\":\n          convertedTiming = \"08:15 AM\";\n          break;\n        case \"2nd\":\n          convertedTiming = \"10:00 AM\";\n          break;\n        case \"3rd\":\n          convertedTiming = \"11:45 AM\";\n          break;\n        case \"4th\":\n          convertedTiming = \"01:45 PM\";\n          break;\n        case \"5th\":\n          convertedTiming = \"03:45 PM\";\n          break;\n      }\n      response = await axiosCall(\n        optionSelected,\n        `${link}/academicMember/courseInstructor/slotsAssignment`,\n        {\n          gucId: id,\n          courseName: course,\n          slot: {\n            day: day,\n            time: convertedTiming,\n          },\n        }\n      );\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        if (optionSelected === \"post\")\n          addToast(\"The slot assignment is added successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        else if (optionSelected === \"put\") {\n          addToast(\"The slot assignment is updated successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        } else {\n          addToast(\"The slot assignment is deleted successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  return (\n    <div className=\"crud-outer-container\">\n      <div className=\"crud-container\">\n        <Add\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: true,\n              update: false,\n              delete: false,\n            })\n          }\n        />\n        <Update\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: true,\n              delete: false,\n            })\n          }\n        />\n        <Delete\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: false,\n              delete: true,\n            })\n          }\n        />\n      </div>\n\n      {!crudBtns.add && !crudBtns.update && !crudBtns.delete ? null : (\n        <div className=\"crud-inner-container\">\n          <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                  handleOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Day</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={day}\n                onChange={(event) => {\n                  setDay(event.target.value);\n                }}\n              >\n                {weekDays.map((weekDay) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={weekDay}\n                    key={weekDay}\n                  >\n                    {weekDay}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Timing</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={timing}\n                onChange={(event) => {\n                  setTiming(event.target.value);\n                }}\n              >\n                {slotTiming.map((slotTime) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={slotTime}\n                    key={slotTime}\n                  >\n                    {slotTime}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n              <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n              />\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n          </div>\n\n          <Button\n            variant={\n              crudBtns.add ? \"success\" : crudBtns.update ? \"primary\" : \"danger\"\n            }\n            className={\n              crudBtns.add\n                ? \"crud-submit crud-add-btn green\"\n                : crudBtns.update\n                ? \"crud-submit crud-update-btn blue\"\n                : \"crud-submit crud-delete-btn red\"\n            }\n            disabled={\n              id === \"\" || timing === \"\" || day === \"\" || course === \"\"\n                ? true\n                : false\n            }\n            onClick={handleSubmit}\n          >\n            {crudBtns.add ? \"Assign\" : crudBtns.update ? \"Update\" : \"Delete\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AcademicMemberCourseSlot;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx",["407"],"import React, { useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Schedule from \"../../components/Schedule\";\nimport checkLogin from \"../../helpers/checkLogin\";\n\nfunction InstructorSlotsAssigned() {\n  const [id, setId] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n\n        //get user\n        const url = document.location.pathname.split(\"/\");\n        const id = url[url.length - 1];\n\n        setId(id);\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <div>{id ? <Schedule id={id} /> : null}</div>;\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx",["408","409","410","411"],"import React, { useState, useEffect } from \"react\";\n//Icons\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n//Components\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\n//CRUD\nimport { axios } from \"../../helpers/axios\";\nimport { link } from \"../../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../../helpers/axiosCall\";\n\n//Styling\nimport \"../../styles/_colorSchema.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction CourseSlotCRUD() {\n  //States needed\n  const [courses, setCourses] = useState([]); //To get the courses and put it in the list\n  const [course1, setCourse] = useState(\"\"); //The selected course\n  const [day, setDay] = useState(\"\"); //The day added-deleted\n  const [location, setLocation] = useState(\"\"); //The location added-deleted\n  const [timing, setTiming] = useState(\"\"); //The timing added-deleted\n  const [dayU, setDayU] = useState(\"\"); //The day updated\n  const [locationU, setLocationU] = useState(\"\"); //The location updated\n  const [timingU, setTimingU] = useState(\"\"); //The timing updated\n  const [optionSelected, setOptionSelected] = useState(\"add\"); //To keep track of the selected option\n  const [buttonEnabled, setButtonEnabled] = useState(true); //To know if we can enable the button\n\n  const { addToast } = useToasts();\n  const useStyles = makeStyles((theme) => ({\n    mainGridContainer: {\n      marginTop: \"150px\",\n    },\n    gridContainer: {\n      backgroundColor: \"white\",\n      boxShadow: \"0px 0px 15px 0px rgba(0, 0, 0, 0.64)\",\n      borderRadius: \"13px\",\n    },\n    courseSlotsDiv: {\n      width: \"60%\",\n      height: \"80%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      display: \"block\",\n    },\n    button: {\n      backgroundColor:\n        optionSelected === \"add\"\n          ? \"#058c42\"\n          : optionSelected === \"update\"\n          ? \"#045CC8\"\n          : \" #C81927\",\n      color: \"white\",\n    },\n    radio: {\n      \"&$checked\": {\n        color: \"#058c42\",\n      },\n    },\n    checked: {},\n  }));\n  const classes = useStyles();\n  //Constants for select options\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  //Handling components changes and update states\n  //1- Choose course\n  const handleOnChangeCourse = (newValue) => {\n    setCourse(newValue);\n  };\n  //2- Choose option\n  const handleOnChangeRadio = (e) => {\n    setOptionSelected(e.target.value);\n    if (e.target.value === \"add\" || e.target.value === \"delete\") {\n      setDayU(\"\");\n      setTimingU(\"\");\n      setLocationU(\"\");\n    }\n    // handleButtonEnable();\n  };\n  //3- Choose day\n  const handleOnChangeDay = (newValue) => {\n    setDay(newValue);\n  };\n  //3- Choose updated day\n  const handleOnChangeDayU = (newValue) => {\n    setDayU(newValue);\n  };\n  //4- Choose a timing\n  const handleOnChangeTiming = (newValue) => {\n    setTiming(newValue);\n    // handleButtonEnable();\n  };\n  //5- Choose an updated timing\n  const handleOnChangeTimingU = (newValue) => {\n    setTimingU(newValue);\n    // handleButtonEnable();\n  };\n  //6- Write a location\n  const handleOnChangeLocation = (e) => {\n    setLocation(e.target.value);\n    // handleButtonEnable();\n  };\n  //7- Write the updated location\n  const handleOnChangeLocationU = (e) => {\n    setLocationU(e.target.value);\n    // handleButtonEnable();\n  };\n  //8- Handling the submitting\n  const handleSubmit = async (e) => {\n    try {\n      let response = null;\n      if (optionSelected === \"add\") {\n        console.log(\"add\");\n        response = await axios.post(`${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else if (optionSelected === \"update\") {\n        response = await axios.put(`${link}/slots/courseSlot`, {\n          course: course1,\n          dayOld: day,\n          timeOld: timing.substring(10, 15),\n          locationOld: location,\n          dayNew: dayU,\n          timeNew: timingU.substring(10, 15),\n          locationNew: locationU,\n        });\n      } else if (optionSelected === \"delete\") {\n        console.log(course1);\n        response = await axiosCall(\"delete\", `${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else if (response.data.errorJ) {\n        addToast(\n          \"The location should be written in the format: 'Building.RoomNumber' e.g.'C7.209'\",\n          { appearance: \"warning\", autoDismiss: true }\n        );\n      } else {\n        console.log(response.data.data);\n        addToast(response.data.data, {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  const handleButtonEnable = () => {\n    if (\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        (optionSelected === \"add\" || optionSelected === \"delete\")) ||\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        dayU &&\n        locationU &&\n        timingU &&\n        optionSelected === \"update\")\n    ) {\n      setButtonEnabled(false);\n    } else {\n      setButtonEnabled(true);\n    }\n  };\n\n  useEffect(async () => {\n    try {\n      const response = await axios.get(`${link}/courses/coursesCC`);\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const myCourses = response.data.data;\n        setCourses(myCourses);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  }, []);\n\n  useEffect(() => {\n    handleButtonEnable();\n  }, [\n    courses,\n    course1,\n    day,\n    dayU,\n    timing,\n    timingU,\n    location,\n    locationU,\n    optionSelected,\n    buttonEnabled,\n  ]);\n\n  return (\n    <div className={classes.courseSlotsDiv}>\n      <Grid container className={classes.mainGridContainer} justify=\"center\">\n        <Grid\n          item\n          container\n          spacing={7}\n          className={classes.gridContainer}\n          justify=\"space-between\"\n          xs={12}\n          sm={12}\n          md={12}\n        >\n          {/* Choose Course */}\n          <Grid item container spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"5px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <LibraryBooksIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={7}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={courses}\n                getOptionLabel={(coursename) => coursename}\n                onChange={(e, newValue) => handleOnChangeCourse(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Course\" value={course1} />\n                )}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            spacing={2}\n            xs={12}\n            sm={12}\n            md={6}\n            justify=\"space-between\"\n          >\n            <Grid item xs={12} sm={12} md={2}>\n              <FormControlLabel\n                value=\"add\"\n                control={\n                  <Radio\n                    classes={{ root: classes.radio, checked: classes.checked }}\n                    value=\"add\"\n                    checked={optionSelected === \"add\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Add\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"30px\" }}>\n              <FormControlLabel\n                value=\"update\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    value=\"update\"\n                    checked={optionSelected === \"update\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Update\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"115px\" }}>\n              <FormControlLabel\n                value=\"delete\"\n                control={\n                  <Radio\n                    value=\"delete\"\n                    checked={optionSelected === \"delete\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Delete\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <TodayIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={weekDays}\n                getOptionLabel={(day) => day}\n                onChange={(e, newValue) => handleOnChangeDay(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Day\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update day */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <TodayIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={weekDays}\n                  getOptionLabel={(day) => day}\n                  onChange={(e, newValue) => handleOnChangeDayU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New day\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container spacing={2} item xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <AccessTimeIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={slotTiming}\n                getOptionLabel={(slot) => slot}\n                onChange={(e, newValue) => handleOnChangeTiming(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Timing\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot timing */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <AccessTimeIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={slotTiming}\n                  getOptionLabel={(slot) => slot}\n                  onChange={(e, newValue) => handleOnChangeTimingU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New timing\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n            >\n              <LocationOnIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <TextField\n                // id=\"standard-error-helper-text\"\n                label=\"Location\"\n                // helperText=\"Incorrect entry.\"\n                placeholder=\"eg. C7.209\"\n                onChange={handleOnChangeLocation}\n                // margin=\"normal\"\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot location */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n              >\n                <AddLocationIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <TextField\n                  // id=\"standard-error-helper-text\"\n                  label=\"New location\"\n                  // helperText=\"Incorrect entry.\"\n                  placeholder=\"eg. C7.209\"\n                  onChange={handleOnChangeLocationU}\n                  // margin=\"normal\"\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container xs={12} sm={12} md={12} justify=\"flex-end\">\n            <Grid item xs={12} sm={12} md={2}>\n              <Button\n                variant=\"contained\"\n                // color = {optionSelected === 'add'?\"success\":optionSelected === 'update'?\"primary\":\"secondary\"}\n                className={classes.button}\n                startIcon={\n                  optionSelected === \"add\" ? (\n                    <AddCircleIcon />\n                  ) : optionSelected === \"update\" ? (\n                    <EditIcon />\n                  ) : (\n                    <DeleteIcon />\n                  )\n                }\n                onClick={handleSubmit}\n                disabled={buttonEnabled}\n              >\n                {optionSelected === \"add\"\n                  ? \"Add\"\n                  : optionSelected === \"update\"\n                  ? \"Update\"\n                  : \"Delete\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CourseSlotCRUD;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Schedule.jsx",["412","413"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport auth from \"../helpers/auth\";\nimport checkLogin from \"../helpers/checkLogin\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction Schedule(props) {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"13:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"15:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n        await auth([\"Course Instructor\"]);\n\n        let response;\n        if (props.gucId) {\n          response = await axios.get(`${link}/staffMembers/viewMySchedule`);\n        } else if (props.id) {\n          response = await axios.get(\n            `${link}/staffMembers/viewStaffSchedule/${props.id}`\n          );\n        }\n\n        if (response.data.error) {\n          addToast(response.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        } else if (response.data) {\n          const slotsDisplay = response.data;\n          var sat = [];\n          var sun = [];\n          var mon = [];\n          var tues = [];\n          var wed = [];\n          var thurs = [];\n          for (var i = 0; i < slotsDisplay.length; i++) {\n            switch (slotsDisplay[i].day) {\n              case \"Saturday\":\n                sat.push(slotsDisplay[i]);\n                break;\n              case \"Sunday\":\n                sun.push(slotsDisplay[i]);\n                break;\n              case \"Monday\":\n                mon.push(slotsDisplay[i]);\n                break;\n              case \"Tuesday\":\n                tues.push(slotsDisplay[i]);\n                break;\n              case \"Wednesday\":\n                wed.push(slotsDisplay[i]);\n                break;\n              case \"Thursday\":\n                thurs.push(slotsDisplay[i]);\n                break;\n              default:\n                break;\n            }\n          }\n          setSats(orderDays(sat));\n          setSuns(orderDays(sun));\n          setMons(orderDays(mon));\n          setTuess(orderDays(tues));\n          setWeds(orderDays(wed));\n          setThurss(orderDays(thurs));\n        }\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-styleS\">\n      <h7 class=\"slots-titleS\">Academic Schedule</h7>\n      <div class=\"slots-lineS\"></div>\n      <TableContainer class=\"table-slots-containerS\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"yellow\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st\n                <br /> 08:15 - 09:45\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd\n                <br /> 10:00 - 11:30\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd\n                <br /> 11:45 - 13:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th\n                <br /> 13:45 - 15:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th\n                <br /> 15:45 - 17:15\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default Schedule;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/RequestsDropDown.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx",["414","415"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx",["416"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Sick() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Sick\",\n          SickDayDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Sick Day Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Sick;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx",["417"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Maternity() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Maternity\",\n          startDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Maternity Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Maternity;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx",["418"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\n\nimport { FormControl, InputLabel } from \"@material-ui/core\";\n\nfunction Compensation() {\n  const [date1, setDate1] = useState();\n  const [date2, setDate2] = useState();\n  const [Reason, setReason] = useState(\"\");\n  const { addToast } = useToasts();\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Compensation\",\n        LeaveDate: date1,\n        CompensationDate: date2,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate1();\n        setDate2();\n        setReason(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Leave Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date1}\n            onChange={setDate1}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Compensation Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date2}\n            onChange={setDate2}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date1 == null || date2 == null || Reason == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Compensation;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx",["419","420","421","422","423"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Annual() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [TAID, setTAID] = useState(\"\");\n  const [time, setTime] = useState();\n\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"Course\");\n  const [check, setCheck] = useState(\"\");\n  const [rep, setRep] = useState({\n    reps: [\n      {\n        TAId: \"\",\n        time: null,\n        coursename: \"\",\n      },\n    ],\n  });\n\n  const array = [];\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      var object = {\n        TAId: TAID,\n        time: time,\n        coursename: courseChosen,\n      };\n      var res = time.split(\":\");\n      date.setHours(res[0], res[1], 0);\n      console.log(date);\n      var str =\n        date.getFullYear() +\n        \"-\" +\n        (date.getMonth() + 1) +\n        \"-\" +\n        date.getDate() +\n        \"T\" +\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \":00\";\n      //  console.log(dates);\n      const body1 = {\n        id: TAID,\n        date: str,\n        courseName: courseChosen,\n      };\n      var resp1 = await axiosCall(\"post\", \"requests/checkRep\", body1);\n      setCheck(resp1.data);\n\n      if (resp1.data == \"success\") {\n        console.log(object);\n        setRep({ reps: rep.reps.concat([object]) });\n\n        addToast(\n          \" replacement added successfully,add another one if you want\",\n          {\n            appearance: \"success\",\n            autoDismiss: true,\n          }\n        );\n        setTAID(\"\");\n        setTime();\n        setCourseChosen(\"\");\n        //ha3mlha add f el array w h set kol 7aga b 0 tany w hatl3lh toast by2olh added successfully\n        //click add if you have another replacement\n      }  \n         if (resp1.data.error) {\n        addToast(resp1.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        }); \n      } \n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Annual\",\n        AnnualLeaveDate: date,\n        rep: rep,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setReason(\"\");\n        setRep([\n          {\n            TAId: \"\",\n            time: null,\n            coursename: \"\",\n          },\n        ]);\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Replacement</InputLabel>\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">TA ID</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n          <Input\n            className=\"crud-input\"\n            value={TAID}\n            onChange={(event) => setTAID(event.target.value)}\n          />\n\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Time</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <TimePicker className=\"crud-input\" onChange={setTime} value={time} />\n\n          <br />\n          <br />\n\n          <Button\n            variant=\"success\"\n            className=\"crud-submit crud-add-btn green\"\n            disabled={\n              date == null || time == null || TAID == \"\" || courseChosen == \"\"\n                ? true\n                : false\n            }\n            onClick={handleClick}\n          >\n            Add\n          </Button>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Annual;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx",["424"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nfunction Slot() {\n  const [loc, setLoc] = useState(\"\");\n  const [date, setDate] = useState();\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Slot Request\",\n        date: date,\n        locationType: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n\n          <br />\n          <br />\n\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n\n          <br />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location Type</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={loc}\n            onChange={(event) => {\n              setLoc(event.target.value);\n            }}\n          >\n            <MenuItem className=\"crud-menuItem\" value=\"Tutorial Room\">\n              Tutorial Room\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lecture Hall\">\n              Lecture Hall\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lab\">\n              Lab\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Office\">\n              Office\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" ? true : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Slot;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx",["425","426"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Replacement() {\n  const [date, setDate] = useState();\n  const [recId, setRecId] = useState(\"\");\n  const [loc, setLoc] = useState(\"\");\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Replacement Request\",\n        replacementDate: date,\n        recieverId: recId,\n        location: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setRecId(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n          <br />\n          <br />\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Receiver id</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={recId}\n            onChange={(event) => setRecId(event.target.value)}\n          />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={loc}\n            onChange={(event) => setLoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" || recId == \"\"\n            ? true\n            : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Replacement;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx",["427"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nfunction ChangeDayOff() {\n  const [NewDayOff, setDayOff] = useState(\"\");\n  const [Reason, setReason] = useState(\" \");\n  const [CurDayOff, setCurDayOff] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const Day = await axiosCall(\"get\", \"requests/dayOff\");\n      setCurDayOff(Day.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Change DayOff\",\n        newDayOff: NewDayOff,\n        reason: Reason,\n      };\n      if (NewDayOff == CurDayOff) {\n        addToast(\"already Your Current DayOff\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        setDayOff(\"\");\n        setReason(\"\");\n      }\n\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setReason(\"\");\n        setDayOff(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"crud-inner-container\">\n        <div className=\"crud-form\">\n          <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">New DayOff</InputLabel>\n            <Select\n              className=\"crud-select\"\n              value={NewDayOff}\n              onChange={(event) => {\n                setDayOff(event.target.value);\n              }}\n            >\n              <MenuItem className=\"crud-menuItem\" value=\"Saturday\">\n                Saturday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Sunday\">\n                Sunday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Monday\">\n                Monday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Tuesday\">\n                Tuesday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Wednesday\">\n                Wednesday\n              </MenuItem>\n              <MenuItem className=\"crud-menuItem\" value=\"Thursday\">\n                Thursday\n              </MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n            <br />\n            <br />\n            <textarea\n              className=\"crud-input\"\n              rows=\"3\"\n              cols=\"40\"\n              value={Reason}\n              onChange={(event) => {\n                setReason(event.target.value);\n              }}\n            ></textarea>\n          </FormControl>\n        </div>\n        <Button\n          variant=\"success\"\n          className=\"crud-submit crud-add-btn green\"\n          disabled={NewDayOff === \"\" ? true : false}\n          onClick={handleSubmit}\n        >\n          Send\n        </Button>\n      </div>\n    </div>\n  );\n}\nexport default ChangeDayOff;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx",["428","429","430","431"],"import React, { useState, useEffect } from \"react\";\n\nimport axiosCall from \"../../../helpers/axiosCall\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport MaterialTable from \"material-table\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fade from \"react-reveal/Fade\";\nimport { link } from \"../../../helpers/constants.js\";\n\nfunction Sent() {\n  const { addToast } = useToasts();\n  const [rows, setRows] = useState([]);\n\n  useEffect(async () => {\n    try {\n      const response = await axiosCall(\"get\", \"requests/viewMyRequest\");\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        let myRequests = response.data.data.map((req) => {\n          var date = new Date(Date.parse(req.date));\n          var x =\n            date.getDate() +\n            \"/\" +\n            (date.getMonth() + 1) +\n            \"/\" +\n            date.getFullYear();\n          return {\n            id: req._id,\n            date: x,\n            type: req.type,\n            status: req.status,\n            subject: req.subject,\n          };\n        });\n\n        setRows(myRequests);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      //  document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  }, []);\n\n  const handleDelete = async (rowData) => {\n    try {\n      if (rowData.status == \"pending\") {\n        const response = await axiosCall(\n          \"delete\",\n          `${link}/requests/CancelRequest/${rowData.id}`\n        );\n\n        addToast(response.data.data, {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        const filtered = await rows.filter((req) => req.id !== rowData.id);\n        setRows(filtered);\n      } else {\n        addToast(\"Sorry you can't cancel this Request\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      // document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={10} sm={10} md={10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Date\", field: \"date\" },\n                { title: \"Type\", field: \"type\" },\n                { title: \"Subject\", field: \"subject\" },\n                { title: \"Status\", field: \"status\" },\n              ]}\n              data={rows}\n              onRowClick={(event, rowData) => {\n                document.location.href = `/viewReq/${rowData.id}`;\n              }}\n              actions={[\n                {\n                  title: \"Delete\",\n                  icon: \"delete\",\n                  tooltip: \"Delete Request\",\n                  onClick: (event, rowData) => {\n                    handleDelete(rowData);\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#01579b\",\n                  color: \"#FFF\",\n                  fontSize: \"18px\",\n                  margin: \"0\",\n                  padding: \"0 0 10px 0\",\n                },\n                rowStyle: {\n                  fontSize: \"15px\",\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Sent;\n","/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx",["432","433","434","435"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx",["436","437","438"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/viewReq.jsx",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/Request/Request.jsx",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/InstructorAssignment.jsx",["461"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/ViewTeachingAssignments.jsx",["462"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/viewRequests.jsx",["463","464","465","466","467"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/styles/StyledComponents.js",[],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/pages/HOD/Request.jsx",["468"],"/Users/ayaabdalla/Documents/GitHub/milestone-1-team51/client/src/components/Notification.jsx",["469"],{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":31,"column":8,"nodeType":"476","messageId":"477","endLine":31,"endColumn":18},{"ruleId":"474","severity":1,"message":"478","line":54,"column":8,"nodeType":"476","messageId":"477","endLine":54,"endColumn":18},{"ruleId":"474","severity":1,"message":"479","line":75,"column":7,"nodeType":"476","messageId":"477","endLine":75,"endColumn":8},{"ruleId":"480","severity":1,"message":"481","line":49,"column":6,"nodeType":"482","endLine":49,"endColumn":8,"suggestions":"483"},{"ruleId":"480","severity":1,"message":"481","line":136,"column":6,"nodeType":"482","endLine":136,"endColumn":8,"suggestions":"484"},{"ruleId":"480","severity":1,"message":"485","line":68,"column":6,"nodeType":"482","endLine":68,"endColumn":8,"suggestions":"486"},{"ruleId":"480","severity":1,"message":"481","line":144,"column":6,"nodeType":"482","endLine":144,"endColumn":8,"suggestions":"487"},{"ruleId":"480","severity":1,"message":"481","line":40,"column":6,"nodeType":"482","endLine":40,"endColumn":8,"suggestions":"488"},{"ruleId":"480","severity":1,"message":"481","line":73,"column":6,"nodeType":"482","endLine":73,"endColumn":8,"suggestions":"489"},{"ruleId":"470","replacedBy":"490"},{"ruleId":"472","replacedBy":"491"},{"ruleId":"474","severity":1,"message":"492","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":22},{"ruleId":"474","severity":1,"message":"493","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":22},{"ruleId":"474","severity":1,"message":"494","line":6,"column":24,"nodeType":"476","messageId":"477","endLine":6,"endColumn":39},{"ruleId":"474","severity":1,"message":"492","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":22},{"ruleId":"474","severity":1,"message":"493","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":22},{"ruleId":"474","severity":1,"message":"494","line":6,"column":24,"nodeType":"476","messageId":"477","endLine":6,"endColumn":39},{"ruleId":"474","severity":1,"message":"492","line":5,"column":10,"nodeType":"476","messageId":"477","endLine":5,"endColumn":22},{"ruleId":"474","severity":1,"message":"493","line":6,"column":10,"nodeType":"476","messageId":"477","endLine":6,"endColumn":22},{"ruleId":"474","severity":1,"message":"494","line":6,"column":24,"nodeType":"476","messageId":"477","endLine":6,"endColumn":39},{"ruleId":"474","severity":1,"message":"495","line":16,"column":27,"nodeType":"476","messageId":"477","endLine":16,"endColumn":36},{"ruleId":"474","severity":1,"message":"496","line":17,"column":10,"nodeType":"476","messageId":"477","endLine":17,"endColumn":23},{"ruleId":"474","severity":1,"message":"497","line":18,"column":10,"nodeType":"476","messageId":"477","endLine":18,"endColumn":20},{"ruleId":"474","severity":1,"message":"498","line":35,"column":10,"nodeType":"476","messageId":"477","endLine":35,"endColumn":20},{"ruleId":"474","severity":1,"message":"499","line":35,"column":22,"nodeType":"476","messageId":"477","endLine":35,"endColumn":35},{"ruleId":"500","severity":1,"message":"501","line":76,"column":12,"nodeType":"502","messageId":"503","endLine":76,"endColumn":14},{"ruleId":"500","severity":1,"message":"501","line":78,"column":16,"nodeType":"502","messageId":"503","endLine":78,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":80,"column":16,"nodeType":"502","messageId":"503","endLine":80,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":83,"column":14,"nodeType":"502","messageId":"503","endLine":83,"endColumn":16},{"ruleId":"500","severity":1,"message":"501","line":86,"column":14,"nodeType":"502","messageId":"503","endLine":86,"endColumn":16},{"ruleId":"500","severity":1,"message":"501","line":89,"column":15,"nodeType":"502","messageId":"503","endLine":89,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":92,"column":15,"nodeType":"502","messageId":"503","endLine":92,"endColumn":17},{"ruleId":"500","severity":1,"message":"501","line":95,"column":16,"nodeType":"502","messageId":"503","endLine":95,"endColumn":18},{"ruleId":"470","replacedBy":"504"},{"ruleId":"472","replacedBy":"505"},{"ruleId":"474","severity":1,"message":"495","line":2,"column":27,"nodeType":"476","messageId":"477","endLine":2,"endColumn":36},{"ruleId":"480","severity":1,"message":"481","line":98,"column":6,"nodeType":"482","endLine":98,"endColumn":13,"suggestions":"506"},{"ruleId":"480","severity":1,"message":"481","line":50,"column":7,"nodeType":"482","endLine":50,"endColumn":9,"suggestions":"507"},{"ruleId":"480","severity":1,"message":"481","line":76,"column":7,"nodeType":"482","endLine":76,"endColumn":9,"suggestions":"508"},{"ruleId":"509","severity":1,"message":"510","line":94,"column":13,"nodeType":"511","messageId":"512","endLine":100,"endColumn":14},{"ruleId":"480","severity":1,"message":"481","line":29,"column":6,"nodeType":"482","endLine":29,"endColumn":8,"suggestions":"513"},{"ruleId":"480","severity":1,"message":"514","line":199,"column":15,"nodeType":"515","endLine":212,"endColumn":6},{"ruleId":"480","severity":1,"message":"481","line":212,"column":7,"nodeType":"482","endLine":212,"endColumn":9,"suggestions":"516"},{"ruleId":"480","severity":1,"message":"517","line":217,"column":5,"nodeType":"482","endLine":217,"endColumn":94,"suggestions":"518"},{"ruleId":"519","severity":1,"message":"520","line":294,"column":50,"nodeType":"521","endLine":294,"endColumn":54},{"ruleId":"474","severity":1,"message":"522","line":79,"column":15,"nodeType":"476","messageId":"477","endLine":79,"endColumn":18},{"ruleId":"480","severity":1,"message":"523","line":144,"column":6,"nodeType":"482","endLine":144,"endColumn":8,"suggestions":"524"},{"ruleId":"474","severity":1,"message":"525","line":8,"column":10,"nodeType":"476","messageId":"477","endLine":8,"endColumn":14},{"ruleId":"474","severity":1,"message":"526","line":11,"column":9,"nodeType":"476","messageId":"477","endLine":11,"endColumn":25},{"ruleId":"500","severity":1,"message":"501","line":99,"column":43,"nodeType":"502","messageId":"503","endLine":99,"endColumn":45},{"ruleId":"500","severity":1,"message":"501","line":99,"column":43,"nodeType":"502","messageId":"503","endLine":99,"endColumn":45},{"ruleId":"500","severity":1,"message":"501","line":89,"column":60,"nodeType":"502","messageId":"503","endLine":89,"endColumn":62},{"ruleId":"474","severity":1,"message":"527","line":25,"column":10,"nodeType":"476","messageId":"477","endLine":25,"endColumn":15},{"ruleId":"474","severity":1,"message":"528","line":36,"column":9,"nodeType":"476","messageId":"477","endLine":36,"endColumn":14},{"ruleId":"500","severity":1,"message":"501","line":78,"column":22,"nodeType":"502","messageId":"503","endLine":78,"endColumn":24},{"ruleId":"500","severity":1,"message":"501","line":205,"column":52,"nodeType":"502","messageId":"503","endLine":205,"endColumn":54},{"ruleId":"500","severity":1,"message":"501","line":205,"column":74,"nodeType":"502","messageId":"503","endLine":205,"endColumn":76},{"ruleId":"500","severity":1,"message":"501","line":122,"column":54,"nodeType":"502","messageId":"503","endLine":122,"endColumn":56},{"ruleId":"500","severity":1,"message":"501","line":119,"column":54,"nodeType":"502","messageId":"503","endLine":119,"endColumn":56},{"ruleId":"500","severity":1,"message":"501","line":119,"column":69,"nodeType":"502","messageId":"503","endLine":119,"endColumn":71},{"ruleId":"500","severity":1,"message":"501","line":30,"column":21,"nodeType":"502","messageId":"503","endLine":30,"endColumn":23},{"ruleId":"474","severity":1,"message":"529","line":9,"column":9,"nodeType":"476","messageId":"477","endLine":9,"endColumn":19},{"ruleId":"480","severity":1,"message":"514","line":19,"column":12,"nodeType":"515","endLine":45,"endColumn":6},{"ruleId":"480","severity":1,"message":"481","line":45,"column":7,"nodeType":"482","endLine":45,"endColumn":9,"suggestions":"530"},{"ruleId":"500","severity":1,"message":"501","line":50,"column":20,"nodeType":"502","messageId":"503","endLine":50,"endColumn":22},{"ruleId":"480","severity":1,"message":"514","line":17,"column":13,"nodeType":"515","endLine":65,"endColumn":4},{"ruleId":"480","severity":1,"message":"481","line":65,"column":6,"nodeType":"482","endLine":65,"endColumn":16,"suggestions":"531"},{"ruleId":"474","severity":1,"message":"532","line":104,"column":9,"nodeType":"476","messageId":"477","endLine":104,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":106,"column":26,"nodeType":"502","messageId":"503","endLine":106,"endColumn":28},{"ruleId":"480","severity":1,"message":"514","line":26,"column":15,"nodeType":"515","endLine":49,"endColumn":6},{"ruleId":"533","severity":1,"message":"534","line":34,"column":37,"nodeType":"515","messageId":"535","endLine":34,"endColumn":39},{"ruleId":"480","severity":1,"message":"481","line":49,"column":7,"nodeType":"482","endLine":49,"endColumn":17,"suggestions":"536"},{"ruleId":"474","severity":1,"message":"537","line":6,"column":8,"nodeType":"476","messageId":"477","endLine":6,"endColumn":18},{"ruleId":"474","severity":1,"message":"538","line":8,"column":8,"nodeType":"476","messageId":"477","endLine":8,"endColumn":19},{"ruleId":"474","severity":1,"message":"539","line":9,"column":8,"nodeType":"476","messageId":"477","endLine":9,"endColumn":14},{"ruleId":"474","severity":1,"message":"540","line":11,"column":10,"nodeType":"476","messageId":"477","endLine":11,"endColumn":19},{"ruleId":"474","severity":1,"message":"541","line":13,"column":8,"nodeType":"476","messageId":"477","endLine":13,"endColumn":23},{"ruleId":"474","severity":1,"message":"542","line":14,"column":8,"nodeType":"476","messageId":"477","endLine":14,"endColumn":18},{"ruleId":"474","severity":1,"message":"543","line":15,"column":8,"nodeType":"476","messageId":"477","endLine":15,"endColumn":14},{"ruleId":"474","severity":1,"message":"544","line":16,"column":8,"nodeType":"476","messageId":"477","endLine":16,"endColumn":17},{"ruleId":"474","severity":1,"message":"545","line":18,"column":10,"nodeType":"476","messageId":"477","endLine":18,"endColumn":16},{"ruleId":"500","severity":1,"message":"501","line":83,"column":24,"nodeType":"502","messageId":"503","endLine":83,"endColumn":26},{"ruleId":"500","severity":1,"message":"501","line":86,"column":24,"nodeType":"502","messageId":"503","endLine":86,"endColumn":26},{"ruleId":"500","severity":1,"message":"501","line":86,"column":57,"nodeType":"502","messageId":"503","endLine":86,"endColumn":59},{"ruleId":"500","severity":1,"message":"501","line":86,"column":83,"nodeType":"502","messageId":"503","endLine":86,"endColumn":85},{"ruleId":"480","severity":1,"message":"546","line":97,"column":6,"nodeType":"482","endLine":97,"endColumn":8,"suggestions":"547"},{"ruleId":"500","severity":1,"message":"501","line":122,"column":17,"nodeType":"502","messageId":"503","endLine":122,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":153,"column":17,"nodeType":"502","messageId":"503","endLine":153,"endColumn":19},{"ruleId":"500","severity":1,"message":"501","line":174,"column":18,"nodeType":"502","messageId":"503","endLine":174,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":197,"column":18,"nodeType":"502","messageId":"503","endLine":197,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":238,"column":18,"nodeType":"502","messageId":"503","endLine":238,"endColumn":20},{"ruleId":"500","severity":1,"message":"501","line":270,"column":19,"nodeType":"502","messageId":"503","endLine":270,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":295,"column":19,"nodeType":"502","messageId":"503","endLine":295,"endColumn":21},{"ruleId":"500","severity":1,"message":"501","line":367,"column":16,"nodeType":"502","messageId":"503","endLine":367,"endColumn":18},{"ruleId":"480","severity":1,"message":"481","line":70,"column":6,"nodeType":"482","endLine":70,"endColumn":8,"suggestions":"548"},{"ruleId":"480","severity":1,"message":"481","line":161,"column":6,"nodeType":"482","endLine":161,"endColumn":8,"suggestions":"549"},{"ruleId":"533","severity":1,"message":"550","line":40,"column":57,"nodeType":"515","messageId":"551","endLine":40,"endColumn":59},{"ruleId":"533","severity":1,"message":"550","line":45,"column":59,"nodeType":"515","messageId":"551","endLine":45,"endColumn":61},{"ruleId":"480","severity":1,"message":"481","line":65,"column":6,"nodeType":"482","endLine":65,"endColumn":8,"suggestions":"552"},{"ruleId":"533","severity":1,"message":"550","line":80,"column":49,"nodeType":"515","messageId":"551","endLine":80,"endColumn":51},{"ruleId":"533","severity":1,"message":"550","line":85,"column":51,"nodeType":"515","messageId":"551","endLine":85,"endColumn":53},{"ruleId":"480","severity":1,"message":"553","line":113,"column":6,"nodeType":"482","endLine":113,"endColumn":8,"suggestions":"554"},{"ruleId":"474","severity":1,"message":"555","line":45,"column":15,"nodeType":"476","messageId":"477","endLine":45,"endColumn":21},"no-native-reassign",["556"],"no-negated-in-lhs",["557"],"no-unused-vars","'checkLogin' is defined but never used.","Identifier","unusedVar","'viewReqest' is defined but never used.","'t' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["558"],["559"],"React Hook useEffect has missing dependencies: 'addToast' and 'courses.data.data'. Either include them or remove the dependency array.",["560"],["561"],["562"],["563"],["556"],["557"],"'MdLocationOn' is defined but never used.","'FaUniversity' is defined but never used.","'FaClipboardList' is defined but never used.","'useEffect' is defined but never used.","'CSSTransition' is defined but never used.","'Dropdwonme' is defined but never used.","'activeMenu' is assigned a value but never used.","'setActiveMenu' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["556"],["557"],["564"],["565"],["566"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["567"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["568"],"React Hook useEffect has a missing dependency: 'handleButtonEnable'. Either include it or remove the dependency array.",["569"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToast', 'props.gucId', and 'props.id'. Either include them or remove the dependency array.",["570"],"'type' is assigned a value but never used.","'handleSelectType' is assigned a value but never used.","'check' is assigned a value but never used.","'array' is assigned a value but never used.","'makeStyles' is defined but never used.",["571"],["572"],"'handleDelete' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["573"],"'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'useToasts' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CancelIcon' is defined but never used.","'Popper' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["574"],["575"],["576"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["577"],"React Hook useEffect has missing dependencies: 'addToast' and 'props.match.params.id'. Either include them or remove the dependency array.",["578"],"'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"579","fix":"580"},{"desc":"579","fix":"581"},{"desc":"582","fix":"583"},{"desc":"579","fix":"584"},{"desc":"579","fix":"585"},{"desc":"579","fix":"586"},{"desc":"587","fix":"588"},{"desc":"579","fix":"589"},{"desc":"579","fix":"590"},{"desc":"579","fix":"591"},{"desc":"579","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"579","fix":"597"},{"desc":"598","fix":"599"},{"desc":"598","fix":"600"},{"desc":"601","fix":"602"},{"desc":"579","fix":"603"},{"desc":"579","fix":"604"},{"desc":"579","fix":"605"},{"desc":"606","fix":"607"},"Update the dependencies array to be: [addToast]",{"range":"608","text":"609"},{"range":"610","text":"609"},"Update the dependencies array to be: [addToast, courses.data.data]",{"range":"611","text":"612"},{"range":"613","text":"609"},{"range":"614","text":"609"},{"range":"615","text":"609"},"Update the dependencies array to be: [addToast, props]",{"range":"616","text":"617"},{"range":"618","text":"609"},{"range":"619","text":"609"},{"range":"620","text":"609"},{"range":"621","text":"609"},"Update the dependencies array to be: [courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",{"range":"622","text":"623"},"Update the dependencies array to be: [addToast, props.gucId, props.id]",{"range":"624","text":"625"},{"range":"626","text":"609"},"Update the dependencies array to be: [addToast, reqIDRes]",{"range":"627","text":"628"},{"range":"629","text":"628"},"Update the dependencies array to be: [props.match.params.id]",{"range":"630","text":"631"},{"range":"632","text":"609"},{"range":"633","text":"609"},{"range":"634","text":"609"},"Update the dependencies array to be: [addToast, props.match.params.id]",{"range":"635","text":"636"},[1644,1646],"[addToast]",[4219,4221],[2253,2255],"[addToast, courses.data.data]",[4646,4648],[1226,1228],[2510,2512],[2996,3003],"[addToast, props]",[1627,1629],[2325,2327],[791,793],[7971,7973],[8037,8126],"[courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",[4356,4358],"[addToast, props.gucId, props.id]",[1422,1424],[2021,2031],"[addToast, reqIDRes]",[1912,1922],[2688,2690],"[props.match.params.id]",[1950,1952],[5342,5344],[2272,2274],[3613,3615],"[addToast, props.match.params.id]"]