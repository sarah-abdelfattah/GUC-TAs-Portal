[{"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/index.js":"1","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/reportWebVitals.js":"2","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/App.js":"3","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/checkLogin.js":"4","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/NavBar.jsx":"5","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Homepage.jsx":"6","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/SideBar.jsx":"7","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Login.jsx":"8","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx":"9","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Faculty.jsx":"10","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Location.jsx":"11","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Department.jsx":"12","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Course.jsx":"13","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Profile.jsx":"14","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx":"15","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx":"16","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/ChangePassword.jsx":"17","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx":"18","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx":"19","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx":"20","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx":"21","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/StaffProfile.jsx":"22","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff.jsx":"23","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/NewStaffMember.jsx":"24","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/test.jsx":"25","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx":"26","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx":"27","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx":"28","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx":"29","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx":"30","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/constants.js":"31","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/config/keys.js":"32","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/axiosCall.js":"33","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/axios.js":"34","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Delete.jsx":"35","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Update.jsx":"36","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Add.jsx":"37","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/config/keys_dev.js":"38","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/auth.js":"39","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/AttendanceTable.jsx":"40","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Schedule.jsx":"41","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/setAuthToken.js":"42","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/DeleteCourse.jsx":"43","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/UpdateCourse.jsx":"44","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/AddCourse.jsx":"45","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx":"46","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/AddDepartment.jsx":"47","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx":"48","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/DeleteLocation.jsx":"49","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/AddLocation.jsx":"50","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/UpdateLocation.jsx":"51","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx":"52","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx":"53","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx":"54","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx":"55","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx":"56","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx":"57","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx":"58","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/View.jsx":"59","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/RequestsDropDown.jsx":"60","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx":"61","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx":"62","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx":"63","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx":"64","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx":"65","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx":"66","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx":"67","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx":"68","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx":"69","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx":"70","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx":"71","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Request/viewReq.jsx":"72","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/viewRequests.jsx":"73","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Request/Request.jsx":"74","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/InstructorAssignment.jsx":"75","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/Request.jsx":"76","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewTeachingAssignments.jsx":"77","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/styles/StyledComponents.js":"78","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Notification.jsx":"79","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx":"80"},{"size":266,"mtime":1610235454290,"results":"81","hashOfConfig":"82"},{"size":362,"mtime":1610235454304,"results":"83","hashOfConfig":"82"},{"size":7409,"mtime":1610566782009,"results":"84","hashOfConfig":"82"},{"size":575,"mtime":1610235454288,"results":"85","hashOfConfig":"82"},{"size":1921,"mtime":1610566678571,"results":"86","hashOfConfig":"82"},{"size":7183,"mtime":1610566782036,"results":"87","hashOfConfig":"82"},{"size":2401,"mtime":1610566782013,"results":"88","hashOfConfig":"82"},{"size":3756,"mtime":1610566678592,"results":"89","hashOfConfig":"82"},{"size":640,"mtime":1610235454303,"results":"90","hashOfConfig":"82"},{"size":1609,"mtime":1610235454294,"results":"91","hashOfConfig":"82"},{"size":1626,"mtime":1610235454297,"results":"92","hashOfConfig":"82"},{"size":1651,"mtime":1610235454294,"results":"93","hashOfConfig":"82"},{"size":1583,"mtime":1610235454294,"results":"94","hashOfConfig":"82"},{"size":9422,"mtime":1610566782042,"results":"95","hashOfConfig":"82"},{"size":560,"mtime":1610235454298,"results":"96","hashOfConfig":"82"},{"size":2627,"mtime":1610566782038,"results":"97","hashOfConfig":"82"},{"size":7639,"mtime":1610237912296,"results":"98","hashOfConfig":"82"},{"size":12407,"mtime":1610566782039,"results":"99","hashOfConfig":"82"},{"size":9130,"mtime":1610566782030,"results":"100","hashOfConfig":"82"},{"size":803,"mtime":1610235454292,"results":"101","hashOfConfig":"82"},{"size":4657,"mtime":1610566782039,"results":"102","hashOfConfig":"82"},{"size":13344,"mtime":1610566782045,"results":"103","hashOfConfig":"82"},{"size":6549,"mtime":1610566782045,"results":"104","hashOfConfig":"82"},{"size":10587,"mtime":1610566782041,"results":"105","hashOfConfig":"82"},{"size":5487,"mtime":1610235454304,"results":"106","hashOfConfig":"82"},{"size":896,"mtime":1610235454302,"results":"107","hashOfConfig":"82"},{"size":916,"mtime":1610235454302,"results":"108","hashOfConfig":"82"},{"size":6842,"mtime":1610566782034,"results":"109","hashOfConfig":"82"},{"size":2991,"mtime":1610566782034,"results":"110","hashOfConfig":"82"},{"size":16801,"mtime":1610566782031,"results":"111","hashOfConfig":"82"},{"size":1273,"mtime":1610566782030,"results":"112","hashOfConfig":"82"},{"size":137,"mtime":1610235454286,"results":"113","hashOfConfig":"82"},{"size":1039,"mtime":1610235454288,"results":"114","hashOfConfig":"82"},{"size":398,"mtime":1610566782029,"results":"115","hashOfConfig":"82"},{"size":463,"mtime":1610566678570,"results":"116","hashOfConfig":"82"},{"size":458,"mtime":1610566678574,"results":"117","hashOfConfig":"82"},{"size":434,"mtime":1610237912275,"results":"118","hashOfConfig":"82"},{"size":515,"mtime":1610566767621,"results":"119","hashOfConfig":"82"},{"size":547,"mtime":1610272092749,"results":"120","hashOfConfig":"82"},{"size":18149,"mtime":1610566782011,"results":"121","hashOfConfig":"82"},{"size":9531,"mtime":1610566678573,"results":"122","hashOfConfig":"82"},{"size":257,"mtime":1610235454290,"results":"123","hashOfConfig":"82"},{"size":5643,"mtime":1610566782018,"results":"124","hashOfConfig":"82"},{"size":7955,"mtime":1610566678577,"results":"125","hashOfConfig":"82"},{"size":4609,"mtime":1610566678575,"results":"126","hashOfConfig":"82"},{"size":4081,"mtime":1610566782019,"results":"127","hashOfConfig":"82"},{"size":4326,"mtime":1610566782019,"results":"128","hashOfConfig":"82"},{"size":7480,"mtime":1610566782021,"results":"129","hashOfConfig":"82"},{"size":3427,"mtime":1610566782022,"results":"130","hashOfConfig":"82"},{"size":3287,"mtime":1610566678578,"results":"131","hashOfConfig":"82"},{"size":4714,"mtime":1610566782023,"results":"132","hashOfConfig":"82"},{"size":2598,"mtime":1610566782022,"results":"133","hashOfConfig":"82"},{"size":3402,"mtime":1610389722725,"results":"134","hashOfConfig":"82"},{"size":2016,"mtime":1610566782021,"results":"135","hashOfConfig":"82"},{"size":2168,"mtime":1610235454284,"results":"136","hashOfConfig":"82"},{"size":3282,"mtime":1610235454285,"results":"137","hashOfConfig":"82"},{"size":1998,"mtime":1610566678586,"results":"138","hashOfConfig":"82"},{"size":1366,"mtime":1610566782015,"results":"139","hashOfConfig":"82"},{"size":441,"mtime":1610566782014,"results":"140","hashOfConfig":"82"},{"size":4216,"mtime":1610566782012,"results":"141","hashOfConfig":"82"},{"size":3596,"mtime":1610237912288,"results":"142","hashOfConfig":"82"},{"size":3658,"mtime":1610237912289,"results":"143","hashOfConfig":"82"},{"size":3504,"mtime":1610566782026,"results":"144","hashOfConfig":"82"},{"size":2698,"mtime":1610237912281,"results":"145","hashOfConfig":"82"},{"size":2184,"mtime":1610237912280,"results":"146","hashOfConfig":"82"},{"size":6904,"mtime":1610566782027,"results":"147","hashOfConfig":"82"},{"size":6240,"mtime":1610566767617,"results":"148","hashOfConfig":"82"},{"size":3005,"mtime":1610566782025,"results":"149","hashOfConfig":"82"},{"size":3019,"mtime":1610566782024,"results":"150","hashOfConfig":"82"},{"size":3568,"mtime":1610566782027,"results":"151","hashOfConfig":"82"},{"size":6704,"mtime":1610566782043,"results":"152","hashOfConfig":"82"},{"size":13370,"mtime":1610566818261,"results":"153","hashOfConfig":"82"},{"size":6294,"mtime":1610566782035,"results":"154","hashOfConfig":"82"},{"size":1317,"mtime":1610566678593,"results":"155","hashOfConfig":"82"},{"size":11527,"mtime":1610566782032,"results":"156","hashOfConfig":"82"},{"size":9508,"mtime":1610566782033,"results":"157","hashOfConfig":"82"},{"size":15839,"mtime":1610566782035,"results":"158","hashOfConfig":"82"},{"size":743,"mtime":1610566678597,"results":"159","hashOfConfig":"82"},{"size":2454,"mtime":1610566678571,"results":"160","hashOfConfig":"82"},{"size":1188,"mtime":1610566782029,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"11b41g3",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"164"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"164"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"164"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"164"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"164"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"164"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"164"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"164"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"164"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"164"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"164"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"164"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"164"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"164"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"164"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"164"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"164"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"164"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"164"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"164"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"164"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"164"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"164"},"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/index.js",[],["356","357"],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/reportWebVitals.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/App.js",["358","359","360"],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/checkLogin.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/NavBar.jsx",["361","362"],"import React, { useState, useEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport checkLogin from \"../helpers/checkLogin\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\n//assets\nimport profileIcon from \"../assets/profileIcon.svg\";\nimport logout from \"../assets/logout.svg\";\nimport logo from \"../assets/logo2.png\";\nimport alert from \"../assets/notification.svg\";\n\nimport Notification from \"./Notification\";\n\nfunction NavBar(props) {\n  const [name, setName] = useState(\"\");\n  const [notification, setNot] = useState(false);\n\n  useEffect(() => {\n    async function fetchData() {\n      let res;\n      if (!props.notify) res = (await checkLogin()).gucId;\n      else res = (await checkLogin()).name;\n      setName(res);\n    }\n    fetchData();\n  }, []);\n\n  const handleLogout = async () => {\n    localStorage.removeItem(\"user\");\n    document.location.href = window.location.origin + \"/login\";\n  };\n\n  const handleNotifyClick = async () => {};\n\n  return (\n    <div>\n      <Navbar className=\"navbar\">\n        <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"\"\n            src={profileIcon}\n            className=\"profile-icon\"\n            onClick={() => (document.location.href = \"/profile\")}\n          />{\" \"}\n          <a className=\"navbar-name\" href=\"/home\">\n            {name}\n          </a>\n        </Navbar.Brand>\n        <img src={logo} alt=\"logo\" className=\"nav-logo\" />\n\n        <img\n          src={alert}\n          alt=\"notification\"\n          className=\"notification\"\n          onClick={() => setNot(!notification)}\n        />\n        <img\n          alt=\"logout icon\"\n          src={logout}\n          className=\"logout-icon\"\n          onClick={handleLogout}\n        />\n      </Navbar>\n      {notification ? (\n        <div>\n          <AiFillCaretDown className=\"arrow-icon\" />\n          <Notification />{\" \"}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default NavBar;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Homepage.jsx",["363"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport checkLogin from \"../helpers/checkLogin\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport id from \"../assets/id2.svg\";\nimport signIn from \"../assets/signin.svg\";\nimport signOut from \"../assets/signout.svg\";\n\nfunction Homepage() {\n  const [user, setUser] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [faculty, setFaculty] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const [days, setDays] = useState(\"\");\n  const [hours, setHours] = useState(\"\");\n  const [modal, setmodal] = useState(false);\n\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      setmodal(false);\n      //get user\n      try {\n        // localStorage.removeItem(\"user\");\n        const temp = await checkLogin();\n\n        const user = (await axiosCall(\"get\", `staffMembers/all/${temp.gucId}`))\n          .data.data;\n\n        setUser(user);\n\n        if (!user.lastLogIn || user.lastLogIn === null) {\n          console.log(\n            \"🚀 ~ file: Homepage.jsx ~ line 34 ~ fetchData ~ user\",\n            user.lastLogIn\n          );\n          setmodal(true);\n        }\n\n        //get location\n        const locationRes = await axiosCall(\"get\", \"locations/room/all\");\n        let office;\n        if (locationRes.data.data) {\n          office = locationRes.data.data.find(\n            ({ _id }) => _id === user.officeLocation\n          );\n\n          setLocation(office.location);\n        }\n\n        if (user.type === \"Academic Member\") {\n          //get faculty\n          const facultyRes = await axiosCall(\"get\", \"faculties/faculty/all\");\n          let fac;\n          if (facultyRes.data.data) {\n            fac = facultyRes.data.data.find(({ _id }) => _id === user.faculty);\n            setFaculty(fac.code);\n          }\n\n          //get department\n          const depRes = await axiosCall(\n            \"get\",\n            \"departments/department/all/all\"\n          );\n          let dep;\n          if (depRes.data.data) {\n            dep = depRes.data.data.find(({ _id }) => _id === user.department);\n            setDepartment(dep.name);\n          }\n        }\n\n        //get days\n        const daysRes = await axiosCall(\"get\", \"attendance/viewMissingDays\");\n        if (daysRes.data) setDays(daysRes.data);\n\n        //get hours\n        const hoursRes = await axiosCall(\"get\", \"attendance/viewHours\");\n        if (hoursRes.data) setHours(hoursRes.data);\n\n        const res = await axiosCall(\"put\", \"staffMembers/lastLogin\");\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSignIn = async () => {\n    try {\n      const res = await axiosCall(\"post\", \"staffMembers/signIn\");\n\n      if (res.data.data) {\n        addToast(\"Signed in successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (error) {\n      addToast(error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      const res = await axiosCall(\"post\", \"staffMembers/signOut\");\n\n      if (res.data.data) {\n        addToast(\"Signed out successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (error) {\n      addToast(error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  return (\n    <div id=\"homepage\">\n      <div className=\"left-hp\">\n        <div className=\"inner-homepage-box\">\n          <ul>\n            <li>\n              <h5>GUC ID: </h5>\n              <h6>{user.gucId} </h6>\n            </li>\n            <li>\n              <h5>Name: </h5>\n              <h6> {user.name}</h6>\n            </li>\n            <li>\n              <h5>Email: </h5>\n              <h6> {user.email}</h6>\n            </li>\n            <li>\n              <h5>Office Location: </h5>\n              <h6> {location}</h6>\n            </li>\n            <li>\n              <h5>Position: </h5>\n              <h6> {user.type}</h6>\n            </li>\n            {user.type === \"Academic Member\" ? (\n              <li>\n                <h5>Faculty: </h5>\n                <h6> {faculty}</h6>\n              </li>\n            ) : null}\n            {user.type === \"Academic Member\" ? (\n              <li>\n                <h5>Department: </h5>\n                <h6> {department}</h6>\n              </li>\n            ) : null}\n            <br></br>\n            <li>\n              <h5>Missing Days: </h5>\n              <h6> {days}</h6>\n            </li>\n            <li>\n              <h5>Missing/Extra hours: </h5>\n              <h6> {hours}</h6>\n            </li>\n          </ul>\n          <div className=\"hompage-btns\">\n            <button\n              className=\"attendanceRecord-btn\"\n              onClick={() =>\n                (document.location.href =\n                  window.location.origin + \"/myAttendanceRecord\")\n              }\n            >\n              View Attendance Record\n            </button>\n            <button\n              className=\"attendanceRecord-btn\"\n              onClick={() =>\n                (document.location.href = window.location.origin + \"/profile\")\n              }\n            >\n              View Profile\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"right-hp\">\n        <img alt=\"\" src={id} className=\"profile-icon\" />\n        <Button\n          variant=\"success\"\n          className=\"sign-btn green\"\n          onClick={handleSignIn}\n        >\n          <img alt=\"\" src={signIn} className=\"sign-btn-icon\" />\n          <h6> Sign in</h6>\n        </Button>\n        <Button\n          variant=\"danger\"\n          className=\"sign-btn red\"\n          onClick={handleSignOut}\n        >\n          <img alt=\"\" src={signOut} className=\"sign-btn-icon\" />\n          <h6> Sign Out</h6>\n        </Button>\n      </div>\n\n      {modal ? (\n        <div className=\"modal-outer-container\">\n          <div className=\"modal-container\">\n            <p>Do you want to change your default password?</p>\n            <div className=\"modal-button-area\">\n              <button\n                className=\"green\"\n                onClick={() => {\n                  setmodal(false)(\n                    (document.location.href =\n                      window.location.origin + \"/changePassword\")\n                  );\n                }}\n              >\n                YES\n              </button>\n              <button className=\"red\" onClick={() => setmodal(false)}>\n                NO\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Homepage;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/SideBar.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Login.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/UnauthorizedPage.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Faculty.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Location.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Department.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Course.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Profile.jsx",["364"],"import React, { useState, useEffect } from \"react\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport checkLogin from \"../helpers/checkLogin\";\n\n// import NavBar from \"../components/NavBar\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\n//TODO: refactor\nfunction Profile(props) {\n  const [btn, setBtn] = useState(\"Update profile\");\n  const [update, setUpdate] = useState(false);\n  const [HR, setHr] = useState(false);\n  const [gucId, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [dayOff, setDayOff] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [deductedSalary, setDeductedSalary] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [rooms, setRooms] = useState({ rooms: [] });\n  const [roomChosen, setRoomChosen] = useState(\"\");\n  const [position, setPosition] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [faculty, setFaculty] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      //get user\n      const res = await checkLogin();\n\n      let user = (await axiosCall(\"get\", `staffMembers/all/${res.gucId}`)).data\n        .data;\n\n      setId(user.gucId);\n      setName(user.name);\n      setGender(user.gender);\n      setEmail(user.email);\n      setDayOff(user.dayOff);\n      setSalary(user.salary);\n      setPosition(user.type);\n\n      let dSalary = await axiosCall(\"get\", `staffMembers/salary/${user.gucId}`);\n\n      setDeductedSalary(dSalary.data.salary.toFixed(2));\n\n      //get location\n      const locationRes = await axiosCall(\"get\", \"locations/room/all\");\n      const filtered = locationRes.data.data.filter(\n        (loc) => loc.type === \"Office\"\n      );\n      setRooms(filtered);\n      let office;\n      if (locationRes.data.data) {\n        office = locationRes.data.data.find(\n          ({ _id }) => _id === user.officeLocation\n        );\n        setRoomChosen(office._id);\n        setLocation(office.location);\n      }\n\n      if (user.type === \"Academic Member\") {\n        setRole(user.role);\n\n        //get faculty\n        const facultyRes = await axiosCall(\"get\", \"faculties/faculty/all\");\n        let fac;\n        if (facultyRes.data.data) {\n          fac = facultyRes.data.data.find(({ _id }) => _id === user.faculty);\n          setFaculty(fac.code);\n        }\n\n        //get department\n        const depRes = await axiosCall(\"get\", \"departments/department/all/all\");\n        let dep;\n        if (depRes.data.data) {\n          dep = depRes.data.data.find(({ _id }) => _id === user.department);\n          setDepartment(dep.name);\n        }\n      }\n    }\n    fetchData();\n  }, [props.user]);\n\n  const handleUpdateProfile = async () => {\n    setBtn(\"Submit Changes\");\n    setUpdate(true);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        gucId: gucId,\n        name: name,\n        gender: gender,\n        role: role,\n      };\n\n      const res = await axiosCall(\"put\", \"staffMembers/profile\", body);\n\n      if (res.data.data) {\n        addToast(\"Profile updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setBtn(\"Update Profile\");\n        setUpdate(false);\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~error: \", err);\n    }\n  };\n\n  return (\n    <div className=\"profile-inner-container\">\n      <div className=\"profile-all\">\n        <div className=\"profile-form\">\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">GUC ID</InputLabel>\n            <Input className=\"profile-input\" value={gucId} disabled={true} />\n          </FormControl>\n\n          <FormControl\n            className={\n              update ? `profile-formControl toUpdate` : `profile-formControl`\n            }\n          >\n            <InputLabel className=\"profile-inputLabel\">Name</InputLabel>\n            <Input\n              className=\"profile-input\"\n              value={name}\n              disabled={update ? false : true}\n              onChange={(event) => setName(event.target.value)}\n            />\n          </FormControl>\n\n          <FormControl\n            className={\n              update ? `profile-formControl toUpdate` : `profile-formControl`\n            }\n          >\n            <InputLabel className=\"profile-inputLabel\">Gender</InputLabel>\n            <Input\n              className=\"profile-input\"\n              value={gender}\n              disabled={update ? false : true}\n              onChange={(event) => setGender(event.target.value)}\n            />\n          </FormControl>\n\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">Email</InputLabel>\n            <Input className=\"profile-input\" value={email} disabled={true} />\n          </FormControl>\n\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">Day off</InputLabel>\n            <Input className=\"profile-input\" value={dayOff} disabled={true} />\n          </FormControl>\n\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">Salary</InputLabel>\n            <Input className=\"profile-input\" value={salary} disabled={true} />\n          </FormControl>\n\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">\n              Current Salary\n            </InputLabel>\n            <Input\n              className=\"profile-input\"\n              value={deductedSalary}\n              disabled={true}\n            />\n          </FormControl>\n\n          <FormControl className=\"profile-formControl\">\n            <InputLabel className=\"profile-inputLabel\">Position</InputLabel>\n            <Input className=\"profile-input\" value={position} disabled={true} />\n          </FormControl>\n\n          <FormControl\n            className={\n              update && HR\n                ? `profile-formControl toUpdate`\n                : `profile-formControl`\n            }\n          >\n            <InputLabel className=\"profile-inputLabel\">\n              Office Location\n            </InputLabel>\n            {update ? (\n              <Select\n                className=\"profile-select\"\n                value={roomChosen}\n                onChange={(event) => {\n                  setRoomChosen(event.target.value);\n                }}\n                disabled={update && HR ? false : true}\n              >\n                {update &&\n                  rooms.length > 0 &&\n                  rooms.map((room) => (\n                    <MenuItem\n                      className=\"profile-menuItem\"\n                      value={room._id}\n                      key={room._id}\n                    >\n                      {room.location}\n                    </MenuItem>\n                  ))}\n              </Select>\n            ) : (\n              <Input\n                className=\"profile-input\"\n                value={location}\n                disabled={true}\n              />\n            )}\n          </FormControl>\n\n          {position === \"Academic Member\" ? (\n            <div>\n              <FormControl\n                className={\n                  update\n                    ? `profile-formControl toUpdate`\n                    : `profile-formControl`\n                }\n              >\n                <InputLabel className=\"profile-inputLabel\">Role</InputLabel>\n                <Input\n                  className=\"profile-input\"\n                  value={role}\n                  disabled={update ? false : true}\n                  onChange={(event) => setRole(event.target.value)}\n                />\n              </FormControl>\n              <FormControl className=\"profile-formControl\">\n                <InputLabel className=\"profile-inputLabel\">Faculty</InputLabel>\n                <Input\n                  className=\"profile-input\"\n                  value={faculty}\n                  disabled={true}\n                />\n              </FormControl>\n              <FormControl className=\"profile-formControl\">\n                <InputLabel className=\"profile-inputLabel\">\n                  Department\n                </InputLabel>\n                <Input\n                  className=\"profile-input\"\n                  value={department}\n                  disabled={true}\n                />\n              </FormControl>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"profile-buttons\">\n          <button\n            className=\"blue profile-update-btn\"\n            onClick={update ? handleSubmit : handleUpdateProfile}\n          >\n            {btn}\n          </button>\n          <button\n            className=\"profile-change-password-btn\"\n            onClick={() =>\n              (document.location.href =\n                window.location.origin + \"/changePassword\")\n            }\n          >\n            Change Password\n          </button>\n        </div>\n      </div>\n      {/* <NavBar notify={true} /> */}\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/MyAttendanceRecord.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstCourseCoverage.jsx",["365"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\nimport { Grid } from \"@material-ui/core\";\nimport MaterialTable from \"material-table\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction InstCourseCoverage() {\n  const [rows, setRows] = useState([]);\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            console.log(coverageDisplay);\n            setRows(coverageDisplay);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">View course coverage</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Course name\", field: \"course_name\" },\n                { title: \"Coverage %\", field: \"course_coverage\" },\n              ]}\n              data={rows}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#045CC8\",\n                  color: \"#FFF\",\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default InstCourseCoverage;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/ChangePassword.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstructorSlotsAssigned.jsx",["366"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { axios } from \"../helpers/axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstructorSlotsAssigned() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"01:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"03:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].coursename,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/slotsAssignment`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data.data;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              for (var j = 0; j < slotsDisplay[i].course_slots.length; j++) {\n                console.log(slotsDisplay[i].course_slots[j].assignedTo);\n                var obj = {\n                  coursename: slotsDisplay[i].course_name,\n                  day: slotsDisplay[i].course_slots[j].day,\n                  time: slotsDisplay[i].course_slots[j].time,\n                  location: slotsDisplay[i].course_slots[j].location,\n                  assignedTo:\n                    slotsDisplay[i].course_slots[j].assignedTo === \"None\"\n                      ? \"None\"\n                      : slotsDisplay[i].course_slots[j].assignedTo.name,\n                };\n                switch (obj.day) {\n                  case \"Saturday\":\n                    sat.push(obj);\n                    break;\n                  case \"Sunday\":\n                    sun.push(obj);\n                    break;\n                  case \"Monday\":\n                    mon.push(obj);\n                    break;\n                  case \"Tuesday\":\n                    tues.push(obj);\n                    break;\n                  case \"Wednesday\":\n                    wed.push(obj);\n                    break;\n                  case \"Thursday\":\n                    thurs.push(obj);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 600, //250 //400\n      // width: 1200\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <Grid container style={{ marginLeft: \"50px\", left: \"61px\" }}>\n      {/* <div class=\"table-page-slots-styleS\"> */}\n      <Grid item xs={12} sm={12} md={9} style={{ marginTop: \"20px\" }}>\n        <h7 class=\"slots-title\">Course(s) Slots</h7>\n      </Grid>\n      <Grid item xs={12} sm={12} md={9}>\n        <div class=\"slots-line\"></div>\n      </Grid>\n      <Grid item container xs={10} sm={10} md={9} style={{ marginTop: \"30px\" }}>\n        <Grid\n          item\n          class=\"table-slots-container\"\n          xs={5}\n          sm={5}\n          md={9}\n          style={{ backgroundColor: \"white\" }}\n        >\n          <TableContainer component={Paper} className={classes.table}>\n            <Table\n              // class=\"table-slots-style border\"\n\n              aria-label=\"customized table\"\n              size=\"small\"\n            >\n              <TableHead className=\"dark-blue\">\n                <TableRow>\n                  <TableCell className=\"border\">Day/Slot</TableCell>\n                  <TableCell className=\"border\" align=\"center\">\n                    &nbsp;&nbsp;1st\n                    <br /> 08:15 - 09:45\n                  </TableCell>\n                  <TableCell className=\"border\" align=\"center\">\n                    &nbsp;&nbsp;2nd\n                    <br /> 10:00 - 11:30\n                  </TableCell>\n                  <TableCell className=\"border\" align=\"center\">\n                    &nbsp;&nbsp;3rd\n                    <br /> 11:45 - 13:15\n                  </TableCell>\n                  <TableCell className=\"border\" align=\"center\">\n                    &nbsp;&nbsp;4th\n                    <br /> 13:45 - 15:15\n                  </TableCell>\n                  <TableCell className=\"border\" align=\"center\">\n                    &nbsp;&nbsp;5th\n                    <br /> 15:45 - 17:15\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow key=\"Saturday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Saturday\n                  </TableCell>\n                  {sats.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                      <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n                <TableRow key=\"Sunday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Sunday\n                  </TableCell>\n                  {suns.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course} <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n                <TableRow key=\"Monday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Monday\n                  </TableCell>\n                  {mons.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                      <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n                <TableRow key=\"Tuesday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Tuesday\n                  </TableCell>\n                  {tuess.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                      <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n                <TableRow key=\"Wednesday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Wednesday\n                  </TableCell>\n                  {weds.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                      <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n                <TableRow key=\"Thursday\">\n                  <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\n                    Thursday\n                  </TableCell>\n                  {thurss.map((day) => (\n                    <TableCell\n                      align=\"center\"\n                      className={\n                        typeof day === \"string\" ? \"border\" : \"border occupied\"\n                      }\n                    >\n                      {typeof day === \"string\" ? day : day.Location} <br />\n                      &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                      <br />\n                      &nbsp;{day.assignedTo}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n      {/* </div> */}\n    </Grid>\n  );\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/AcademicMemberCourseSlot.jsx",["367"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../helpers/constants\";\n\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../helpers/axiosCall\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nimport Add from \"../components/Add\";\nimport Update from \"../components/Update\";\nimport Delete from \"../components/Delete\";\n\nfunction AcademicMemberCourseSlot() {\n  const [courses, setCourses] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [crudBtns, setBtns] = useState({\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [day, setDay] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const [timing, setTiming] = useState(\"\");\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  const { addToast } = useToasts();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleOnChange = (target) => {\n    setCourse(target.value);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            const coursesState = coverageDisplay.map((course) => {\n              return course.course_name;\n            });\n            setCourses(coursesState);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      let response = null;\n      let optionSelected = \"\";\n      if (crudBtns.add) {\n        optionSelected = \"post\";\n      } else if (crudBtns.update) {\n        optionSelected = \"put\";\n      } else if (crudBtns.delete) {\n        optionSelected = \"delete\";\n        setShow(false);\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      let slot = timing.substring(0, 3);\n      let convertedTiming = \"\";\n      switch (slot) {\n        case \"1st\":\n          convertedTiming = \"08:15 AM\";\n          break;\n        case \"2nd\":\n          convertedTiming = \"10:00 AM\";\n          break;\n        case \"3rd\":\n          convertedTiming = \"11:45 AM\";\n          break;\n        case \"4th\":\n          convertedTiming = \"01:45 PM\";\n          break;\n        case \"5th\":\n          convertedTiming = \"03:45 PM\";\n          break;\n        default:\n          break;\n      }\n      response = await axiosCall(\n        optionSelected,\n        `${link}/academicMember/courseInstructor/slotsAssignment`,\n        {\n          gucId: id,\n          courseName: course,\n          slot: {\n            day: day,\n            time: convertedTiming,\n          },\n        }\n      );\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        if (optionSelected === \"post\")\n          addToast(\"The slot assignment is added successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        else if (optionSelected === \"put\") {\n          addToast(\"The slot assignment is updated successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        } else {\n          addToast(\"The slot assignment is deleted successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  return (\n    <div className=\"crud-outer-container\">\n      <div className=\"crud-container\">\n        <Add\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: true,\n              update: false,\n              delete: false,\n            })\n          }\n        />\n        <Update\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: true,\n              delete: false,\n            })\n          }\n        />\n        <Delete\n          text=\"Slot Assignment\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: false,\n              delete: true,\n            })\n          }\n        />\n      </div>\n\n      {!crudBtns.add && !crudBtns.update && !crudBtns.delete ? null : (\n        <div className=\"crud-inner-container\">\n          <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                  handleOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Day</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={day}\n                onChange={(event) => {\n                  setDay(event.target.value);\n                }}\n              >\n                {weekDays.map((weekDay) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={weekDay}\n                    key={weekDay}\n                  >\n                    {weekDay}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Slot Timing</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={timing}\n                onChange={(event) => {\n                  setTiming(event.target.value);\n                }}\n              >\n                {slotTiming.map((slotTime) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={slotTime}\n                    key={slotTime}\n                  >\n                    {slotTime}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n              <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n              />\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n          </div>\n\n          <Button\n            variant={\n              crudBtns.add ? \"success\" : crudBtns.update ? \"primary\" : \"danger\"\n            }\n            className={\n              crudBtns.add\n                ? \"crud-submit crud-add-btn green\"\n                : crudBtns.update\n                ? \"crud-submit crud-update-btn blue\"\n                : \"crud-submit crud-delete-btn red\"\n            }\n            disabled={\n              id === \"\" || timing === \"\" || day === \"\" || course === \"\"\n                ? true\n                : false\n            }\n            onClick={crudBtns.delete ? handleShow : handleSubmit}\n          >\n            {crudBtns.add ? \"Assign\" : crudBtns.update ? \"Update\" : \"Delete\"}\n          </Button>\n        </div>\n      )}\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>DELETE</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to delete this course slot (SEE IF CORRECT)?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={() => handleSubmit()}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default AcademicMemberCourseSlot;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/AcademicMemberSchedule.jsx",["368"],"import React, { useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Schedule from \"../components/Schedule\";\nimport checkLogin from \"../helpers/checkLogin\";\n\nfunction InstructorSlotsAssigned() {\n  const [gucId, setId] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const user = await checkLogin();\n        setId(user.gucId);\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <div>{gucId ? <Schedule gucId={gucId} /> : null}</div>;\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/InstrCourseAssignCC.jsx",["369"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../helpers/constants\";\n\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../helpers/axiosCall\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction InstrCourseAssignCC() {\n  const [courses, setCourses] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [id, setID] = useState(\"\");\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const response = await axios.get(\n            `${link}/academicMember/courseInstructor/courseCoverage`\n          );\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            const coursesState = coverageDisplay.map((course) => {\n              return course.course_name;\n            });\n            setCourses(coursesState);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n  const handleOnChange = (target) => {\n    setCourse(target.value);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      let response = await axiosCall(\n        \"post\",\n        `${link}/academicMember/courseInstructor/courseCoordinator`,\n        {\n          gucId: id,\n          courseName: course,\n        }\n      );\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else if (response.data.data) {\n        addToast(\n          `The academic member '${response.data.data.courseCoordinator}' is assigned successfully to be the course coordinator of the course '${response.data.data.courseName}'`,\n          { appearance: \"success\", autoDismiss: true }\n        );\n      } else {\n        addToast(\n          \"The GUC ID should be written in the corrent format: 'role-IDNumber' e.g. HR-1\",\n          { appearance: \"error\", autoDismiss: true }\n        );\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  return (\n    <div>\n      <h3 className=\"general-header\">Assign a Course Coordinator</h3>\n      <hr className=\"general-line\" />\n      <br />\n      <div className=\"crud-inner-container\">\n        <div className=\"crud-form\">\n          <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n            <Select\n              className=\"crud-select\"\n              value={course}\n              onChange={(event) => {\n                handleOnChange(event.target);\n              }}\n            >\n              {courses.length > 0 &&\n                courses.map((coursename) => (\n                  <MenuItem\n                    className=\"crud-menuItem\"\n                    value={coursename}\n                    key={coursename}\n                  >\n                    {coursename}\n                  </MenuItem>\n                ))}\n            </Select>\n            <FormHelperText className=\"crud-helperText\">\n              This field is required\n            </FormHelperText>\n          </FormControl>\n\n          <FormControl className=\"crud-formControl\" required>\n            <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n            <Input\n              className=\"crud-input\"\n              value={id}\n              onChange={(event) => setID(event.target.value)}\n            />\n            <FormHelperText className=\"crud-helperText\">\n              This field is required\n            </FormHelperText>\n          </FormControl>\n        </div>\n\n        <Button\n          variant=\"success\"\n          className=\"crud-submit crud-add-btn green\"\n          disabled={id === \"\" || course === \"\" ? true : false}\n          onClick={handleSubmit}\n        >\n          Assign\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default InstrCourseAssignCC;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/StaffProfile.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff.jsx",["370","371","372","373"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport { link } from \"../helpers/constants.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Fade from \"react-reveal/Fade\";\nimport add from \"../assets/add.svg\";\nimport auth from \"../helpers/auth\";\n\nfunction Staff() {\n  const [data, setData] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          await auth([\"HR\"]);\n          const response = await axiosCall(\"get\", `/staffMembers/all/all`);\n\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          } else {\n            //get missing hours and days\n            const missingRes = await axiosCall(\n              \"get\",\n              \"attendance/viewStaffMissing\"\n            );\n\n            let data = await response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n                missingHours: missingRes.data.data\n                  .map((rec) => {\n                    if (rec.GUCID === staff.gucId) {\n                      return rec.MissingHours;\n                    } else return null;\n                  })\n                  .filter((rec) => rec !== null),\n                missingDays: missingRes.data.data\n                  .map((rec) => {\n                    if (rec.GUCID === staff.gucId) {\n                      return rec.MissingDays;\n                    } else return null;\n                  })\n                  .filter((rec) => rec !== null),\n              };\n            });\n\n            await setData(data);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          //   document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  const handleDelete = async (gucId) => {\n    try {\n      const res = await axiosCall(\"delete\", \"staffMembers/staff\", {\n        gucId: gucId,\n      });\n\n      if (res.data.data) {\n        addToast(\"Staff deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n\n        // delete from table\n        const filtered = await data.filter((staff) => staff.gucId !== gucId);\n        setData(filtered);\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (error) {\n      addToast(error, {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={11}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={35}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n                { title: \"Missing Days\", field: \"missingDays\" },\n                { title: \"Missing Hours\", field: \"missingHours\" },\n              ]}\n              onRowClick={(event, rowData) =>\n                // <StaffProfile gucId={rowData.gucId} />\n                (document.location.href =\n                  window.location.origin + `/staffProfile/${rowData.gucId}`)\n              }\n              align=\"center\"\n              data={data}\n              actions={[\n                {\n                  title: \"Delete\",\n                  icon: \"delete\",\n                  tooltip: \"Delete Staff\",\n                  onClick: (event, rowData) => {\n                    handleDelete(rowData.gucId);\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFF\",\n                  color: \"#000\",\n                  letterSpacing: \"0.1em\",\n                  fontSize: \"18px\",\n                  margin: \"0\",\n                  padding: \"0 0 10px 0\",\n                },\n                rowStyle: {\n                  fontSize: \"15px\",\n                },\n              }}\n              components={{\n                Toolbar: (props) => (\n                  <Button\n                    variant=\"success\"\n                    className=\"add-new-staff green\"\n                    onClick={() =>\n                      (document.location.href =\n                        window.location.origin + \"/newStaffMember\")\n                    }\n                  >\n                    <img src={add} alt=\"add-icon\" className=\"icon\" />\n                    <h5 className=\"text\">New Staff Member </h5>\n                  </Button>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Staff;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/NewStaffMember.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/test.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff/StaffSchedule.jsx",["374"],"import React, { useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Schedule from \"../../components/Schedule\";\nimport checkLogin from \"../../helpers/checkLogin\";\n\nfunction InstructorSlotsAssigned() {\n  const [id, setId] = useState(\"\");\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n\n        //get user\n        const url = document.location.pathname.split(\"/\");\n        const id = url[url.length - 1];\n\n        setId(id);\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return <div>{id ? <Schedule id={id} /> : null}</div>;\n}\n\nexport default InstructorSlotsAssigned;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Staff/StaffAttendance.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewAllStaff.jsx",["375","376"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Avatar from \"react-avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Fade from \"react-reveal/Fade\";\nimport { MyButton } from \"../../styles/StyledComponents\";\n\n\n//Added for the CC\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nfunction ViewAllStaff() {\n  const [data, setData] = useState([]); //table data\n  const [courses, setCourses] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/getAllStaffMembers/all`\n          );\n          const locations = await axiosCall(\n            \"get\",\n            `${link}/locations/room/all`\n          );\n          const courses = await axiosCall(\"get\", `${link}/departments/courses`);\n\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((staff) => {\n              return {\n                name: staff.name,\n                gucId: staff.gucId,\n                gender: staff.gender,\n                email: staff.email,\n                role: staff.role,\n                salary: staff.salary,\n                dayOff: staff.dayOff,\n                id: staff._id,\n                location: locations.data.data\n                  .map((location) => {\n                    if (staff.officeLocation === location._id) {\n                      return location.location;\n                    } else return null;\n                  })\n                  .filter((location) => location !== null),\n              };\n            });\n            setData(data);\n            let data2 = courses.data.data;\n            let data3 = data2.push({ course: \"all\" });\n            console.log(data3);\n            setCourses(data2);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  async function handleOnChange(event) {\n    try {\n      const res = await axiosCall(\n        \"get\",\n        `${link}/departments/getAllStaffMembers/${event.course}`\n      );\n      const locations = await axiosCall(\"get\", `${link}/locations/room/all`);\n\n      let data = res.data.data.map((staff) => {\n        return {\n          name: staff.name,\n          gucId: staff.gucId,\n          gender: staff.gender,\n          email: staff.email,\n          role: staff.role,\n          salary: staff.salary,\n          dayOff: staff.dayOff,\n          id: staff._id,\n          location: locations.data.data\n            .map((location) => {\n              if (staff.officeLocation === location._id) {\n                return location.location;\n              } else return null;\n            })\n            .filter((location) => location !== null),\n        };\n      });\n      setData(data);\n    } catch (err) {\n      console.log(\"~err\", err);\n    }\n  }\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">Staff Members</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing = {1}>\n          <Grid item xs = {10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                {\n                  title: \"Avatar\",\n                  render: (rowData) => (\n                    <Avatar\n                      maxInitials={1}\n                      size={40}\n                      round={true}\n                      name={rowData === undefined ? \" \" : rowData.name}\n                    />\n                  ),\n                },\n                { title: \"Name\", field: \"name\" },\n                { title: \"Gender\", field: \"gender\" },\n                { title: \"ID\", field: \"gucId\" },\n                { title: \"Role\", field: \"role\" },\n                { title: \"Email\", field: \"email\" },\n                { title: \"Day off\", field: \"dayOff\" },\n                { title: \"office\", field: \"location\" },\n              ]}\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"view schedule\",\n                  onClick: (event, rowData) => {\n                    document.location.href =\n                      window.location.origin +\n                      `/viewStaffSchedule/${rowData.id}`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#FFFFFF\",\n                  color: \"#000000\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <MyButton\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ textTransform: \"none\", background: \"#045CC8\" }}\n                    size=\"small\"\n                  >\n                    View schedule\n                  </MyButton>\n                ),\n                Toolbar: (props) => (\n                  <Autocomplete\n                    size=\"small\"\n                    id=\"debug\"\n                    options={courses}\n                    onChange={(event, newValue) => {\n                      handleOnChange(newValue);\n                    }}\n                    getOptionLabel={(option) => option.course}\n                    style={{ width: 200, margin: \"auto\" }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"filter by course\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default ViewAllStaff;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewCourseCoverage.jsx",["377"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport Fade from \"react-reveal/Fade\";\nimport { MyButton } from \"../../styles/StyledComponents\";\n\nfunction ViewCourseCoverage() {\n  const [data, setData] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/viewCourseCoverage`\n          );\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data;\n            setData(data);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">View course coverage</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Course name\", field: \"course\" },\n                { title: \"Coverage %\", field: \"coverage\" },\n              ]}\n              data={data}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#ECEFF4\",\n                  color: \"#000000\",\n                  fontSize: 16,\n                },\n              }}\n              components={{\n                Toolbar: (props) => (\n                  <div style={{ padding: \"10px 10px\", margin: \"auto\" }}>\n                    <MyButton\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() =>\n                        (document.location.href =\n                          window.location.origin + \"/CourseCoverage\")\n                      }\n                    >\n                      My courses coverage\n                    </MyButton>\n                  </div>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\nexport default ViewCourseCoverage;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/CC/CourseSlotCRUD.jsx",["378","379","380"],"import React, { useState, useEffect } from \"react\";\n//Icons\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n//Components\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\n//CRUD\nimport { axios } from \"../../helpers/axios\";\nimport { link } from \"../../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../../helpers/axiosCall\";\n\n//Styling\nimport \"../../styles/_colorSchema.scss\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction CourseSlotCRUD() {\n  //States needed\n  const [courses, setCourses] = useState([]); //To get the courses and put it in the list\n  const [course1, setCourse] = useState(\"\"); //The selected course\n  const [day, setDay] = useState(\"\"); //The day added-deleted\n  const [location, setLocation] = useState(\"\"); //The location added-deleted\n  const [timing, setTiming] = useState(\"\"); //The timing added-deleted\n  const [dayU, setDayU] = useState(\"\"); //The day updated\n  const [locationU, setLocationU] = useState(\"\"); //The location updated\n  const [timingU, setTimingU] = useState(\"\"); //The timing updated\n  const [optionSelected, setOptionSelected] = useState(\"add\"); //To keep track of the selected option\n  const [buttonEnabled, setButtonEnabled] = useState(true); //To know if we can enable the button\n\n  const { addToast } = useToasts();\n  const useStyles = makeStyles((theme) => ({\n    mainGridContainer: {\n      marginTop: \"150px\",\n    },\n    gridContainer: {\n      backgroundColor: \"white\",\n      boxShadow: \"0px 0px 15px 0px rgba(0, 0, 0, 0.64)\",\n      borderRadius: \"13px\",\n    },\n    courseSlotsDiv: {\n      width: \"60%\",\n      height: \"80%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      display: \"block\",\n    },\n    button: {\n      backgroundColor:\n        optionSelected === \"add\"\n          ? \"#058c42\"\n          : optionSelected === \"update\"\n          ? \"#045CC8\"\n          : \" #C81927\",\n      color: \"white\",\n    },\n    radio: {\n      \"&$checked\": {\n        color: \"#058c42\",\n      },\n    },\n    checked: {},\n  }));\n  const classes = useStyles();\n  //Constants for select options\n  const weekDays = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n  ];\n  const slotTiming = [\n    \"1st slot (08:15 - 09:45)\",\n    \"2nd slot (10:00 - 11:30)\",\n    \"3rd slot (11:45 - 13:15)\",\n    \"4th slot (13:45 - 15:15)\",\n    \"5th slot (15:45 - 17:15)\",\n  ];\n\n  //Handling components changes and update states\n  //1- Choose course\n  const handleOnChangeCourse = (newValue) => {\n    setCourse(newValue);\n  };\n  //2- Choose option\n  const handleOnChangeRadio = (e) => {\n    setOptionSelected(e.target.value);\n    if (e.target.value === \"add\" || e.target.value === \"delete\") {\n      setDayU(\"\");\n      setTimingU(\"\");\n      setLocationU(\"\");\n    }\n    // handleButtonEnable();\n  };\n  //3- Choose day\n  const handleOnChangeDay = (newValue) => {\n    setDay(newValue);\n  };\n  //3- Choose updated day\n  const handleOnChangeDayU = (newValue) => {\n    setDayU(newValue);\n  };\n  //4- Choose a timing\n  const handleOnChangeTiming = (newValue) => {\n    setTiming(newValue);\n    // handleButtonEnable();\n  };\n  //5- Choose an updated timing\n  const handleOnChangeTimingU = (newValue) => {\n    setTimingU(newValue);\n    // handleButtonEnable();\n  };\n  //6- Write a location\n  const handleOnChangeLocation = (e) => {\n    setLocation(e.target.value);\n    // handleButtonEnable();\n  };\n  //7- Write the updated location\n  const handleOnChangeLocationU = (e) => {\n    setLocationU(e.target.value);\n    // handleButtonEnable();\n  };\n  //8- Handling the submitting\n  const handleSubmit = async (e) => {\n    try {\n      let response = null;\n      if (optionSelected === \"add\") {\n        console.log(\"add\");\n        response = await axios.post(`${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else if (optionSelected === \"update\") {\n        response = await axios.put(`${link}/slots/courseSlot`, {\n          course: course1,\n          dayOld: day,\n          timeOld: timing.substring(10, 15),\n          locationOld: location,\n          dayNew: dayU,\n          timeNew: timingU.substring(10, 15),\n          locationNew: locationU,\n        });\n      } else if (optionSelected === \"delete\") {\n        console.log(course1);\n        response = await axiosCall(\"delete\", `${link}/slots/courseSlot`, {\n          course: course1,\n          day: day,\n          time: timing.substring(10, 15),\n          location: location,\n        });\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else if (response.data.errorJ) {\n        addToast(\n          \"The location should be written in the format: 'Building.RoomNumber' e.g.'C7.209'\",\n          { appearance: \"error\", autoDismiss: true }\n        );\n      } else {\n        console.log(response.data.data);\n        addToast(response.data.data, {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  const handleButtonEnable = () => {\n    if (\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        (optionSelected === \"add\" || optionSelected === \"delete\")) ||\n      (course1 &&\n        day &&\n        location &&\n        timing &&\n        dayU &&\n        locationU &&\n        timingU &&\n        optionSelected === \"update\")\n    ) {\n      setButtonEnabled(false);\n    } else {\n      setButtonEnabled(true);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(`${link}/courses/coursesCC`);\n        if (response.data.error) {\n          addToast(response.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        } else {\n          const myCourses = response.data.data;\n          setCourses(myCourses);\n        }\n      } catch (e) {\n        console.log(\"~ err\", e);\n        document.location.href = window.location.origin + \"/unauthorized\";\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    handleButtonEnable();\n  }, [\n    courses,\n    course1,\n    day,\n    dayU,\n    timing,\n    timingU,\n    location,\n    locationU,\n    optionSelected,\n    buttonEnabled,\n  ]);\n\n  return (\n    <div className={classes.courseSlotsDiv}>\n      <Grid container className={classes.mainGridContainer} justify=\"center\">\n        <Grid\n          item\n          container\n          spacing={7}\n          className={classes.gridContainer}\n          justify=\"space-between\"\n          xs={12}\n          sm={12}\n          md={12}\n        >\n          {/* Choose Course */}\n          <Grid item container spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"5px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <LibraryBooksIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={7}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={courses}\n                getOptionLabel={(coursename) => coursename}\n                onChange={(e, newValue) => handleOnChangeCourse(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Course\" value={course1} />\n                )}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            container\n            spacing={2}\n            xs={12}\n            sm={12}\n            md={6}\n            justify=\"space-between\"\n          >\n            <Grid item xs={12} sm={12} md={2}>\n              <FormControlLabel\n                value=\"add\"\n                control={\n                  <Radio\n                    classes={{ root: classes.radio, checked: classes.checked }}\n                    value=\"add\"\n                    checked={optionSelected === \"add\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Add\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"30px\" }}>\n              <FormControlLabel\n                value=\"update\"\n                control={\n                  <Radio\n                    color=\"primary\"\n                    value=\"update\"\n                    checked={optionSelected === \"update\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Update\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={2} style={{ marginRight: \"115px\" }}>\n              <FormControlLabel\n                value=\"delete\"\n                control={\n                  <Radio\n                    value=\"delete\"\n                    checked={optionSelected === \"delete\"}\n                    onChange={handleOnChangeRadio}\n                  />\n                }\n                label=\"Delete\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <TodayIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={weekDays}\n                getOptionLabel={(day) => day}\n                onChange={(e, newValue) => handleOnChangeDay(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Day\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update day */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <TodayIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={weekDays}\n                  getOptionLabel={(day) => day}\n                  onChange={(e, newValue) => handleOnChangeDayU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New day\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container spacing={2} item xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{\n                alignSelf: \"flex-end\",\n                marginBottom: \"10px\",\n                marginRight: \"15px\",\n              }}\n            >\n              <AccessTimeIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <Autocomplete\n                id=\"auto-complete\"\n                options={slotTiming}\n                getOptionLabel={(slot) => slot}\n                onChange={(e, newValue) => handleOnChangeTiming(newValue)}\n                autoComplete\n                includeInputInList\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Timing\" margin=\"normal\" />\n                )}\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot timing */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{\n                  alignSelf: \"flex-end\",\n                  marginBottom: \"10px\",\n                  marginRight: \"15px\",\n                }}\n              >\n                <AccessTimeIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <Autocomplete\n                  id=\"auto-complete\"\n                  options={slotTiming}\n                  getOptionLabel={(slot) => slot}\n                  onChange={(e, newValue) => handleOnChangeTimingU(newValue)}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"New timing\" margin=\"normal\" />\n                  )}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid container item spacing={2} xs={12} sm={12} md={6}>\n            <Grid\n              item\n              xs={1}\n              sm={1}\n              md={1}\n              style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n            >\n              <LocationOnIcon />\n            </Grid>\n            <Grid item xs={9} sm={9} md={6}>\n              <TextField\n                // id=\"standard-error-helper-text\"\n                label=\"Location\"\n                // helperText=\"Incorrect entry.\"\n                placeholder=\"eg. C7.209\"\n                onChange={handleOnChangeLocation}\n                // margin=\"normal\"\n              />\n            </Grid>\n          </Grid>\n          {/* Update slot location */}\n          {optionSelected === \"update\" ? (\n            <Grid container item spacing={2} xs={12} sm={12} md={6}>\n              <Grid\n                item\n                xs={1}\n                sm={1}\n                md={1}\n                style={{ marginTop: \"15px\", marginRight: \"15px\" }}\n              >\n                <AddLocationIcon />\n              </Grid>\n              <Grid item xs={9} sm={9} md={6}>\n                <TextField\n                  // id=\"standard-error-helper-text\"\n                  label=\"New location\"\n                  // helperText=\"Incorrect entry.\"\n                  placeholder=\"eg. C7.209\"\n                  onChange={handleOnChangeLocationU}\n                  // margin=\"normal\"\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid item xs={12} sm={12} md={6} />\n          )}\n          <Grid item container xs={12} sm={12} md={12} justify=\"flex-end\">\n            <Grid item xs={12} sm={12} md={2}>\n              <Button\n                variant=\"contained\"\n                // color = {optionSelected === 'add'?\"success\":optionSelected === 'update'?\"primary\":\"secondary\"}\n                className={classes.button}\n                startIcon={\n                  optionSelected === \"add\" ? (\n                    <AddCircleIcon />\n                  ) : optionSelected === \"update\" ? (\n                    <EditIcon />\n                  ) : (\n                    <DeleteIcon />\n                  )\n                }\n                onClick={handleSubmit}\n                disabled={buttonEnabled}\n              >\n                {optionSelected === \"add\"\n                  ? \"Add\"\n                  : optionSelected === \"update\"\n                  ? \"Update\"\n                  : \"Delete\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default CourseSlotCRUD;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/constants.js",["381","382"],"import axiosCall from './axiosCall';\n\nconst jwt = require('jsonwebtoken');\nconst tokenKey = require('../config/keys').secretOrKey;\n\nrequire('dotenv').config();\nvar tmp;\nif (process.env.NODE_ENV === \"production\")\n  tmp = 'https://guc-cms.ahmedashraf.me/api/v1.0';\nelse\n  tmp = `http://localhost:5000`;\nexport const link = tmp;\n\nexport function dateFormat(input) {\n  const date = new Date(input)\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  return year + \"-\" + month + \"-\" + day;\n}\n\nexport async function checkHOD() {\n  let found = false;\n  const loggedInUser = localStorage.getItem(\"user\");\n  let user;\n  if (loggedInUser) user = jwt.verify(loggedInUser, tokenKey);\n  try {\n    const depResult = await axiosCall(\"get\", \"departments/department/all/all\");\n    if (depResult.data.data) {\n      let HOD = await depResult.data.data\n        .filter((element) => element.HOD !== undefined)\n        .forEach((element) => {\n          if (element.HOD === user.id) {\n            found = true;\n          } else {\n            found = false;\n          }\n          return found;\n        });\n    }\n  } catch (err) {\n    console.log(\"~err\", err);\n  }\n  return found;\n}\n\nexport async function checkHODbyID(id) {\n  let found = false;\n  try {\n    const depResult = await axiosCall(\"get\", \"departments/department/all/all\");\n    if (depResult.data.data) {\n      let HOD = await depResult.data.data\n        .filter((element) => element.HOD !== undefined)\n        .forEach((element) => {\n          if (element.HOD === id) {\n            found = true;\n          } else {\n            found = false;\n          }\n          return found;\n        });\n    }\n  } catch (err) {\n    console.log(\"~err\", err);\n  }\n  return found;\n}","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/config/keys.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/axiosCall.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/axios.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Delete.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Update.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Add.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/config/keys_dev.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/auth.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/AttendanceTable.jsx",["383","384"],"import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport Fade from \"react-reveal/Fade\";\nimport { IoFilter, IoCloseSharp } from \"react-icons/io5\";\nimport { Select, MenuItem } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  TimePicker,\n  KeyboardTimePicker,\n} from \"@material-ui/pickers\";\n\nfunction AttendanceTable(props) {\n  const [staff, setStaff] = useState([]);\n  const [HR, setHr] = useState(false);\n  const [originalData, setOriginalData] = useState([]);\n  const [data, setData] = useState([]); //table data\n  const [filtered, setFiltered] = useState(false);\n  const [selectedMonth, setMonth] = useState(\"Month\");\n  const { addToast } = useToasts();\n\n  const month = [\n    \"11 Jan - 10 Feb\", //0 1-2\n    \"11 Feb - 10 Mar\", //1 2-3\n    \"11 Mar - 10 Apr\", //2 3-4\n    \"11 Apr - 10 May\", //3 4-5\n    \"11 May - 10 Jun\", //4 5-6\n    \"11 Jun - 10 Jul\", //5 6-7\n    \"11 Jul - 10 Aug\", //6 7-8\n    \"11 Aug - 10 Sep\", //7 8-9\n    \"11 Sep - 10 Oct\", //8 9-10\n    \"11 Oct - 10 Nov\", //9 10-11\n    \"11 Nov - 10 Dec\", //10 11-12\n    \"11 Dec - 10 Jan\", //11 12-1\n  ];\n\n  const compare = (a, b) => {\n    const rec1 = a.date;\n    const rec2 = b.date;\n\n    let comparison = 0;\n    if (rec1 < rec2) {\n      comparison = 1;\n    } else if (rec1 > rec2) {\n      comparison = -1;\n    }\n    return comparison;\n  };\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = window.location.origin + \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n          console.log(\n            \"🚀 ~ file: AttendanceTable.jsx ~ line 63 ~ fetchData ~ temp\",\n            temp\n          );\n          let staff = \"\";\n          if (temp.data.data) staff = temp.data.data;\n\n          if (props.hr) setHr(true);\n\n          if (staff) {\n            setStaff(staff);\n            let records = staff.attendanceRecords;\n            // console.log(\n            //   \"🚀 ~ file: AttendanceTable.jsx ~ line 73 ~ fetchData ~ records\",\n            //   records\n            // );\n            // for (let i = 0; i < records.length; i++) {\n            //   console.log(records[i].endTime);\n            //   let nweDate = \"2021-01-01T\" + records[i].endTime;\n            //   records[i].endTime = new Date(nweDate);\n\n            //   // console.log(t);\n            // }\n\n            //sorted .. from most to least recent\n            const result = records.sort(compare);\n            setOriginalData(result);\n            setData(result);\n          } else {\n            addToast(\"Error occurred, please try again later\", {\n              appearance: \"danger\",\n              autoDismiss: true,\n            });\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n        }\n      }\n      fetchData();\n    }\n  }, [props]);\n\n  const handleFilter = async () => {\n    try {\n      if (selectedMonth === \"Month\") {\n      } else {\n        setFiltered(true);\n        let term = parseInt(month.indexOf(selectedMonth));\n        if (term > -1) {\n          let month1 = term + 1;\n          let month2;\n          if (month1 === 12) month2 = 1;\n          else month2 = month1 + 1;\n\n          const res = await axiosCall(\n            \"get\",\n            `attendance/viewAttendance/${month1}/${month2}`\n          );\n\n          addToast(\"filtered successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n\n          return setData(res.data);\n        } else {\n          addToast(\"Sorry this is not a valid month\", {\n            appearance: \"danger\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (error) {\n      addToast(\"crashed\", {\n        appearance: \"danger\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  const handleRemoveFilter = async () => {\n    setData(originalData);\n    setFiltered(false);\n    setMonth(\"\");\n  };\n\n  const handleRowUpdate = async (newData, oldData) => {\n    if (oldData.startTime && oldData.endTime) {\n      return addToast(\n        \"Sorry you cannot update a record with no missing sign in/out\",\n        {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        }\n      );\n    }\n    //get number\n    const filtered = originalData.filter((rec) => rec.date === oldData.date);\n    let numberHere = 0;\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i]._id === oldData._id) {\n        numberHere = i + 1;\n        break;\n      }\n    }\n\n    const newSignIn = newData.startTime;\n    const newSignOut = newData.endTime;\n\n    if (typeof newSignIn === \"object\" && typeof newSignOut === \"object\") {\n      return addToast(\"Sorry you cannot change both signIn and sign Out\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else if (!oldData.startTime && newData.startTime) {\n      //changed signIn\n      let time = newData.startTime.toLocaleTimeString().split(\" \");\n      let signIn = time[0];\n      let splitted = time[0].split(\":\");\n      if (time[1] === \"PM\") {\n        splitted[0] = parseInt(splitted[0]) + 12;\n      } else {\n        if (parseInt(splitted[0]) < 7) {\n          splitted[0] = 7;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n      }\n      signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n      if (signIn.length < 8) signIn = \"0\" + signIn;\n\n      const body = {\n        id: staff.gucId,\n        signIn: signIn,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (!oldData.endTime && newData.endTime) {\n      //changed signOut\n\n      let time = newData.endTime.toLocaleTimeString().split(\" \");\n      let signOut = time[0];\n      if (time[1] === \"PM\") {\n        let splitted = time[0].split(\":\");\n        splitted[0] = parseInt(splitted[0]) + 12;\n        if (splitted[0] > 19) {\n          splitted[0] = 19;\n          splitted[1] = \"00\";\n          splitted[2] = \"00\";\n        }\n        signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n      }\n      if (signOut.length < 8) signOut = \"0\" + signOut;\n\n      const body = {\n        id: staff.gucId,\n        signOut: signOut,\n        date: oldData.date,\n        day: oldData.day,\n        number: parseInt(numberHere),\n      };\n\n      const res = await axiosCall(\n        \"put\",\n        \"attendance/addMissingSignInOut\",\n        body\n      );\n\n      if (res.data.data) {\n        addToast(\"Record updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n          autoDismissTimeout: 3000,\n        });\n\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n        let staffUpdated = \"\";\n        if (temp.data.data) staffUpdated = temp.data.data;\n\n        if (staffUpdated) {\n          let records = staffUpdated.attendanceRecords;\n\n          //sorted .. from most to least recent\n          const result = records.sort(compare);\n\n          setOriginalData(result);\n          setData(result);\n        }\n      }\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      }\n    } else if (\n      (typeof oldData.startTime === \"string\" &&\n        typeof newData.startTime === \"object\") ||\n      (typeof oldData.endTime === \"string\" &&\n        typeof newData.endTime === \"object\")\n    ) {\n      return addToast(\"You can not change existing records\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    } else {\n      return addToast(\"You did not change any record\", {\n        appearance: \"warning\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  const handleRowAdd = async (newData) => {\n    let input = newData.date;\n\n    if (!newData.date || !newData.startTime || !newData.endTime) {\n      return addToast(\"Please enter all details\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n\n    //day\n    let day;\n    switch (input.toString().split(\" \")[0]) {\n      case \"Sat\":\n        day = \"Saturday\";\n        break;\n      case \"Sun\":\n        day = \"Sunday\";\n        break;\n      case \"Mon\":\n        day = \"Monday\";\n        break;\n      case \"Tues\":\n        day = \"Tuesday\";\n        break;\n      case \"Wed\":\n        day = \"Wednesday\";\n        break;\n      case \"Thu\":\n        day = \"Thursday\";\n        break;\n      case \"Fri\":\n        return addToast(\"Sorry you cannot add a record on Friday\", {\n          appearance: \"error\",\n          autoDismiss: true,\n          autoDismissTimeout: 2000,\n        });\n      default:\n        break;\n    }\n\n    //date\n    let dayOfMonth =\n      input.getDate() > 9 ? input.getDate() : \"0\" + input.getDate();\n    let monthOfYear =\n      input.getMonth() + 1 > 9\n        ? input.getMonth() + 1\n        : \"0\" + (input.getMonth() + 1);\n\n    let date = input.getFullYear() + \"-\" + monthOfYear + \"-\" + dayOfMonth;\n\n    //signIn\n    let time = newData.startTime.toLocaleTimeString().split(\" \");\n    let signIn = time[0];\n    let splitted = time[0].split(\":\");\n    if (time[1] === \"PM\") {\n      splitted[0] = parseInt(splitted[0]) + 12;\n    } else {\n      if (parseInt(splitted[0]) < 7) {\n        splitted[0] = 7;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n    }\n    signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n\n    if (signIn.length < 8) signIn = \"0\" + signIn;\n\n    //signOut\n    time = newData.endTime.toLocaleTimeString().split(\" \");\n    let signOut = time[0];\n    if (time[1] === \"PM\") {\n      let splitted = time[0].split(\":\");\n      splitted[0] = parseInt(splitted[0]) + 12;\n      if (splitted[0] > 19) {\n        splitted[0] = 19;\n        splitted[1] = \"00\";\n        splitted[2] = \"00\";\n      }\n      signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\n    }\n    if (signOut.length < 8) signOut = \"0\" + signOut;\n\n    const body = {\n      id: staff.gucId,\n      signIn: signIn,\n      signOut: signOut,\n      date: date,\n      day: day,\n      number: 1,\n    };\n\n    const res = await axiosCall(\"put\", \"attendance/addMissingSignInOut\", body);\n\n    if (res.data.data) {\n      addToast(\"Record updated successfully\", {\n        appearance: \"success\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n\n      let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\n      let staffUpdated = \"\";\n      if (temp.data.data) staffUpdated = temp.data.data;\n\n      if (staffUpdated) {\n        let records = staffUpdated.attendanceRecords;\n\n        //sorted .. from most to least recent\n        const result = records.sort(compare);\n\n        setOriginalData(result);\n        setData(result);\n      }\n    }\n    if (res.data.error) {\n      addToast(res.data.error, {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2000,\n      });\n    }\n  };\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">{props.title}</h3>\n        <hr className=\"general-line\" />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <MaterialTable\n                title=\"\"\n                columns={[\n                  {\n                    title: \"Day\",\n                    field: \"day\",\n                    editable: false,\n                  },\n                  {\n                    title: \"Date\",\n                    field: \"date\",\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          value={value ? value : \"\"}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign In\",\n                    field: \"startTime\",\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardTimePicker\n                          value={value}\n                          defaultValue=\"00:00 \"\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"Sign Out\",\n                    field: \"endTime\",\n                    sorting: false,\n                    filtering: false,\n                    editComponent: ({ value, onChange }) => (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <TimePicker\n                          value={value}\n                          onChange={onChange}\n                          ampm={false}\n                        />\n                      </MuiPickersUtilsProvider>\n                    ),\n                  },\n                  {\n                    title: \"leave\",\n                    field: \"absentsatisfied\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Absent Status\",\n                    field: \"absentStatus\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                  {\n                    title: \"Description\",\n                    field: \"description\",\n                    sorting: false,\n                    filtering: false,\n                    editable: false,\n                  },\n                ]}\n                align=\"center\"\n                data={data}\n                options={{\n                  search: true,\n                  // filtering: true,\n                  sorting: true,\n                  actionsColumnIndex: -1,\n                  headerStyle: {\n                    backgroundColor: \"#FFF\",\n                    color: \"#000\",\n                    letterSpacing: \"0.1em\",\n                    fontSize: \"18px\",\n                    margin: \"0\",\n                    padding: \"0 0 10px 0\",\n                  },\n                  rowStyle: {\n                    fontSize: \"15px\",\n                  },\n                }}\n                components={{\n                  Toolbar: (props) => (\n                    <div className=\"select-table-container\">\n                      <MTableToolbar {...props} />\n                      <Select\n                        className=\"table-select month\"\n                        value={selectedMonth}\n                        onChange={(event) => setMonth(event.target.value)}\n                        placeholder=\"Month\"\n                      >\n                        <MenuItem className=\"\" value={\"Month\"} key={\"Month\"}>\n                          Month\n                        </MenuItem>\n                        {month.map((mon) => (\n                          <MenuItem className=\"\" value={mon} key={mon}>\n                            {mon}\n                          </MenuItem>\n                        ))}\n                      </Select>\n\n                      <IoFilter\n                        className=\"filter-icon\"\n                        onClick={() => handleFilter()}\n                      />\n                      {filtered ? (\n                        <IoCloseSharp\n                          className=\"filter-icon\"\n                          onClick={handleRemoveFilter}\n                        />\n                      ) : null}\n                    </div>\n                  ),\n                }}\n                editable={\n                  HR\n                    ? {\n                        // handle row add\n                        onRowAdd: (newData) =>\n                          new Promise((resolve, reject) => {\n                            setTimeout(() => {\n                              handleRowAdd(newData, resolve);\n\n                              resolve();\n                            }, 1500);\n                          }),\n\n                        //to update row\n                        onRowUpdate: (newData, oldData) =>\n                          new Promise((resolve) => {\n                            setTimeout(() => {\n                              handleRowUpdate(newData, oldData);\n                              resolve();\n                            }, 1500);\n                          }),\n                      }\n                    : false\n                }\n              />\n            </Grid>\n          </Grid>\n        </MuiPickersUtilsProvider>\n      </Fade>\n    </div>\n  );\n}\n\nexport default AttendanceTable;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Schedule.jsx",["385"],"import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport auth from \"../helpers/auth\";\nimport checkLogin from \"../helpers/checkLogin\";\n\nimport { axios } from \"../helpers/axios\";\nimport \"../styles/_colorSchema.scss\";\n\nfunction Schedule(props) {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"13:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"15:45\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await checkLogin();\n\n        let response;\n        if (props.gucId) {\n          await auth([\"Course Instructor\",\"Teaching Assistant\"]);\n          response = await axios.get(`${link}/staffMembers/viewMySchedule`);\n        } else if (props.id) {\n          await auth([\"Course Instructor\"]);\n          response = await axios.get(\n            `${link}/staffMembers/viewStaffSchedule/${props.id}`\n          );\n        }\n\n        if (response.data.error) {\n          addToast(response.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        } else if (response.data) {\n          const slotsDisplay = response.data;\n          var sat = [];\n          var sun = [];\n          var mon = [];\n          var tues = [];\n          var wed = [];\n          var thurs = [];\n          for (var i = 0; i < slotsDisplay.length; i++) {\n            switch (slotsDisplay[i].day) {\n              case \"Saturday\":\n                sat.push(slotsDisplay[i]);\n                break;\n              case \"Sunday\":\n                sun.push(slotsDisplay[i]);\n                break;\n              case \"Monday\":\n                mon.push(slotsDisplay[i]);\n                break;\n              case \"Tuesday\":\n                tues.push(slotsDisplay[i]);\n                break;\n              case \"Wednesday\":\n                wed.push(slotsDisplay[i]);\n                break;\n              case \"Thursday\":\n                thurs.push(slotsDisplay[i]);\n                break;\n              default:\n                break;\n            }\n          }\n          setSats(orderDays(sat));\n          setSuns(orderDays(sun));\n          setMons(orderDays(mon));\n          setTuess(orderDays(tues));\n          setWeds(orderDays(wed));\n          setThurss(orderDays(thurs));\n        }\n      } catch (e) {\n        console.log(\"~ err\", e);\n        addToast(\"Sorry there is an error occurred, please try again later\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div class=\"table-page-slots-styleS\">\n      <h7 class=\"slots-titleS\">Academic Schedule</h7>\n      <div class=\"slots-lineS\"></div>\n      <TableContainer class=\"table-slots-containerS\" component={Paper}>\n        <Table\n          class=\"table-slots-style border\"\n          aria-label=\"customized table\"\n          size=\"small\"\n        >\n          <TableHead className=\"yellow\">\n            <TableRow>\n              <TableCell className=\"border\">Day/Slot</TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;1st\n                <br /> 08:15 - 09:45\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;2nd\n                <br /> 10:00 - 11:30\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;3rd\n                <br /> 11:45 - 13:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;4th\n                <br /> 13:45 - 15:15\n              </TableCell>\n              <TableCell className=\"border\" align=\"center\">\n                &nbsp;&nbsp;5th\n                <br /> 15:45 - 17:15\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key=\"Saturday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Saturday\n              </TableCell>\n              {sats.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Sunday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Sunday\n              </TableCell>\n              {suns.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Monday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Monday\n              </TableCell>\n              {mons.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Tuesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Tuesday\n              </TableCell>\n              {tuess.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Wednesday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Wednesday\n              </TableCell>\n              {weds.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n            <TableRow key=\"Thursday\">\n              <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\n                Thursday\n              </TableCell>\n              {thurss.map((day) => (\n                <TableCell\n                  align=\"center\"\n                  className={\n                    typeof day === \"string\" ? \"border\" : \"border occupiedS\"\n                  }\n                >\n                  {typeof day === \"string\" ? day : day.Location} <br />\n                  &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default Schedule;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/helpers/setAuthToken.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/DeleteCourse.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/UpdateCourse.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/course/AddCourse.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/DeleteDepartment.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/AddDepartment.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/department/UpdateDepartment.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/DeleteLocation.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/AddLocation.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/location/UpdateLocation.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/DeleteFaculty.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/UpdateFaculty.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/faculty/AddFaculty.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/CIMenuItems.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/HODMenuItems.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/HRMenuItems.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/ViewRequestsDropDown.jsx",["386","387"],"import React, { useState } from \"react\";\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nimport Sent from \"./request/ViewRequests/Sent\";\nimport Received from \"./request/ViewRequests/Received\";\n\nfunction ViewRequestsDropDown() {\n  const [type, setType] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n\n  const handleSelectType = (value) => {\n    setType(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div className=\"RequestsDropDown\">\n      <div\n        className=\"crud-inner-container request-select\"\n        style={{\n          minHeight: \"0\",\n        }}\n      >\n        <Select\n          className=\"crud-select \"\n           \n          placeholder=\"Select Type\"\n          \n        \n          value={value}\n            onChange={(event) => {\n              setValue(event.target.value);\n            }}\n        >\n          <MenuItem\n            className=\"crud-menuItem \"\n            value=\"Sent Requests\"\n            key=\"Sent Requests\"\n          >\n            Sent Requests\n          </MenuItem>\n          <MenuItem\n            className=\"crud-menuItem\"\n            value=\"Received Requests\"\n            key=\"Received Requests\"\n          >\n            Received Requests\n          </MenuItem>\n        </Select>\n      </div>\n\n      {value === \"Sent Requests\" ? (\n        <Sent/>\n      ) : value === \"Received Requests\" ? (\n        <Received />\n      ) : null}\n    </div>\n  );\n}\n\nexport default ViewRequestsDropDown;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/View.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/RequestsDropDown.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/replacement.jsx",["388","389"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Replacement() {\n  const [date, setDate] = useState();\n  const [recId, setRecId] = useState(\"\");\n  const [loc, setLoc] = useState(\"\");\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Replacement Request\",\n        replacementDate: date,\n        recieverId: recId,\n        location: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setRecId(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n          <br />\n          <br />\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Receiver id</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={recId}\n            onChange={(event) => setRecId(event.target.value)}\n          />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location</InputLabel>\n          <Input\n            className=\"crud-input\"\n            value={loc}\n            onChange={(event) => setLoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" || recId == \"\"\n            ? true\n            : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Replacement;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/slot.jsx",["390"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nfunction Slot() {\n  const [loc, setLoc] = useState(\"\");\n  const [date, setDate] = useState();\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"\");\n\n  const { addToast } = useToasts();\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Slot Request\",\n        date: date,\n        locationType: loc,\n        course: courseChosen,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setLoc(\"\");\n        setCourseChosen(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date and Time </InputLabel>\n\n          <br />\n          <br />\n\n          <DateTimePicker\n            className=\"crud-input\"\n            value={date}\n            onChange={setDate}\n          />\n\n          <br />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Location Type</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={loc}\n            onChange={(event) => {\n              setLoc(event.target.value);\n            }}\n          >\n            <MenuItem className=\"crud-menuItem\" value=\"Tutorial Room\">\n              Tutorial Room\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lecture Hall\">\n              Lecture Hall\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Lab\">\n              Lab\n            </MenuItem>\n            <MenuItem className=\"crud-menuItem\" value=\"Office\">\n              Office\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          <br />\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={\n          loc === \"\" || date == null || courseChosen == \"\" ? true : false\n        }\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Slot;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Request/changeDayOff.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/compensation.jsx",["391"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\n\nimport { FormControl, InputLabel } from \"@material-ui/core\";\n\nfunction Compensation() {\n  const [date1, setDate1] = useState();\n  const [date2, setDate2] = useState();\n  const [Reason, setReason] = useState(\"\");\n  const { addToast } = useToasts();\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Compensation\",\n        LeaveDate: date1,\n        CompensationDate: date2,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate1();\n        setDate2();\n        setReason(\"\");\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Leave Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date1}\n            onChange={setDate1}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Compensation Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker\n            className=\"crud-input\"\n            value={date2}\n            onChange={setDate2}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date1 == null || date2 == null || Reason == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Compensation;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/accidental.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/ViewRequests/Received.jsx",["392"],"import React, { useState } from \"react\";\n\nfunction Received() {\n  return <div>\n   <h1>hello world</h1>\n  </div>;\n}\nexport default Received;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/annual.jsx",["393","394","395","396","397"],"import React, { useState, useEffect } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\n\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  MenuItem,\n} from \"@material-ui/core\";\n\nfunction Annual() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [TAID, setTAID] = useState(\"\");\n  const [time, setTime] = useState();\n\n  const [courses, SetCourses] = useState([]);\n  const [courseChosen, setCourseChosen] = useState(\"Course\");\n  const [check, setCheck] = useState(\"\");\n  const [rep, setRep] = useState({\n    reps: [\n      {\n        TAId: \"\",\n        time: null,\n        coursename: \"\",\n      },\n    ],\n  });\n\n  const array = [];\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await axiosCall(\"get\", \"requests/hisCourses\");\n\n      SetCourses(resp.data.data);\n    }\n    fetchData();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      var object = {\n        TAId: TAID,\n        time: time,\n        coursename: courseChosen,\n      };\n      var res = time.split(\":\");\n      date.setHours(res[0], res[1], 0);\n      console.log(date);\n      var str =\n        date.getFullYear() +\n        \"-\" +\n        (date.getMonth() + 1) +\n        \"-\" +\n        date.getDate() +\n        \"T\" +\n        date.getHours() +\n        \":\" +\n        date.getMinutes() +\n        \":00\";\n      //  console.log(dates);\n      const body1 = {\n        id: TAID,\n        date: str,\n        courseName: courseChosen,\n      };\n      var resp1 = await axiosCall(\"post\", \"requests/checkRep\", body1);\n      setCheck(resp1.data);\n\n      if (resp1.data == \"success\") {\n        console.log(object);\n        setRep({ reps: rep.reps.concat([object]) });\n\n        addToast(\n          \" replacement added successfully,add another one if you want\",\n          {\n            appearance: \"success\",\n            autoDismiss: true,\n          }\n        );\n        setTAID(\"\");\n        setTime();\n        setCourseChosen(\"\");\n        //ha3mlha add f el array w h set kol 7aga b 0 tany w hatl3lh toast by2olh added successfully\n        //click add if you have another replacement\n      }  \n         if (resp1.data.error) {\n        addToast(resp1.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        }); \n      } \n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const body = {\n        type: \"Leave Request\",\n        leaveType: \"Annual\",\n        AnnualLeaveDate: date,\n        rep: rep,\n        reason: Reason,\n      };\n      const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n      if (res.data.data) {\n        addToast(\"Your Request has been sent successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        setDate();\n        setReason(\"\");\n        setRep([\n          {\n            TAId: \"\",\n            time: null,\n            coursename: \"\",\n          },\n        ]);\n      }\n\n      if (res.data.error) {\n        addToast(res.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Replacement</InputLabel>\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">TA ID</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n          <Input\n            className=\"crud-input\"\n            value={TAID}\n            onChange={(event) => setTAID(event.target.value)}\n          />\n\n          <br />\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Course</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <Select\n            className=\"crud-select\"\n            value={courseChosen}\n            onChange={(event) => {\n              setCourseChosen(event.target.value);\n            }}\n          >\n            {courses.length > 0 &&\n              courses.map((course) => (\n                <MenuItem className=\"crud-menuItem\" value={course}>\n                  {course}\n                </MenuItem>\n              ))}\n          </Select>\n\n          <FormControl className=\"crud-formControl\">\n            <InputLabel className=\"crud-inputLabel\">Time</InputLabel>\n          </FormControl>\n          <br />\n          <br />\n\n          <TimePicker className=\"crud-input\" onChange={setTime} value={time} />\n\n          <br />\n          <br />\n\n          <Button\n            variant=\"success\"\n            className=\"crud-submit crud-add-btn green\"\n            disabled={\n              date == null || time == null || TAID == \"\" || courseChosen == \"\"\n                ? true\n                : false\n            }\n            onClick={handleClick}\n          >\n            Add\n          </Button>\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Annual;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/sick.jsx",["398"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Sick() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Sick\",\n          SickDayDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Sick Day Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Sick;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/SendRequest/Leave/maternity.jsx",["399"],"import React, { useState } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport axiosCall from \"../../../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport DatePicker from \"react-date-picker\";\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\n\nfunction Maternity() {\n  const [date, setDate] = useState();\n  const [Reason, setReason] = useState(\" \");\n  const [DocLink, setDoc] = useState(\"\");\n  const { addToast } = useToasts();\n\n  const handleSubmit = async () => {\n    try {\n      var re1 = new RegExp(\"https://drive.google.com/\", \"y\");\n      var OK = DocLink.match(re1);\n\n      if (!OK) {\n        addToast(\"please enter correct drive link\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        const body = {\n          type: \"Leave Request\",\n          leaveType: \"Maternity\",\n          startDate: date,\n\n          document: DocLink,\n          reason: Reason,\n        };\n        const res = await axiosCall(\"post\", \"requests/sendrequest\", body);\n        if (res.data.data) {\n          addToast(\"Your Request has been sent successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n          setDate();\n          setReason(\"\");\n          setDoc(\"\");\n        }\n\n        if (res.data.error) {\n          addToast(res.data.error, {\n            appearance: \"error\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (err) {\n      console.log(\"~err: \", err);\n    }\n  };\n\n  return (\n    <div className=\"crud-inner-container\">\n      <div className=\"crud-form\">\n        <FormControl className=\"crud-formControl\" required>\n          <InputLabel className=\"crud-inputLabel\">Maternity Date</InputLabel>\n\n          <br />\n          <br />\n          <DatePicker className=\"crud-input\" value={date} onChange={setDate} />\n        </FormControl>\n\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">\n            Document Drive Link\n          </InputLabel>\n\n          <Input\n            className=\"crud-input\"\n            type=\"url\"\n            placeholder=\"https://drive.google.com/..\"\n            value={DocLink}\n            onChange={(event) => setDoc(event.target.value)}\n          />\n        </FormControl>\n        <FormControl className=\"crud-formControl\">\n          <InputLabel className=\"crud-inputLabel\">Reason</InputLabel>\n          <br />\n          <br />\n          <textarea\n            className=\"crud-input\"\n            rows=\"3\"\n            cols=\"40\"\n            value={Reason}\n            onChange={(event) => {\n              setReason(event.target.value);\n            }}\n          ></textarea>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"success\"\n        className=\"crud-submit crud-add-btn green\"\n        disabled={date == null || DocLink == \"\" ? true : false}\n        onClick={handleSubmit}\n      >\n        Send\n      </Button>\n    </div>\n  );\n}\nexport default Maternity;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/request/ViewRequests/Sent.jsx",["400","401","402","403","404","405","406","407"],"import React, { useState, useEffect } from \"react\";\n\nimport axiosCall from \"../../../helpers/axiosCall\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport Button from \"@material-ui/core/Button\";\nimport MaterialTable from \"material-table\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fade from \"react-reveal/Fade\";\nimport { link } from \"../../../helpers/constants.js\";\n\nfunction Sent() {\n  const { addToast } = useToasts();\n  const [rows, setRows] = useState([]);\n  const [reqIDRes, setReqIDRes] = useState(0);\n\n  useEffect(async () => {\n    try {\n      const response = await axiosCall(\"get\", \"requests/viewMyRequest\");\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        let myRequests = response.data.data.map((req) => {\n          return {\n            id: req._id,\n            date: req.date,\n            type: req.type,\n            status: req.status,\n            subject: req.subject,\n          };\n        });\n\n        setRows(myRequests);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      //  document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  }, []);\n\n  const handleSubmit = async (e, rowData) => {\n    try {\n      console.log(\"heloooooo\");\n    } catch (e) {\n      console.log(\"~ err\", e);\n      // document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">My Requests</h3>\n        <hr className=\"general-line\" />\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={10} sm={10} md={10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Date\", field: \"date\" },\n                { title: \"Type\", field: \"type\" },\n                { title: \"Subject\", field: \"subject\" },\n                { title: \"Status\", field: \"status\" },\n              ]}\n              data={rows}\n              onRowClick={(event, rowData) => {\n                document.location.href = `/viewReq/${rowData.id}`;\n              }}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#01579b\",\n                  color: \"#FFF\",\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default Sent;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/SlotLinkingCC.jsx",["408","409","410"],"import React, { useState, useEffect } from \"react\";\nimport { axios } from \"../helpers/axios\";\nimport { link } from \"../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Button from \"@material-ui/core/Button\";\nimport MaterialTable from \"material-table\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fade from \"react-reveal/Fade\";\n\nfunction SlotLinkingCC() {\n  const { addToast } = useToasts();\n  const [rows, setRows] = useState([]);\n  const [reqIDRes, setReqIDRes] = useState(0);\n  const switchDay = (day) => {\n    switch (day) {\n      case 1:\n        return \"Monday\";\n      case 2:\n        return \"Tuesday\";\n      case 3:\n        return \"Wednesday\";\n      case 4:\n        return \"Thursday\";\n      case 5:\n        return \"Friday\";\n      case 6:\n        return \"Saturday\";\n      default:\n        return \"Sunday\";\n    }\n  };\n  useEffect(async () => {\n    try {\n      const response = await axios.get(`${link}/requests/viewSlotRequest`);\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        let myRequests = response.data.data;\n        let index = 1;\n        myRequests.map((req) => {\n          req.id = index++;\n          let dateConvert = new Date(req.date);\n          req.time =\n            (dateConvert.getHours() < 10 ? \"0\" : \"\") +\n            dateConvert.getHours() +\n            \":\" +\n            (dateConvert.getMinutes() < 10 ? \"0\" : \"\") +\n            dateConvert.getMinutes();\n          req.day = switchDay(dateConvert.getDay());\n        });\n        console.log(myRequests);\n        setRows(myRequests);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  }, [reqIDRes]);\n  const useStyles = makeStyles((theme) => ({\n    //TODO: theme colors\n    acceptButton: {\n      backgroundColor: \"#00c458\",\n      color: \"white\",\n      // marginLeft:\"20px\"\n    },\n    rejecttButton: {\n      backgroundColor: \"#ff2638\",\n      color: \"white\",\n      // marginLeft:\"20px\"\n    },\n  }));\n\n  const handleSubmit = async (e, rowData) => {\n    let submittedStatus = e.currentTarget.value;\n    try {\n      const response = await axios.put(\n        `${link}/requests/acceptRejectSlotLinking`,\n        {\n          reqNumber: rowData.id,\n          status: submittedStatus,\n        }\n      );\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        if (\n          submittedStatus === \"accepted\" &&\n          response.data.data ===\n            \"The slot-linking request is rejected successfully\"\n        ) {\n          addToast(\n            `The slot-linking request is rejected since there is no locations of type ${rowData.locationType} at the requested time.`,\n            { appearance: \"error\", autoDismiss: true }\n          );\n        } else {\n          addToast(response.data.data, {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n        setReqIDRes(rowData.id);\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n  const classes = useStyles();\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">Slot Requests</h3>\n        <hr className=\"general-line\" />\n        <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item xs={10} sm={10} md={10}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Course name\", field: \"coursename\" },\n                { title: \"Day\", field: \"day\" },\n                { title: \"Time\", field: \"time\" },\n                { title: \"Location type\", field: \"locationType\" },\n                { title: \"Sender\", field: \"sender.gucId\" },\n                { title: \"Status\", field: \"status\" },\n                { title: \"Subject\", field: \"subject\" },\n              ]}\n              data={rows}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"Save User\",\n                  onClick: (event, rowData) => handleSubmit(event, rowData),\n                },\n              ]}\n              options={{\n                headerStyle: {\n                  backgroundColor: \"#01579b\",\n                  color: \"#FFF\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <div style={{ width: \"150px\" }}>\n                    <Button\n                      onClick={(event) =>\n                        props.action.onClick(event, props.data)\n                      }\n                      // color=\"primary\"\n                      // class = \"green\"\n                      // style = {{backgroundColor: \"#058c42\"}}\n                      className={classes.acceptButton}\n                      variant=\"contained\"\n                      style={{ textTransform: \"none\" }}\n                      size=\"small\"\n                      value=\"accepted\"\n                      disabled={props.data.status === \"pending\" ? false : true}\n                    >\n                      Accept\n                    </Button>\n                    &nbsp;&nbsp;\n                    <Button\n                      onClick={(event) =>\n                        props.action.onClick(event, props.data)\n                      }\n                      // color=\"secondary\"\n                      className={classes.rejecttButton}\n                      variant=\"contained\"\n                      style={{ textTransform: \"none\" }}\n                      size=\"small\"\n                      value=\"rejected\"\n                      disabled={props.data.status === \"pending\" ? false : true}\n                    >\n                      Reject\n                    </Button>\n                  </div>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\n\nexport default SlotLinkingCC;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Request/viewReq.jsx",["411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../../helpers/constants.js\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"react-avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useToasts, addToast } from \"react-toast-notifications\";\n\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Popper from \"@material-ui/core/Popper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 500,\n    fontSize: 20,\n    borderRadius: 10,\n    padding: \"2%\",\n    width: 500,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    padding: \"5%\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  button: {\n    margin: \"auto\",\n  },\n  margin: {\n    margin: \"auto\",\n  },\n  text: {\n    margin: theme.spacing(1),\n    fontSize: 18,\n  },\n}));\nfunction ViewReq(props) {\n  const [request, setRequest] = useState([]);\n  const [type, setType] = useState(\"\");\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/requests/viewReq/${props.match.params.id}`\n          );\n          console.log(response);\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            let req = response.data.data.request;\n            setRequest(req);\n            console.log(req);\n            //'Replacement Request', 'Slot Request', 'Change DayOff', 'Leave Request'\n            console.log(req.type);\n            if (req.type == \"Leave Request\") {\n              setType(req.leavetype);\n            }\n            if (\n              req.type == \"Replacement Request\" ||\n              req.type == \"Slot Request\" ||\n              req.type == \"Change DayOff\"\n            ) {\n              setType(req.type);\n            }\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.modal}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Date: {request.date}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Type: {type}\n          </Typography>\n          {type == \"Replacement Request\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Replacemnt Date: {request.replacemntDate}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Location: {request.location}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                coursename: {request.coursename}\n              </Typography>\n            </div>\n          ) : type == \"Slot Request\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                coursename:{request.coursename}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Location Type : {request.locationType}\n              </Typography>\n            </div>\n          ) : type == \"Change DayOff\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                New DayOff: {request.newDayOff}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason: {request.reason}\n              </Typography>\n            </div>\n          ) : type == \"Compensation\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                CompensationDate:{request.CompensationDate}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                LeaveDate: {request.LeaveDate}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Document: {request.document}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason: {request.reason}\n              </Typography>\n            </div>\n          ) : type == \"Maternity\" ? (\n            //startDate: startDate,\n            //  document: doc,\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Maternity Date: {request.startDate}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Document: {request.document}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason: {request.reason}\n              </Typography>\n            </div>\n          ) : type == \"Accidental\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Accident Date: {request.AccidentDate}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason: {request.reason}\n              </Typography>\n            </div>\n          ) : type == \"Annual\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                AnnualLeave Date:{request.AnnualLeaveDate}\n              </Typography>\n\n              {request.replacements.reps.map((rep) => (\n                <div>\n                  Replacements\n                  <Typography\n                    className={classes.text}\n                    color=\"textPrimary\"\n                    component=\"h6\"\n                    variant=\"h6\"\n                  >\n                    TA ID:{rep.TAId}\n                  </Typography>\n                  <Typography\n                    className={classes.text}\n                    color=\"textPrimary\"\n                    component=\"h6\"\n                    variant=\"h6\"\n                  >\n                    time :{rep.time}\n                  </Typography>\n                  <Typography\n                    className={classes.text}\n                    color=\"textPrimary\"\n                    component=\"h6\"\n                    variant=\"h6\"\n                  >\n                    Course Name:{rep.coursename}\n                  </Typography>\n                </div>\n              ))}\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                AnnualLeave Date:{request.AnnualLeaveDate}\n              </Typography>\n\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason:{request.reason}\n              </Typography>\n            </div>\n          ) : type == \"Sick\" ? (\n            <div>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Sick Date:{request.SickDayDate}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Document:{request.document}\n              </Typography>\n              <Typography\n                className={classes.text}\n                color=\"textPrimary\"\n                component=\"h6\"\n                variant=\"h6\"\n              >\n                Reason:{request.reason}\n              </Typography>\n            </div>\n          ) : null}\n\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            status: {request.status}\n          </Typography>\n\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Subject: {request.subject}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\nexport default ViewReq;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/viewRequests.jsx",["433","434","435","436","437"],"import React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { link } from \"../../helpers/constants.js\";\nimport Fade from \"react-reveal/Fade\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { dateFormat } from \"../../helpers/constants.js\";\nimport { MyButton } from \"../../styles/StyledComponents\";\n\nfunction ViewRequests() {\n  const [data, setData] = useState([]); //table data\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          const response = await axiosCall(\n            \"get\",\n            `${link}/requests/viewRecievedRequest/Leave Request`\n          );\n          const staff = await axiosCall(\n            \"get\",\n            `${link}/departments/getAllStaffMembers/all`\n          );\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            let data = response.data.data.map((request) => {\n              return {\n                sender: staff.data.data.map((staff) => {\n                  if (staff._id === request.sender) {\n                    return staff.name;\n                  }\n                }),\n                reciever: staff.data.data.map((staff) => {\n                  if (staff._id === request.reciever) {\n                    return staff.name;\n                  }\n                }),\n                status: request.status,\n                type: request.type,\n                date: dateFormat(request.date),\n                id: request._id,\n              };\n            });\n            setData(data);\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  async function handleOnChange(event) {\n    try {\n      const res = await axiosCall(\n        \"get\",\n        `${link}/requests/viewRecievedRequest/${event.type}`\n      );\n      const staff = await axiosCall(\n        \"get\",\n        `${link}/departments/getAllStaffMembers/all`\n      );\n      console.log(res);\n      let data = res.data.data.map((request) => {\n        return {\n          sender: staff.data.data.map((staff) => {\n            if (staff._id === request.sender) {\n              return staff.name;\n            }\n          }),\n          reciever: staff.data.data.map((staff) => {\n            if (staff._id === request.reciever) {\n              return staff.name;\n            }\n          }),\n          status: request.status,\n          type: request.type,\n          date: dateFormat(request.date),\n          id: request._id,\n        };\n      });\n      setData(data);\n    } catch (err) {\n      console.log(\"~err\", err);\n    }\n  }\n\n  const requestType = [{ type: \"Change DayOff\" }, { type: \"Leave Request\" }];\n\n  return (\n    <div className=\"my-table\">\n      <Fade>\n        <h3 className=\"general-header\">Requests</h3>\n        <hr className=\"general-line\" />\n        <Grid container spacing={1}>\n          <Grid item xs={8}>\n            <MaterialTable\n              title=\"\"\n              columns={[\n                { title: \"Sender\", field: \"sender\" },\n                { title: \"Receiver\", field: \"reciever\" },\n                { title: \"Status\", field: \"status\" },\n                { title: \"Type\", field: \"type\" },\n                { title: \"Date\", field: \"date\" },\n              ]}\n              data={data}\n              actions={[\n                {\n                  icon: \"save\",\n                  tooltip: \"view schedule\",\n                  onClick: (event, rowData) => {\n                    document.location.href = `${rowData.id}/viewRequest`;\n                  },\n                },\n              ]}\n              options={{\n                actionsColumnIndex: -1,\n                headerStyle: {\n                  backgroundColor: \"#ECEFF4\",\n                  color: \"#000000\",\n                  fontSize: 16,\n                },\n                ToolbarStyle: {\n                  backgroundColor: \"#045CC8\",\n                },\n              }}\n              components={{\n                Action: (props) => (\n                  <MyButton\n                    onClick={(event) => props.action.onClick(event, props.data)}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    style={{ textTransform: \"none\" }}\n                    size=\"small\"\n                  >\n                    View Request\n                  </MyButton>\n                ),\n                Toolbar: (props) => (\n                  <Autocomplete\n                    className=\"crud-select\"\n                    size=\"small\"\n                    id=\"debug\"\n                    options={requestType}\n                    onChange={(event, newValue) => {\n                      handleOnChange(newValue);\n                    }}\n                    getOptionLabel={(option) => option.type}\n                    style={{ width: 200, margin: \"auto\" }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"choose request type\"\n                        margin=\"normal\"\n                      />\n                    )}\n                  />\n                ),\n              }}\n              onRowClick={(event, rowData) =>\n                (document.location.href = `/viewRequest/${rowData.id}`)\n              }\n            />\n          </Grid>\n        </Grid>\n      </Fade>\n    </div>\n  );\n}\nexport default ViewRequests;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/Request/Request.jsx",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/InstructorAssignment.jsx",["438"],"import React, { useState, useEffect } from \"react\";\nimport { checkHOD, link } from \"../../helpers/constants\";\nimport Button from \"react-bootstrap/Button\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  MenuItem,\n  Input,\n} from \"@material-ui/core\";\n\nimport { useToasts } from \"react-toast-notifications\";\nimport { axiosCall } from \"../../helpers/axiosCall\";\n\nimport Add from \"../../components/Add\";\nimport Update from \"../../components/Update\";\nimport Delete from \"../../components/Delete\";\n\nfunction InstructorAssignment() {\n  const [courses, setCourses] = useState([]);\n  const [course, setCourse] = useState(\"\");\n  const [newCourse, setNewCourse] = useState(\"\");\n  const [crudBtns, setBtns] = useState({\n    add: false,\n    update: false,\n    delete: false,\n  });\n  const [id, setID] = useState(\"\");\n  const [HOD, setHOD] = useState(false);\n\n  const { addToast } = useToasts();\n\n  const handleOnChange = (target) => {\n    setCourse(target.value);\n  };\n\n  const handleUpdateOnChange = (target) => {\n    setNewCourse(target.value);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          let found = await checkHOD();\n          if(found){\n            setHOD(prevCheck => !prevCheck);\n          } else {\n            document.location.href = window.location.origin + '/unauthorized'\n          }\n          const response = await axiosCall(\"get\", `${link}/departments/courses`);\n          console.log(response);\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            const coverageDisplay = response.data.data;\n            const coursesState = coverageDisplay.map((course) => {\n              return course.course;\n            });\n            setCourses(coursesState);\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  const handleSubmit = async () => {\n    try {\n      let response = null;\n      let optionSelected = \"\";\n      if (crudBtns.add) {\n        optionSelected = \"post\";\n      } else if (crudBtns.update) {\n        optionSelected = \"put\";\n      } else if (crudBtns.delete) {\n        optionSelected = \"delete\";\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n\n      response = await axiosCall(\n        optionSelected,\n        `${link}/departments/assignInstructor`,\n        {\n          gucId: id,\n          name: course,\n        }\n      );\n\n      console.log(response);\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        if (optionSelected === \"post\")\n          addToast(\"Successfully assigned instructor to course\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        else if (optionSelected === \"put\") {\n          addToast(\"Updated the instructor assignment successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        } else {\n          addToast(\"The instructor assignment is deleted successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  const handleUpdateSubmit = async () => {\n    try {\n      let response = null;\n      let optionSelected = \"\";\n      if (crudBtns.add) {\n        optionSelected = \"post\";\n      } else if (crudBtns.update) {\n        optionSelected = \"put\";\n      } else if (crudBtns.delete) {\n        optionSelected = \"delete\";\n      } else {\n        addToast(\"You should specify an option\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n        return;\n      }\n\n      response = await axiosCall(\n        optionSelected,\n        `${link}/departments/assignInstructor`,\n        {\n          gucId: id,\n          newName: newCourse,\n          oldName: course\n        }\n      );\n\n      console.log(response);\n\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      } else {\n        if (optionSelected === \"post\")\n          addToast(\"Successfully assigned instructor to course\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        else if (optionSelected === \"put\") {\n          addToast(\"Updated the instructor assignment successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        } else {\n          addToast(\"The instructor assignment is deleted successfully\", {\n            appearance: \"success\",\n            autoDismiss: true,\n          });\n        }\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n      document.location.href = window.location.origin + \"/unauthorized\";\n    }\n  };\n\n  if(HOD)\n   return (\n    <div className=\"crud-outer-container\">\n      <div className=\"crud-container\">\n        <Add\n          text=\"Instructor to course\"\n          onClick={() =>\n            setBtns({\n              add: true,\n              update: false,\n              delete: false,\n            })\n          }\n        />\n        <Update\n          text=\"Instructor to course\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: true,\n              delete: false,\n            })\n          }\n        />\n        <Delete\n          text=\"Instructor from course\"\n          onClick={() =>\n            setBtns({\n              add: false,\n              update: false,\n              delete: true,\n            })\n          }\n        />\n      </div>\n\n      {!crudBtns.add && !crudBtns.delete ? null : (\n        <div className=\"crud-inner-container\">\n          <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                  handleOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n              <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n              />\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n          </div>\n\n          <Button\n            variant={\n              crudBtns.add ? \"success\" : crudBtns.update ? \"primary\" : \"danger\"\n            }\n            className={\n              crudBtns.add\n                ? \"crud-submit crud-add-btn green\"\n                : crudBtns.update\n                ? \"crud-submit crud-update-btn blue\"\n                : \"crud-submit crud-delete-btn red\"\n            }\n            disabled={\n              id === \"\" || course === \"\"\n                ? true\n                : false\n            }\n            onClick={handleSubmit}\n          >\n            {crudBtns.add ? \"Assign\" : crudBtns.update ? \"Update\" : \"Delete\"}\n          </Button>\n        </div>\n      )}\n      { !crudBtns.update ? null : (\n        <div className=\"crud-inner-container\">\n          <div className=\"crud-form\">\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">New Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={newCourse}\n                onChange={(event) => {\n                    handleUpdateOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Old Course Name</InputLabel>\n              <Select\n                className=\"crud-select\"\n                value={course}\n                onChange={(event) => {\n                  handleOnChange(event.target);\n                }}\n              >\n                {courses.length > 0 &&\n                  courses.map((coursename) => (\n                    <MenuItem\n                      className=\"crud-menuItem\"\n                      value={coursename}\n                      key={coursename}\n                    >\n                      {coursename}\n                    </MenuItem>\n                  ))}\n              </Select>\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl className=\"crud-formControl\" required>\n              <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\n              <Input\n                className=\"crud-input\"\n                value={id}\n                onChange={(event) => setID(event.target.value)}\n              />\n              <FormHelperText className=\"crud-helperText\">\n                This field is required\n              </FormHelperText>\n            </FormControl>\n          </div>\n\n          <Button\n            variant={\n              crudBtns.add ? \"success\" : crudBtns.update ? \"primary\" : \"danger\"\n            }\n            className={\n              crudBtns.add\n                ? \"crud-submit crud-add-btn green\"\n                : crudBtns.update\n                ? \"crud-submit crud-update-btn blue\"\n                : \"crud-submit crud-delete-btn red\"\n            }\n            disabled={\n              id === \"\" || course === \"\"\n                ? true\n                : false\n            }\n            onClick={handleUpdateSubmit}\n          >\n            {crudBtns.add ? \"Assign\" : crudBtns.update ? \"Update\" : \"Delete\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  ); \n  else \n  return null;\n}\n\nexport default InstructorAssignment;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/Request.jsx",["439"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"react-avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { checkHOD, link } from \"../../helpers/constants.js\";\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { dateFormat } from \"../../helpers/constants.js\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Popper from \"@material-ui/core/Popper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { AcceptButton, RejectButton } from \"../../styles/StyledComponents.js\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 500,\n    fontSize: 20,\n    borderRadius: 10,\n    padding: \"2%\",\n    boxShadow: \"0px 0px 15px 0px rgba(0, 0, 0, 0.64)\"\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    padding: \"5%\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  button: {\n    margin: \"auto\"\n  },\n  margin: {\n   margin: \"auto\"\n  },\n  text: {\n    margin: theme.spacing(1),\n    fontSize: 18,\n  },\n}));\n\nfunction Request(props) {\n  const [request, setRequest] = useState([]);\n  const [date, setDate] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [sender, setSender] = useState([]);\n  const [gucId, setId] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const { addToast } = useToasts();\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [HOD, setHOD] = useState(false);\n\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popper\" : undefined;\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (!loggedInUser) {\n      document.location.href = \"/login\";\n    } else {\n      async function fetchData() {\n        try {\n          let found = await checkHOD();\n          if(found){\n            setHOD(prevCheck => !prevCheck);\n          } else {\n            document.location.href = window.location.origin + '/unauthorized'\n          }\n          const response = await axiosCall(\n            \"get\",\n            `${link}/requests/viewRequest/${props.match.params.id}`\n          );\n          console.log(response);\n          if (response.data.data.error) {\n            addToast(response.data.data.error, {\n              appearance: \"warning\",\n              autoDismiss: true,\n            });\n          } else {\n            let sender = response.data.data.sender;\n            setSender(sender);\n            let gucId = response.data.data.senderId;\n            setId(gucId);\n            let date = dateFormat(response.data.data.requestData.date);\n            setDate(date);\n            let data = response.data.data.requestData;\n            setRequest(data);\n            if (response.data.data.requestData.type === \"Change DayOff\") {\n              let title = response.data.data.requestData.subject;\n              setTitle(title);\n            } else {\n              let title = response.data.data.requestData.subject;\n              setTitle(title);\n            }\n          }\n        } catch (err) {\n          console.log(\"~ err\", err);\n          document.location.href = \"/unauthorized\";\n        }\n      }\n      fetchData();\n    }\n  }, []);\n\n  const handleAccept = async function () {\n    let accept_or_reject_request = true;\n    const rejectBody = {accept_or_reject_request, comment}\n    if(request.type === \"Change DayOff\"){\n      try{\n        const response = await axiosCall(\"put\",`${link}/requests/AcceptOrRejectChangeDay/${props.match.params.id}`,rejectBody)\n        console.log(response);\n        addToast(\"Request accepted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n\n      } catch(err) {\n        console.error(\"~err\", err);\n        addToast(\"Failed to accept request\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      }\n    } else {\n      try{\n        const response = await axiosCall(\"put\",`${link}/requests/AcceptOrRejectLeave/${props.match.params.id}`,rejectBody)\n        console.log(response);\n        addToast(\"Request accepted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } catch(err) {\n        console.error(\"~err\", err);\n        addToast(\"Failed to accept request\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      }\n    }\n  };\n\n  // in case of rejection and optionally leave a comment\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let accept_or_reject_request = false;\n    const rejectBody = {accept_or_reject_request, comment}\n    if(request.type === \"Change DayOff\"){\n      try{\n        const response = await axiosCall(\"put\",`${link}/requests/AcceptOrRejectChangeDay/${props.match.params.id}`,rejectBody)\n        console.log(response);\n        addToast(\"Request rejected successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } catch(err) {\n        console.error(\"~err\", err);\n        addToast(\"Failed to reject request\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      }\n    } else {\n      try{\n        const response = await axiosCall(\"put\",`${link}/requests/AcceptOrRejectLeave/${props.match.params.id}`,rejectBody)\n        console.log(response);\n        addToast(\"Request rejected successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } catch(err) {\n        console.error(\"~err\", err);\n        addToast(\"Failed to reject request\", {\n          appearance: \"warning\",\n          autoDismiss: true,\n        });\n      }\n    }\n  };\n\n  if(HOD)\n  return (\n    <div className={classes.modal}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar maxInitials={1} size={45} round={true} name={sender} />\n          }\n          title={title}\n          subheader={date}\n        />\n        <CardContent>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h5\"\n            variant=\"p\"\n          >\n            Sender: {sender}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Sender ID: {gucId}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            status: {request.status}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Reason:\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"p\"\n            variant=\"h6\"\n          >\n            {request.reason}\n          </Typography>\n          <Typography\n            className={classes.text}\n            color=\"textPrimary\"\n            component=\"h6\"\n            variant=\"h6\"\n          >\n            Document: {request.document}\n          </Typography>\n        </CardContent>\n        <div>\n        {(() => {\n        if (request.status === \"pending\") {\n          return (\n            <CardActions>\n          <AcceptButton\n            onClick={handleAccept}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.margin}\n            startIcon={<CheckCircleIcon />}\n          >\n            {\" \"}\n            Accept\n          </AcceptButton>\n          <RejectButton\n            onClick={handleClick}\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<CancelIcon />}\n          >\n            {\" \"}\n            Reject\n          </RejectButton>\n          <Popper id={id} open={open} anchorEl={anchorEl}>\n            <div className={classes.paper}>\n              <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n                <TextField\n                  value={comment}\n                  onChange={({ target }) => setComment(target.value)}\n                  id=\"standard-multiline-static\"\n                  label=\"Reason for rejection\"\n                  multiline\n                  rows={4}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                >\n                  Confirm\n                </Button>\n              </form>\n            </div>\n          </Popper>\n        </CardActions>\n          );\n        } else {\n          return (<div />);\n        }\n        })()}\n        </div>\n      </Card>\n    </div>\n  );\n  else return null;\n}\nexport default Request;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/pages/HOD/ViewTeachingAssignments.jsx",["440"],"import React, { useState, useEffect } from \"react\";\nimport { link } from \"../../helpers/constants\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fade from \"react-reveal/Fade\";\n\nimport axiosCall from \"../../helpers/axiosCall\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../../styles/_colorSchema.scss\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction ViewTeachingAssignments() {\n  const [sats, setSats] = useState([]);\n  const [suns, setSuns] = useState([]);\n  const [mons, setMons] = useState([]);\n  const [tuess, setTuess] = useState([]);\n  const [weds, setWeds] = useState([]);\n  const [thurss, setThurss] = useState([]);\n  const { addToast } = useToasts();\n  const [courses, setCourses] = useState([]);\n\n  const orderDays = (arr) => {\n    var newArr = [];\n    for (var i = 0; i < 5; i++) {\n      var found = false;\n      for (var j = 0; j < arr.length; j++) {\n        if (i === 0 && arr[j].time === \"8:15:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 1 && arr[j].time === \"10:00:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 2 && arr[j].time === \"11:45:00 AM\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 3 && arr[j].time === \"01:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        } else if (i === 4 && arr[j].time === \"03:45:00 PM\") {\n          newArr[i] = {\n            Course: arr[j].course,\n            Location: arr[j].location,\n            assignedTo: arr[j].assignedTo,\n          };\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        newArr[i] = \"Free\";\n      }\n    }\n    return newArr;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const loggedInUser = localStorage.getItem(\"user\");\n      if (!loggedInUser) {\n        document.location.href = window.location.origin + \"/login\";\n      } else {\n        try {\n          const courses = await axiosCall(\"get\", `${link}/departments/courses`);\n          setCourses(courses.data.data);\n          let firstCourse = courses.data.data[0].course;\n          const response = await axiosCall(\n            \"get\",\n            `${link}/departments/viewTeachingAssignments/${firstCourse}`\n          );\n          console.log(response);\n          if (response.data.error) {\n            addToast(response.data.error, {\n              appearance: \"error\",\n              autoDismiss: true,\n            });\n          } else {\n            const slotsDisplay = response.data.data.slots;\n            const courseName = response.data.data.course;\n            var sat = [];\n            var sun = [];\n            var mon = [];\n            var tues = [];\n            var wed = [];\n            var thurs = [];\n            for (var i = 0; i < slotsDisplay.length; i++) {\n              var obj = {\n                course: courseName,\n                day: slotsDisplay[i].Day,\n                time: slotsDisplay[i].Time,\n                location: slotsDisplay[i].Location,\n                assignedTo:\n                  slotsDisplay[i].Assigned_to === \"None\"\n                    ? \"None\"\n                    : slotsDisplay[i].Assigned_to.name,\n              };\n              switch (obj.day) {\n                case \"Saturday\":\n                  sat.push(obj);\n                  break;\n                case \"Sunday\":\n                  sun.push(obj);\n                  break;\n                case \"Monday\":\n                  mon.push(obj);\n                  break;\n                case \"Tuesday\":\n                  tues.push(obj);\n                  break;\n                case \"Wednesday\":\n                  wed.push(obj);\n                  break;\n                case \"Thursday\":\n                  thurs.push(obj);\n                  break;\n                default:\n                  break;\n              }\n            }\n            setSats(orderDays(sat));\n            setSuns(orderDays(sun));\n            setMons(orderDays(mon));\n            setTuess(orderDays(tues));\n            setWeds(orderDays(wed));\n            setThurss(orderDays(thurs));\n          }\n        } catch (e) {\n          console.log(\"~ err\", e);\n          document.location.href = window.location.origin + \"/unauthorized\";\n        }\n      }\n    }\n    fetchData();\n  }, []);\n\n  async function handleOnChange(event) {\n    try {\n      const response = await axiosCall(\n        \"get\",\n        `${link}/departments/viewTeachingAssignments/${event.course}`\n      );\n      console.log(response);\n      if (response.data.error) {\n        addToast(response.data.error, {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      } else {\n        const slotsDisplay = response.data.data.slots;\n        const courseName = response.data.data.course;\n        var sat = [];\n        var sun = [];\n        var mon = [];\n        var tues = [];\n        var wed = [];\n        var thurs = [];\n        for (var i = 0; i < slotsDisplay.length; i++) {\n          var obj = {\n            course: courseName,\n            day: slotsDisplay[i].Day,\n            time: slotsDisplay[i].Time,\n            location: slotsDisplay[i].Location,\n            assignedTo:\n              slotsDisplay[i].Assigned_to === \"None\"\n                ? \"None\"\n                : slotsDisplay[i].Assigned_to.name,\n          };\n          switch (obj.day) {\n            case \"Saturday\":\n              sat.push(obj);\n              break;\n            case \"Sunday\":\n              sun.push(obj);\n              break;\n            case \"Monday\":\n              mon.push(obj);\n              break;\n            case \"Tuesday\":\n              tues.push(obj);\n              break;\n            case \"Wednesday\":\n              wed.push(obj);\n              break;\n            case \"Thursday\":\n              thurs.push(obj);\n              break;\n            default:\n              break;\n          }\n        }\n        setSats(orderDays(sat));\n        setSuns(orderDays(sun));\n        setMons(orderDays(mon));\n        setTuess(orderDays(tues));\n        setWeds(orderDays(wed));\n        setThurss(orderDays(thurs));\n      }\n    } catch (e) {\n      console.log(\"~ err\", e);\n    }\n  }\n\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 300, //250 //400\n      // width: 1200\n    },\n  });\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className=\"my-table\">\n        <Fade>\n          <h3 className=\"general-header\">Teaching Assignments</h3>\n          <hr className=\"general-line\" />\n          <Autocomplete\n            size=\"small\"\n            id=\"debug\"\n            options={courses}\n            onChange={(event, newValue) => {\n              handleOnChange(newValue);\n            }}\n            getOptionLabel={(option) => option.course}\n            style={{ width: 250, margin: \"auto\" }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"choose course\" margin=\"normal\" />\n            )}\n          />\n          <Grid container spacing={1}>\n            <Grid item xs={10}>\n              <TableContainer component={Paper} className={classes.table}>\n                <Table aria-label=\"customized table\" size=\"small\">\n                  <TableHead className=\"dark-blue\">\n                    <TableRow>\n                      <TableCell className=\"border\">Day/Slot</TableCell>\n                      <TableCell className=\"border\" align=\"center\">\n                        &nbsp;&nbsp;1st\n                        <br /> 08:15 - 09:45\n                      </TableCell>\n                      <TableCell className=\"border\" align=\"center\">\n                        &nbsp;&nbsp;2nd\n                        <br /> 10:00 - 11:30\n                      </TableCell>\n                      <TableCell className=\"border\" align=\"center\">\n                        &nbsp;&nbsp;3rd\n                        <br /> 11:45 - 13:15\n                      </TableCell>\n                      <TableCell className=\"border\" align=\"center\">\n                        &nbsp;&nbsp;4th\n                        <br /> 13:45 - 15:15\n                      </TableCell>\n                      <TableCell className=\"border\" align=\"center\">\n                        &nbsp;&nbsp;5th\n                        <br /> 15:45 - 17:15\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow key=\"Saturday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Saturday\n                      </TableCell>\n                      {sats.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow key=\"Sunday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Sunday\n                      </TableCell>\n                      {suns.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\"\n                            ? \"\\t\"\n                            : day.Course}{\" \"}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow key=\"Monday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Monday\n                      </TableCell>\n                      {mons.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow key=\"Tuesday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Tuesday\n                      </TableCell>\n                      {tuess.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow key=\"Wednesday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Wednesday\n                      </TableCell>\n                      {weds.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                    <TableRow key=\"Thursday\">\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className=\"dark-blue\"\n                      >\n                        Thursday\n                      </TableCell>\n                      {thurss.map((day) => (\n                        <TableCell\n                          align=\"center\"\n                          className={\n                            typeof day === \"string\"\n                              ? \"border\"\n                              : \"border occupied\"\n                          }\n                        >\n                          {typeof day === \"string\" ? day : day.Location} <br />\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\n                          <br />\n                          &nbsp;{day.assignedTo}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewTeachingAssignments;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/styles/StyledComponents.js",[],"/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/Notification.jsx",["441"],"import React, { useState, useEffect } from \"react\";\nimport axiosCall from \"../helpers/axiosCall\";\nimport checkLogin from \"../helpers/checkLogin\";\nimport Avatar from \"react-avatar\";\n\nfunction Notification(props) {\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  const [data, setData] = useState({ data: [] });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await checkLogin();\n\n        const notifications = (\n          await axiosCall(\"get\", `notifications/${res.gucId}`)\n        ).data.data;\n\n        const results = notifications.map((notification) => {\n          const temp = new Date(notification.createdAt);\n          const date =\n            temp.getFullYear() +\n            \"-\" +\n            (temp.getMonth() + 1 > 9\n              ? temp.getMonth() + 1\n              : \"0\" + (temp.getMonth() + 1)) +\n            \"-\" +\n            (temp.getDate() > 9 ? temp.getDate() : \"0\" + temp.getDate()) +\n            \" \" +\n            temp.getHours() +\n            \":\" +\n            (temp.getMinutes() > 9\n              ? temp.getMinutes()\n              : \"0\" + temp.getMinutes());\n\n          return {\n            message: notification.message,\n            date: date,\n            isSeen: notification.is_seen,\n          };\n        });\n\n        setData(results);\n\n        const result = (\n          await axiosCall(\"put\", `notifications/notification/updateAll`)\n        ).data;\n      } catch (err) {\n        console.log(\"~err: \", err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"notification-container\">\n      <h3>Notifications:</h3>\n      <hr />\n      <div className=\"all-notifications\">\n        {data.length > 0 &&\n          data.map((notification) => (\n            <div\n              className={\n                notification.isSeen\n                  ? `notification-inner-container`\n                  : `notification-inner-container not-seen`\n              }\n            >\n              <Avatar\n                maxInitials={1}\n                size={35}\n                round={true}\n                name={characters.charAt(\n                  Math.floor(Math.random() * characters.length)\n                )}\n              />\n              <div className=\"notification-content\">\n                <h6>{notification.date}</h6>\n                <h5>{notification.message}</h5>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Notification;\n","/Users/sarah23s/Sarah Disk/GUC/projects/ADL/milestone-1-team51/client/src/components/sidebar/TAMenuItems.jsx",["442","443","444"],"import React, { useState } from \"react\";\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\n\n//icons\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\n\nfunction TAMenuItems() {\n  const [icons, setIcons] = useState({\n    courseCoverage: false,\n    staff: false,\n  });\n\n  const routeChange = (path) => {\n    document.location.href = window.location.origin + `/${path}`;\n  };\n\n  const showTag = (name) => {\n    setIcons({\n      ...icons,\n      [name]: true,\n    });\n  };\n\n  return (\n    <Menu iconShape=\"round\" className=\"first-new\">\n      <MenuItem\n        icon={<MdPersonAdd />}\n        onMouseEnter={() => showTag(\"staff\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewStaff\")}\n      >\n        {icons.staff ? \"Staff \" : \"\"}\n      </MenuItem>\n\n      <MenuItem\n        icon={<FaBook />}\n        onMouseEnter={() => showTag(\"course\")}\n        onMouseLeave={() => setIcons(false)}\n        onClick={() => routeChange(\"viewCourseCoverage\")}\n      >\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\n      </MenuItem>\n    </Menu>\n  );\n}\n\nexport default TAMenuItems;\n",{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","severity":1,"message":"450","line":31,"column":8,"nodeType":"451","messageId":"452","endLine":31,"endColumn":18},{"ruleId":"449","severity":1,"message":"453","line":54,"column":8,"nodeType":"451","messageId":"452","endLine":54,"endColumn":18},{"ruleId":"449","severity":1,"message":"454","line":75,"column":7,"nodeType":"451","messageId":"452","endLine":75,"endColumn":8},{"ruleId":"455","severity":1,"message":"456","line":26,"column":6,"nodeType":"457","endLine":26,"endColumn":8,"suggestions":"458"},{"ruleId":"449","severity":1,"message":"459","line":33,"column":9,"nodeType":"451","messageId":"452","endLine":33,"endColumn":26},{"ruleId":"455","severity":1,"message":"460","line":94,"column":6,"nodeType":"457","endLine":94,"endColumn":8,"suggestions":"461"},{"ruleId":"449","severity":1,"message":"462","line":19,"column":14,"nodeType":"451","messageId":"452","endLine":19,"endColumn":19},{"ruleId":"455","severity":1,"message":"460","line":43,"column":6,"nodeType":"457","endLine":43,"endColumn":8,"suggestions":"463"},{"ruleId":"455","severity":1,"message":"460","line":155,"column":6,"nodeType":"457","endLine":155,"endColumn":8,"suggestions":"464"},{"ruleId":"455","severity":1,"message":"460","line":91,"column":6,"nodeType":"457","endLine":91,"endColumn":8,"suggestions":"465"},{"ruleId":"455","severity":1,"message":"460","line":24,"column":6,"nodeType":"457","endLine":24,"endColumn":8,"suggestions":"466"},{"ruleId":"455","severity":1,"message":"460","line":54,"column":6,"nodeType":"457","endLine":54,"endColumn":8,"suggestions":"467"},{"ruleId":"449","severity":1,"message":"468","line":7,"column":10,"nodeType":"451","messageId":"452","endLine":7,"endColumn":22},{"ruleId":"455","severity":1,"message":"460","line":121,"column":6,"nodeType":"457","endLine":121,"endColumn":8,"suggestions":"469"},{"ruleId":"449","severity":1,"message":"468","line":209,"column":18,"nodeType":"451","messageId":"452","endLine":209,"endColumn":30},{"ruleId":"449","severity":1,"message":"470","line":217,"column":13,"nodeType":"451","messageId":"452","endLine":217,"endColumn":16},{"ruleId":"455","severity":1,"message":"460","line":29,"column":6,"nodeType":"457","endLine":29,"endColumn":8,"suggestions":"471"},{"ruleId":"449","severity":1,"message":"472","line":15,"column":8,"nodeType":"451","messageId":"452","endLine":15,"endColumn":21},{"ruleId":"455","severity":1,"message":"460","line":77,"column":6,"nodeType":"457","endLine":77,"endColumn":8,"suggestions":"473"},{"ruleId":"455","severity":1,"message":"460","line":41,"column":6,"nodeType":"457","endLine":41,"endColumn":8,"suggestions":"474"},{"ruleId":"455","severity":1,"message":"460","line":238,"column":6,"nodeType":"457","endLine":238,"endColumn":8,"suggestions":"475"},{"ruleId":"455","severity":1,"message":"476","line":242,"column":6,"nodeType":"457","endLine":253,"endColumn":4,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":409,"column":44,"nodeType":"480","endLine":409,"endColumn":48},{"ruleId":"449","severity":1,"message":"470","line":30,"column":11,"nodeType":"451","messageId":"452","endLine":30,"endColumn":14},{"ruleId":"449","severity":1,"message":"470","line":52,"column":11,"nodeType":"451","messageId":"452","endLine":52,"endColumn":14},{"ruleId":"449","severity":1,"message":"481","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":13},{"ruleId":"455","severity":1,"message":"460","line":87,"column":6,"nodeType":"457","endLine":87,"endColumn":13,"suggestions":"482"},{"ruleId":"455","severity":1,"message":"483","line":145,"column":6,"nodeType":"457","endLine":145,"endColumn":8,"suggestions":"484"},{"ruleId":"449","severity":1,"message":"485","line":8,"column":10,"nodeType":"451","messageId":"452","endLine":8,"endColumn":14},{"ruleId":"449","severity":1,"message":"486","line":11,"column":9,"nodeType":"451","messageId":"452","endLine":11,"endColumn":25},{"ruleId":"487","severity":1,"message":"488","line":119,"column":54,"nodeType":"489","messageId":"490","endLine":119,"endColumn":56},{"ruleId":"487","severity":1,"message":"488","line":119,"column":69,"nodeType":"489","messageId":"490","endLine":119,"endColumn":71},{"ruleId":"487","severity":1,"message":"488","line":122,"column":54,"nodeType":"489","messageId":"490","endLine":122,"endColumn":56},{"ruleId":"487","severity":1,"message":"488","line":89,"column":60,"nodeType":"489","messageId":"490","endLine":89,"endColumn":62},{"ruleId":"449","severity":1,"message":"491","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":25},{"ruleId":"449","severity":1,"message":"492","line":25,"column":10,"nodeType":"451","messageId":"452","endLine":25,"endColumn":15},{"ruleId":"449","severity":1,"message":"493","line":36,"column":9,"nodeType":"451","messageId":"452","endLine":36,"endColumn":14},{"ruleId":"487","severity":1,"message":"488","line":78,"column":22,"nodeType":"489","messageId":"490","endLine":78,"endColumn":24},{"ruleId":"487","severity":1,"message":"488","line":205,"column":52,"nodeType":"489","messageId":"490","endLine":205,"endColumn":54},{"ruleId":"487","severity":1,"message":"488","line":205,"column":74,"nodeType":"489","messageId":"490","endLine":205,"endColumn":76},{"ruleId":"487","severity":1,"message":"488","line":99,"column":43,"nodeType":"489","messageId":"490","endLine":99,"endColumn":45},{"ruleId":"487","severity":1,"message":"488","line":99,"column":43,"nodeType":"489","messageId":"490","endLine":99,"endColumn":45},{"ruleId":"449","severity":1,"message":"494","line":6,"column":8,"nodeType":"451","messageId":"452","endLine":6,"endColumn":14},{"ruleId":"449","severity":1,"message":"495","line":9,"column":10,"nodeType":"451","messageId":"452","endLine":9,"endColumn":20},{"ruleId":"449","severity":1,"message":"496","line":11,"column":10,"nodeType":"451","messageId":"452","endLine":11,"endColumn":14},{"ruleId":"449","severity":1,"message":"497","line":16,"column":10,"nodeType":"451","messageId":"452","endLine":16,"endColumn":18},{"ruleId":"449","severity":1,"message":"498","line":16,"column":20,"nodeType":"451","messageId":"452","endLine":16,"endColumn":31},{"ruleId":"455","severity":1,"message":"499","line":18,"column":13,"nodeType":"500","endLine":43,"endColumn":4},{"ruleId":"455","severity":1,"message":"460","line":43,"column":6,"nodeType":"457","endLine":43,"endColumn":8,"suggestions":"501"},{"ruleId":"449","severity":1,"message":"502","line":45,"column":9,"nodeType":"451","messageId":"452","endLine":45,"endColumn":21},{"ruleId":"455","severity":1,"message":"499","line":33,"column":13,"nodeType":"500","endLine":62,"endColumn":4},{"ruleId":"503","severity":1,"message":"504","line":44,"column":30,"nodeType":"500","messageId":"505","endLine":44,"endColumn":32},{"ruleId":"455","severity":1,"message":"460","line":62,"column":6,"nodeType":"457","endLine":62,"endColumn":16,"suggestions":"506"},{"ruleId":"449","severity":1,"message":"507","line":6,"column":8,"nodeType":"451","messageId":"452","endLine":6,"endColumn":18},{"ruleId":"449","severity":1,"message":"508","line":8,"column":8,"nodeType":"451","messageId":"452","endLine":8,"endColumn":19},{"ruleId":"449","severity":1,"message":"509","line":9,"column":8,"nodeType":"451","messageId":"452","endLine":9,"endColumn":14},{"ruleId":"449","severity":1,"message":"510","line":11,"column":10,"nodeType":"451","messageId":"452","endLine":11,"endColumn":19},{"ruleId":"449","severity":1,"message":"511","line":13,"column":8,"nodeType":"451","messageId":"452","endLine":13,"endColumn":23},{"ruleId":"449","severity":1,"message":"512","line":14,"column":8,"nodeType":"451","messageId":"452","endLine":14,"endColumn":18},{"ruleId":"449","severity":1,"message":"513","line":15,"column":8,"nodeType":"451","messageId":"452","endLine":15,"endColumn":14},{"ruleId":"449","severity":1,"message":"514","line":16,"column":8,"nodeType":"451","messageId":"452","endLine":16,"endColumn":17},{"ruleId":"449","severity":1,"message":"494","line":18,"column":10,"nodeType":"451","messageId":"452","endLine":18,"endColumn":16},{"ruleId":"487","severity":1,"message":"488","line":87,"column":24,"nodeType":"489","messageId":"490","endLine":87,"endColumn":26},{"ruleId":"487","severity":1,"message":"488","line":90,"column":24,"nodeType":"489","messageId":"490","endLine":90,"endColumn":26},{"ruleId":"487","severity":1,"message":"488","line":90,"column":57,"nodeType":"489","messageId":"490","endLine":90,"endColumn":59},{"ruleId":"487","severity":1,"message":"488","line":90,"column":83,"nodeType":"489","messageId":"490","endLine":90,"endColumn":85},{"ruleId":"455","severity":1,"message":"515","line":101,"column":6,"nodeType":"457","endLine":101,"endColumn":8,"suggestions":"516"},{"ruleId":"487","severity":1,"message":"488","line":126,"column":17,"nodeType":"489","messageId":"490","endLine":126,"endColumn":19},{"ruleId":"487","severity":1,"message":"488","line":157,"column":17,"nodeType":"489","messageId":"490","endLine":157,"endColumn":19},{"ruleId":"487","severity":1,"message":"488","line":186,"column":18,"nodeType":"489","messageId":"490","endLine":186,"endColumn":20},{"ruleId":"487","severity":1,"message":"488","line":209,"column":18,"nodeType":"489","messageId":"490","endLine":209,"endColumn":20},{"ruleId":"487","severity":1,"message":"488","line":250,"column":18,"nodeType":"489","messageId":"490","endLine":250,"endColumn":20},{"ruleId":"487","severity":1,"message":"488","line":282,"column":19,"nodeType":"489","messageId":"490","endLine":282,"endColumn":21},{"ruleId":"487","severity":1,"message":"488","line":307,"column":19,"nodeType":"489","messageId":"490","endLine":307,"endColumn":21},{"ruleId":"487","severity":1,"message":"488","line":379,"column":16,"nodeType":"489","messageId":"490","endLine":379,"endColumn":18},{"ruleId":"503","severity":1,"message":"517","line":40,"column":53,"nodeType":"500","messageId":"518","endLine":40,"endColumn":55},{"ruleId":"503","severity":1,"message":"517","line":45,"column":55,"nodeType":"500","messageId":"518","endLine":45,"endColumn":57},{"ruleId":"455","severity":1,"message":"460","line":65,"column":6,"nodeType":"457","endLine":65,"endColumn":8,"suggestions":"519"},{"ruleId":"503","severity":1,"message":"517","line":80,"column":47,"nodeType":"500","messageId":"518","endLine":80,"endColumn":49},{"ruleId":"503","severity":1,"message":"517","line":85,"column":49,"nodeType":"500","messageId":"518","endLine":85,"endColumn":51},{"ruleId":"455","severity":1,"message":"460","line":76,"column":6,"nodeType":"457","endLine":76,"endColumn":8,"suggestions":"520"},{"ruleId":"455","severity":1,"message":"521","line":120,"column":6,"nodeType":"457","endLine":120,"endColumn":8,"suggestions":"522"},{"ruleId":"455","severity":1,"message":"460","line":161,"column":6,"nodeType":"457","endLine":161,"endColumn":8,"suggestions":"523"},{"ruleId":"449","severity":1,"message":"524","line":45,"column":15,"nodeType":"451","messageId":"452","endLine":45,"endColumn":21},{"ruleId":"449","severity":1,"message":"525","line":5,"column":10,"nodeType":"451","messageId":"452","endLine":5,"endColumn":22},{"ruleId":"449","severity":1,"message":"526","line":6,"column":10,"nodeType":"451","messageId":"452","endLine":6,"endColumn":22},{"ruleId":"449","severity":1,"message":"527","line":6,"column":24,"nodeType":"451","messageId":"452","endLine":6,"endColumn":39},"no-native-reassign",["528"],"no-negated-in-lhs",["529"],"no-unused-vars","'checkLogin' is defined but never used.","Identifier","unusedVar","'viewReqest' is defined but never used.","'t' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.notify'. Either include it or remove the dependency array.","ArrayExpression",["530"],"'handleNotifyClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["531"],"'setHr' is assigned a value but never used.",["532"],["533"],["534"],["535"],["536"],"'checkHODbyID' is defined but never used.",["537"],"'HOD' is assigned a value but never used.",["538"],"'AddCircleIcon' is defined but never used.",["539"],["540"],["541"],"React Hook useEffect has a missing dependency: 'handleButtonEnable'. Either include it or remove the dependency array.",["542"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TimePicker' is defined but never used.",["543"],"React Hook useEffect has missing dependencies: 'addToast', 'props.gucId', and 'props.id'. Either include them or remove the dependency array.",["544"],"'type' is assigned a value but never used.","'handleSelectType' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'check' is assigned a value but never used.","'array' is assigned a value but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'link' is defined but never used.","'reqIDRes' is assigned a value but never used.","'setReqIDRes' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["545"],"'handleSubmit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside",["546"],"'CardHeader' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'useToasts' is defined but never used.","'CheckCircleIcon' is defined but never used.","'CancelIcon' is defined but never used.","'Popper' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["547"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["548"],["549"],"React Hook useEffect has missing dependencies: 'addToast' and 'props.match.params.id'. Either include them or remove the dependency array.",["550"],["551"],"'result' is assigned a value but never used.","'MdLocationOn' is defined but never used.","'FaUniversity' is defined but never used.","'FaClipboardList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"554","fix":"556"},{"desc":"554","fix":"557"},{"desc":"554","fix":"558"},{"desc":"554","fix":"559"},{"desc":"554","fix":"560"},{"desc":"554","fix":"561"},{"desc":"554","fix":"562"},{"desc":"554","fix":"563"},{"desc":"554","fix":"564"},{"desc":"554","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"554","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"554","fix":"577"},{"desc":"554","fix":"578"},{"desc":"579","fix":"580"},{"desc":"554","fix":"581"},"Update the dependencies array to be: [props.notify]",{"range":"582","text":"583"},"Update the dependencies array to be: [addToast]",{"range":"584","text":"585"},{"range":"586","text":"585"},{"range":"587","text":"585"},{"range":"588","text":"585"},{"range":"589","text":"585"},{"range":"590","text":"585"},{"range":"591","text":"585"},{"range":"592","text":"585"},{"range":"593","text":"585"},{"range":"594","text":"585"},{"range":"595","text":"585"},"Update the dependencies array to be: [courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",{"range":"596","text":"597"},"Update the dependencies array to be: [addToast, props]",{"range":"598","text":"599"},"Update the dependencies array to be: [addToast, props.gucId, props.id]",{"range":"600","text":"601"},{"range":"602","text":"585"},"Update the dependencies array to be: [addToast, reqIDRes]",{"range":"603","text":"604"},"Update the dependencies array to be: [props.match.params.id]",{"range":"605","text":"606"},{"range":"607","text":"585"},{"range":"608","text":"585"},"Update the dependencies array to be: [addToast, props.match.params.id]",{"range":"609","text":"610"},{"range":"611","text":"585"},[769,771],"[props.notify]",[2884,2886],"[addToast]",[1369,1371],[5220,5222],[2462,2464],[689,691],[1595,1597],[4227,4229],[791,793],[2641,2643],[1332,1334],[7088,7090],[7145,7288],"[courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",[2577,2584],"[addToast, props]",[4412,4414],"[addToast, props.gucId, props.id]",[1278,1280],[1858,1868],"[addToast, reqIDRes]",[2803,2805],"[props.match.params.id]",[2201,2203],[2213,2215],[3857,3859],"[addToast, props.match.params.id]",[5340,5342]]