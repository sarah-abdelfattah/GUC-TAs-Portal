[{"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\index.js":"1","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\reportWebVitals.js":"2","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\App.js":"3","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\NavBar.jsx":"4","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\SideBar.jsx":"5","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\UnauthorizedPage.jsx":"6","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Login.jsx":"7","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Location.jsx":"8","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Faculty.jsx":"9","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Department.jsx":"10","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\InstCourseCoverage.jsx":"11","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Homepage.jsx":"12","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\InstructorSlotsAssigned.jsx":"13","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\setAuthToken.js":"14","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\auth.js":"15","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\axiosCall.js":"16","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\checkLogin.js":"17","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\constants.js":"18","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\axios.js":"19","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Update.jsx":"20","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Add.jsx":"21","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Delete.jsx":"22","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\HRMenuItems.jsx":"23","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\DeleteLocation.jsx":"24","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\UpdateLocation.jsx":"25","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\AddLocation.jsx":"26","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\AddFaculty.jsx":"27","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\AddDepartment.jsx":"28","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\UpdateFaculty.jsx":"29","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\DeleteDepartment.jsx":"30","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\DeleteFaculty.jsx":"31","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\UpdateDepartment.jsx":"32","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\config\\keys.js":"33","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\config\\keys_dev.js":"34","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\AcademicMemberSchedule.jsx":"35","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\academicMemberCourseSlot.jsx":"36","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\AcademicMemberCourseSlot.jsx":"37","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\HOD\\ViewAllStaff.jsx":"38","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\HOD\\ViewCourseCoverage.jsx":"39","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\CC\\CourseSlotCRUD.jsx":"40","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Course.jsx":"41","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\MyAttendanceRecord.jsx":"42","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\ChangePassword.jsx":"43","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Staff.jsx":"44","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\test.jsx":"45","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Profile.jsx":"46","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\AttendanceRecord.jsx":"47","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\DeleteCourse.jsx":"48","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\UpdateCourse.jsx":"49","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\AddCourse.jsx":"50","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\TAMenuItems.jsx":"51","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\HODMenuItems.jsx":"52","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\CIMenuItems.jsx":"53","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\StaffProfile.jsx":"54","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\NewStaffMember.jsx":"55","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Staff\\StaffAttendance.jsx":"56","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\AttendanceTable.jsx":"57"},{"size":279,"mtime":1609588840860,"results":"58","hashOfConfig":"59"},{"size":375,"mtime":1609588840861,"results":"60","hashOfConfig":"59"},{"size":5125,"mtime":1610001410884,"results":"61","hashOfConfig":"59"},{"size":1184,"mtime":1609961088351,"results":"62","hashOfConfig":"59"},{"size":1816,"mtime":1609961088351,"results":"63","hashOfConfig":"59"},{"size":666,"mtime":1609615031904,"results":"64","hashOfConfig":"59"},{"size":3882,"mtime":1609961088354,"results":"65","hashOfConfig":"59"},{"size":1698,"mtime":1609615031903,"results":"66","hashOfConfig":"59"},{"size":1681,"mtime":1609615031903,"results":"67","hashOfConfig":"59"},{"size":1723,"mtime":1609615031903,"results":"68","hashOfConfig":"59"},{"size":2708,"mtime":1609966072908,"results":"69","hashOfConfig":"59"},{"size":5851,"mtime":1609961088353,"results":"70","hashOfConfig":"59"},{"size":12727,"mtime":1610019481792,"results":"71","hashOfConfig":"59"},{"size":267,"mtime":1609756306874,"results":"72","hashOfConfig":"59"},{"size":570,"mtime":1610007270767,"results":"73","hashOfConfig":"59"},{"size":1084,"mtime":1609961088351,"results":"74","hashOfConfig":"59"},{"size":596,"mtime":1609961088352,"results":"75","hashOfConfig":"59"},{"size":184,"mtime":1609588840859,"results":"76","hashOfConfig":"59"},{"size":411,"mtime":1609633823896,"results":"77","hashOfConfig":"59"},{"size":354,"mtime":1609615031899,"results":"78","hashOfConfig":"59"},{"size":329,"mtime":1609615031898,"results":"79","hashOfConfig":"59"},{"size":359,"mtime":1609615031898,"results":"80","hashOfConfig":"59"},{"size":2076,"mtime":1609927443192,"results":"81","hashOfConfig":"59"},{"size":3554,"mtime":1609615031900,"results":"82","hashOfConfig":"59"},{"size":4879,"mtime":1609615031900,"results":"83","hashOfConfig":"59"},{"size":3406,"mtime":1609615031900,"results":"84","hashOfConfig":"59"},{"size":2090,"mtime":1609615031900,"results":"85","hashOfConfig":"59"},{"size":4477,"mtime":1609927443191,"results":"86","hashOfConfig":"59"},{"size":3524,"mtime":1609615031900,"results":"87","hashOfConfig":"59"},{"size":4195,"mtime":1609927443191,"results":"88","hashOfConfig":"59"},{"size":2696,"mtime":1609615031900,"results":"89","hashOfConfig":"59"},{"size":6677,"mtime":1609927443191,"results":"90","hashOfConfig":"59"},{"size":141,"mtime":1609615031901,"results":"91","hashOfConfig":"59"},{"size":522,"mtime":1609615031901,"results":"92","hashOfConfig":"59"},{"size":11825,"mtime":1610006152232,"results":"93","hashOfConfig":"59"},{"size":3506,"mtime":1609680745122,"results":"94","hashOfConfig":"59"},{"size":10053,"mtime":1610019481797,"results":"95","hashOfConfig":"59"},{"size":6694,"mtime":1610024958839,"results":"96","hashOfConfig":"59"},{"size":2101,"mtime":1609961088353,"results":"97","hashOfConfig":"59"},{"size":17515,"mtime":1610023831391,"results":"98","hashOfConfig":"59"},{"size":1655,"mtime":1609927443193,"results":"99","hashOfConfig":"59"},{"size":583,"mtime":1609961088354,"results":"100","hashOfConfig":"59"},{"size":7869,"mtime":1609927443193,"results":"101","hashOfConfig":"59"},{"size":6754,"mtime":1609961088355,"results":"102","hashOfConfig":"59"},{"size":5706,"mtime":1609927443203,"results":"103","hashOfConfig":"59"},{"size":9530,"mtime":1609961088354,"results":"104","hashOfConfig":"59"},{"size":723,"mtime":1609927443187,"results":"105","hashOfConfig":"59"},{"size":5805,"mtime":1609927443189,"results":"106","hashOfConfig":"59"},{"size":8195,"mtime":1609927443189,"results":"107","hashOfConfig":"59"},{"size":4739,"mtime":1609927443187,"results":"108","hashOfConfig":"59"},{"size":1236,"mtime":1609927443192,"results":"109","hashOfConfig":"59"},{"size":1246,"mtime":1609927443191,"results":"110","hashOfConfig":"59"},{"size":1236,"mtime":1609927443191,"results":"111","hashOfConfig":"59"},{"size":13754,"mtime":1609961088356,"results":"112","hashOfConfig":"59"},{"size":10922,"mtime":1609961088354,"results":"113","hashOfConfig":"59"},{"size":952,"mtime":1609961088356,"results":"114","hashOfConfig":"59"},{"size":18242,"mtime":1609961088350,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"11n20kl",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":6,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"118"},"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\index.js",[],["243","244"],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\reportWebVitals.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\App.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\NavBar.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\SideBar.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\UnauthorizedPage.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Login.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Location.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Faculty.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Department.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\InstCourseCoverage.jsx",["245","246","247","248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\nimport { link } from \"../helpers/constants\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { axios } from \"../helpers/axios\";\r\nimport \"../styles/_colorSchema.scss\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport Fade from \"react-reveal/Fade\";\r\n// import {axiosInstance} from '../helpers/setAuthToken'\r\n\r\nfunction InstCourseCoverage() {\r\n  const [rows, setRows] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const loggedInUser = localStorage.getItem(\"user\");\r\n      if (!loggedInUser) {\r\n        document.location.href = window.location.origin + \"/login\";\r\n      } else {\r\n        try {\r\n          const response = await axios.get(\r\n            `${link}/academicMember/courseInstructor/courseCoverage`\r\n          );\r\n          if (response.data.error) {\r\n            addToast(response.data.error, {\r\n              appearance: \"warning\",\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            const coverageDisplay = response.data.data;\r\n            console.log(coverageDisplay);\r\n            setRows(coverageDisplay);\r\n          }\r\n        } catch (e) {\r\n          console.log(\"~ err\", e);\r\n          document.location.href = window.location.origin + \"/unauthorized\";\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my-table\">\r\n      <Fade>\r\n        <h3 className=\"general-header\">View course coverage</h3>\r\n        <hr className=\"general-line\" />\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={8}>\r\n            <MaterialTable\r\n              title=\"\"\r\n              columns={[\r\n                { title: \"Course name\", field: \"course_name\" },\r\n                { title: \"Coverage %\", field: \"course_coverage\" },\r\n              ]}\r\n              data={rows}\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: \"#045CC8\",\r\n                  color: \"#FFF\",\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InstCourseCoverage;","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Homepage.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\InstructorSlotsAssigned.jsx",["253"],"import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\nimport { link } from \"../helpers/constants\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { axios } from \"../helpers/axios\";\r\nimport {makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"../styles/_colorSchema.scss\";\r\n\r\nfunction InstructorSlotsAssigned() {\r\n  const [sats, setSats] = useState([]);\r\n  const [suns, setSuns] = useState([]);\r\n  const [mons, setMons] = useState([]);\r\n  const [tuess, setTuess] = useState([]);\r\n  const [weds, setWeds] = useState([]);\r\n  const [thurss, setThurss] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  const orderDays = (arr) => {\r\n    var newArr = [];\r\n    for (var i = 0; i < 5; i++) {\r\n      var found = false;\r\n      for (var j = 0; j < arr.length; j++) {\r\n        if (i === 0 && arr[j].time === \"8:15:00 AM\") {\r\n          newArr[i] = {\r\n            Course: arr[j].coursename,\r\n            Location: arr[j].location,\r\n            assignedTo: arr[j].assignedTo\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 1 && arr[j].time === \"10:00:00 AM\") {\r\n          newArr[i] = {\r\n            Course: arr[j].coursename,\r\n            Location: arr[j].location,\r\n            assignedTo: arr[j].assignedTo\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 2 && arr[j].time === \"11:45:00 AM\") {\r\n          newArr[i] = {\r\n            Course: arr[j].coursename,\r\n            Location: arr[j].location,\r\n            assignedTo: arr[j].assignedTo\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 3 && arr[j].time === \"01:45:00 PM\") {\r\n          newArr[i] = {\r\n            Course: arr[j].coursename,\r\n            Location: arr[j].location,\r\n            assignedTo: arr[j].assignedTo\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 4 && arr[j].time === \"03:45:00 PM\") {\r\n          newArr[i] = {\r\n            Course: arr[j].coursename,\r\n            Location: arr[j].location,\r\n            assignedTo: arr[j].assignedTo\r\n          };\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) {\r\n        newArr[i] = \"Free\";\r\n      }\r\n    }\r\n    return newArr;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const loggedInUser = localStorage.getItem(\"user\");\r\n      if (!loggedInUser) {\r\n        document.location.href = window.location.origin + \"/login\";\r\n      } else {\r\n        try {\r\n          const response = await axios.get(\r\n            `${link}/academicMember/courseInstructor/slotsAssignment`\r\n          );\r\n          if (response.data.error) {\r\n            addToast(response.data.error, {\r\n              appearance: \"warning\",\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            const slotsDisplay = response.data.data;\r\n            var sat = [];\r\n            var sun = [];\r\n            var mon = [];\r\n            var tues = [];\r\n            var wed = [];\r\n            var thurs = [];\r\n            for (var i = 0; i < slotsDisplay.length; i++) {\r\n              for (var j = 0; j < slotsDisplay[i].course_slots.length; j++) {\r\n                console.log(slotsDisplay[i].course_slots[j].assignedTo)\r\n                var obj = {\r\n                  coursename: slotsDisplay[i].course_name,\r\n                  day: slotsDisplay[i].course_slots[j].day,\r\n                  time: slotsDisplay[i].course_slots[j].time,\r\n                  location: slotsDisplay[i].course_slots[j].location,\r\n                  assignedTo: slotsDisplay[i].course_slots[j].assignedTo === \"None\"?\"None\": slotsDisplay[i].course_slots[j].assignedTo.name\r\n                };\r\n                switch (obj.day) {\r\n                  case \"Saturday\":\r\n                    sat.push(obj);\r\n                    break;\r\n                  case \"Sunday\":\r\n                    sun.push(obj);\r\n                    break;\r\n                  case \"Monday\":\r\n                    mon.push(obj);\r\n                    break;\r\n                  case \"Tuesday\":\r\n                    tues.push(obj);\r\n                    break;\r\n                  case \"Wednesday\":\r\n                    wed.push(obj);\r\n                    break;\r\n                  case \"Thursday\":\r\n                    thurs.push(obj);\r\n                    break;\r\n                  default:\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n            setSats(orderDays(sat));\r\n            setSuns(orderDays(sun));\r\n            setMons(orderDays(mon));\r\n            setTuess(orderDays(tues));\r\n            setWeds(orderDays(wed));\r\n            setThurss(orderDays(thurs));\r\n          }\r\n        } catch (e) {\r\n          console.log(\"~ err\", e);\r\n          document.location.href = window.location.origin + \"/unauthorized\";\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  },[]);\r\n  console.log(sats);\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 600, //250 //400\r\n      // width: 1200\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container style = {{marginLeft: \"50px\",left:\"61px\"}}>\r\n    {/* <div class=\"table-page-slots-styleS\"> */}\r\n      <Grid item xs = {12} sm = {12} md = {9} style = {{marginTop: \"20px\"}}>\r\n        <h7 class=\"slots-title\">Course(s) Slots</h7>\r\n      </Grid>\r\n      <Grid item xs = {12} sm = {12} md = {9}>\r\n        <div class=\"slots-line\"></div>\r\n      </Grid>\r\n        <Grid item container xs = {10} sm = {10} md = {9} style = {{marginTop: \"30px\"}}>\r\n          <Grid item class=\"table-slots-container\" xs = {5} sm = {5} md = {9} style = {{backgroundColor: \"white\"}}>\r\n              <TableContainer component = {Paper} className = {classes.table}>\r\n                <Table\r\n                  // class=\"table-slots-style border\"\r\n                  \r\n                  aria-label=\"customized table\"\r\n                  size=\"small\"\r\n                >\r\n                  <TableHead className=\"dark-blue\">\r\n                    <TableRow>\r\n                      <TableCell className=\"border\">Day/Slot</TableCell>\r\n                      <TableCell className=\"border\" align=\"center\">\r\n                        &nbsp;&nbsp;1st\r\n                        <br /> 08:15 - 09:45\r\n                      </TableCell>\r\n                      <TableCell className=\"border\" align=\"center\">\r\n                        &nbsp;&nbsp;2nd\r\n                        <br /> 10:00 - 11:30\r\n                      </TableCell>\r\n                      <TableCell className=\"border\" align=\"center\">\r\n                        &nbsp;&nbsp;3rd\r\n                        <br /> 11:45 - 13:15\r\n                      </TableCell>\r\n                      <TableCell className=\"border\" align=\"center\">\r\n                        &nbsp;&nbsp;4th\r\n                        <br /> 13:45 - 15:15\r\n                      </TableCell>\r\n                      <TableCell className=\"border\" align=\"center\">\r\n                        &nbsp;&nbsp;5th\r\n                        <br /> 15:45 - 17:15\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow key=\"Saturday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Saturday\r\n                      </TableCell>\r\n                      {sats.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}<br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    <TableRow key=\"Sunday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Sunday\r\n                      </TableCell>\r\n                      {suns.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course} <br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    <TableRow key=\"Monday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Monday\r\n                      </TableCell>\r\n                      {mons.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}<br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    <TableRow key=\"Tuesday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Tuesday\r\n                      </TableCell>\r\n                      {tuess.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}<br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    <TableRow key=\"Wednesday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Wednesday\r\n                      </TableCell>\r\n                      {weds.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}<br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                    <TableRow key=\"Thursday\">\r\n                      <TableCell component=\"th\" scope=\"row\" className=\"dark-blue\">\r\n                        Thursday\r\n                      </TableCell>\r\n                      {thurss.map((day) => (\r\n                        <TableCell\r\n                          align=\"center\"\r\n                          className={\r\n                            typeof day === \"string\" ? \"border\" : \"border occupied\"\r\n                          }\r\n                        >\r\n                          {typeof day === \"string\" ? day : day.Location} <br />\r\n                          &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}<br/>\r\n                          &nbsp;{day.assignedTo}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      {/* </div> */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default InstructorSlotsAssigned;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\setAuthToken.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\auth.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\axiosCall.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\checkLogin.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\constants.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\helpers\\axios.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Update.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Add.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\Delete.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\HRMenuItems.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\DeleteLocation.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\UpdateLocation.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\location\\AddLocation.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\AddFaculty.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\AddDepartment.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\UpdateFaculty.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\DeleteDepartment.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\faculty\\DeleteFaculty.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\department\\UpdateDepartment.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\config\\keys.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\config\\keys_dev.js",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\AcademicMemberSchedule.jsx",["254"],"import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\nimport { link } from \"../helpers/constants\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\nimport {makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { axios } from \"../helpers/axios\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"../styles/_colorSchema.scss\";\r\n\r\nfunction InstructorSlotsAssigned() {\r\n  const [sats, setSats] = useState([]);\r\n  const [suns, setSuns] = useState([]);\r\n  const [mons, setMons] = useState([]);\r\n  const [tuess, setTuess] = useState([]);\r\n  const [weds, setWeds] = useState([]);\r\n  const [thurss, setThurss] = useState([]);\r\n  const { addToast } = useToasts();\r\n\r\n  const orderDays = (arr) => {\r\n    var newArr = [];\r\n    for (var i = 0; i < 5; i++) {\r\n      var found = false;\r\n      for (var j = 0; j < arr.length; j++) {\r\n        if (i === 0 && arr[j].time === \"8:15\") {\r\n          newArr[i] = {\r\n            Course: arr[j].course,\r\n            Location: arr[j].location,\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 1 && arr[j].time === \"10:00\") {\r\n          newArr[i] = {\r\n            Course: arr[j].course,\r\n            Location: arr[j].location,\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 2 && arr[j].time === \"11:45\") {\r\n          newArr[i] = {\r\n            Course: arr[j].course,\r\n            Location: arr[j].location,\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 3 && arr[j].time === \"13:45\") {\r\n          newArr[i] = {\r\n            Course: arr[j].course,\r\n            Location: arr[j].location,\r\n          };\r\n          found = true;\r\n          break;\r\n        } else if (i === 4 && arr[j].time === \"15:45\") {\r\n          newArr[i] = {\r\n            Course: arr[j].course,\r\n            Location: arr[j].location,\r\n          };\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) {\r\n        newArr[i] = \"Free\";\r\n      }\r\n    }\r\n    return newArr;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const loggedInUser = localStorage.getItem(\"user\");\r\n      console.log(loggedInUser);\r\n      if (!loggedInUser) {\r\n        document.location.href = window.location.origin + \"/login\";\r\n      } else {\r\n        try {\r\n          const response = await axios.get(\r\n            `${link}/staffMembers/viewMySchedule`\r\n          );\r\n          if (response.data.error) {\r\n            addToast(response.data.error, {\r\n              appearance: \"warning\",\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            const slotsDisplay = response.data;\r\n            var sat = [];\r\n            var sun = [];\r\n            var mon = [];\r\n            var tues = [];\r\n            var wed = [];\r\n            var thurs = [];\r\n            for (var i = 0; i < slotsDisplay.length; i++) {\r\n              switch (slotsDisplay[i].day) {\r\n                case \"Saturday\":\r\n                  sat.push(slotsDisplay[i]);\r\n                  break;\r\n                case \"Sunday\":\r\n                  sun.push(slotsDisplay[i]);\r\n                  break;\r\n                case \"Monday\":\r\n                  mon.push(slotsDisplay[i]);\r\n                  break;\r\n                case \"Tuesday\":\r\n                  tues.push(slotsDisplay[i]);\r\n                  break;\r\n                case \"Wednesday\":\r\n                  wed.push(slotsDisplay[i]);\r\n                  break;\r\n                case \"Thursday\":\r\n                  thurs.push(slotsDisplay[i]);\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n            setSats(orderDays(sat));\r\n            setSuns(orderDays(sun));\r\n            setMons(orderDays(mon));\r\n            setTuess(orderDays(tues));\r\n            setWeds(orderDays(wed));\r\n            setThurss(orderDays(thurs));\r\n          }\r\n        } catch (e) {\r\n          console.log(\"~ err\", e);\r\n          document.location.href = window.location.origin + \"/unauthorized\";\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 600, //250 //400\r\n      // width: 1200\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container style = {{marginLeft: \"50px\",left:\"61px\"}}>\r\n      {/* <div class=\"table-page-slots-styleS\"> */}\r\n        <Grid item xs = {12} sm = {12} md = {9} style = {{marginTop: \"20px\"}}>\r\n          <h7 class=\"slots-titleS\">Academic Schedule</h7>\r\n        </Grid>\r\n        <Grid item xs = {12} sm = {12} md = {9}>\r\n          <div class=\"slots-lineS\"></div>\r\n        </Grid>\r\n          <Grid item container xs = {10} sm = {10} md = {9} style = {{marginTop: \"30px\"}}>\r\n            <Grid item class=\"table-slots-containerS\" xs = {5} sm = {5} md = {9} style = {{backgroundColor: \"white\"}}>\r\n                <TableContainer component = {Paper} className = {classes.table}>\r\n                  <Table\r\n                    // class=\"table-slots-style border\"\r\n                    \r\n                    aria-label=\"customized table\"\r\n                    size=\"small\"\r\n                  >\r\n                    <TableHead className=\"yellow\">\r\n                      <TableRow>\r\n                        <TableCell className=\"border\">Day/Slot</TableCell>\r\n                        <TableCell className=\"border\" align=\"center\">\r\n                          &nbsp;&nbsp;1st\r\n                          <br /> 08:15 - 09:45\r\n                        </TableCell>\r\n                        <TableCell className=\"border\" align=\"center\">\r\n                          &nbsp;&nbsp;2nd\r\n                          <br /> 10:00 - 11:30\r\n                        </TableCell>\r\n                        <TableCell className=\"border\" align=\"center\">\r\n                          &nbsp;&nbsp;3rd\r\n                          <br /> 11:45 - 13:15\r\n                        </TableCell>\r\n                        <TableCell className=\"border\" align=\"center\">\r\n                          &nbsp;&nbsp;4th\r\n                          <br /> 13:45 - 15:15\r\n                        </TableCell>\r\n                        <TableCell className=\"border\" align=\"center\">\r\n                          &nbsp;&nbsp;5th\r\n                          <br /> 15:45 - 17:15\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      <TableRow key=\"Saturday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Saturday\r\n                        </TableCell>\r\n                        {sats.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      <TableRow key=\"Sunday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Sunday\r\n                        </TableCell>\r\n                        {suns.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      <TableRow key=\"Monday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Monday\r\n                        </TableCell>\r\n                        {mons.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      <TableRow key=\"Tuesday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Tuesday\r\n                        </TableCell>\r\n                        {tuess.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      <TableRow key=\"Wednesday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Wednesday\r\n                        </TableCell>\r\n                        {weds.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                      <TableRow key=\"Thursday\">\r\n                        <TableCell component=\"th\" scope=\"row\" className=\"yellow\">\r\n                          Thursday\r\n                        </TableCell>\r\n                        {thurss.map((day) => (\r\n                          <TableCell\r\n                            align=\"center\"\r\n                            className={\r\n                              typeof day === \"string\" ? \"border\" : \"border occupiedS\"\r\n                            }\r\n                          >\r\n                            {typeof day === \"string\" ? day : day.Location} <br />\r\n                            &nbsp;{typeof day === \"string\" ? \"\\t\" : day.Course}\r\n                          </TableCell>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        {/* </div> */}\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default InstructorSlotsAssigned;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\academicMemberCourseSlot.jsx",["255","256","257","258","259","260","261","262"],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\AcademicMemberCourseSlot.jsx",["263","264"],"import React, { useState, useEffect } from \"react\";\r\nimport { link } from '../helpers/constants';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    FormHelperText,\r\n    MenuItem,\r\n    Input,\r\n  } from \"@material-ui/core\";\r\n\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport {axiosCall} from \"../helpers/axiosCall\";\r\n\r\n\r\nimport {axios} from '../helpers/axios';\r\nimport \"../styles/_colorSchema.scss\";\r\n\r\nimport Add from \"../components/Add\";\r\nimport Update from \"../components/Update\";\r\nimport Delete from \"../components/Delete\";\r\n\r\nfunction AcademicMemberCourseSlot() {\r\n    const [courses,setCourses] = useState([]);\r\n    const [course,setCourse] = useState(\"\");\r\n    const [crudBtns, setBtns] = useState({\r\n        add: false,\r\n        update: false,\r\n        delete: false,\r\n      });\r\n    const [day,setDay] = useState(\"\");\r\n    const [id,setID] = useState(\"\");\r\n    const [timing,setTiming] = useState(\"\");\r\n    const weekDays = [\"Saturday\",\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\"];\r\n    const slotTiming = [\r\n    '1st slot (08:15 - 09:45)',\r\n    '2nd slot (10:00 - 11:30)',\r\n    '3rd slot (11:45 - 13:15)',\r\n    '4th slot (13:45 - 15:15)',\r\n    '5th slot (15:45 - 17:15)'\r\n    ];\r\n\r\n    \r\n    const {addToast} = useToasts();\r\n\r\n    const handleOnChange = (target) => {\r\n        setCourse(target.value);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        async function fetchData() {\r\n        const loggedInUser = localStorage.getItem(\"user\");\r\n\t\tif (!loggedInUser) {\r\n\t\t  document.location.href = window.location.origin + \"/login\"; \r\n\t\t}else{\r\n            try{\r\n                const response = await axios.get(`${link}/academicMember/courseInstructor/courseCoverage`);\r\n                if(response.data.error){\r\n                    addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\r\n                }else{\r\n                    const coverageDisplay = response.data.data;\r\n                    const coursesState = coverageDisplay.map((course)=>{\r\n                        return course.course_name;\r\n                    })\r\n                    setCourses(coursesState);\r\n                }\r\n            }catch(e){\r\n                console.log('~ err', e);\r\n                document.location.href = window.location.origin + \"/unauthorized\";\r\n            }\r\n        }\r\n    }\r\n    fetchData();\r\n    },[]);\r\n\r\n    const handleSubmit = async()=>{\r\n        try{\r\n            let response = null;\r\n            let optionSelected = \"\";\r\n            if(crudBtns.add){\r\n                optionSelected = \"post\";\r\n            }else if(crudBtns.update){\r\n                optionSelected = \"put\";\r\n            }else if(crudBtns.delete){\r\n                optionSelected = \"delete\";\r\n            }else {\r\n                addToast(\"You should specify an option\", {appearance: 'warning',autoDismiss: true});\r\n                return;\r\n            }\r\n            let slot = timing.substring(0,3);\r\n            let convertedTiming = \"\";\r\n            switch(slot){\r\n                case\"1st\":convertedTiming = \"08:15 AM\";break;\r\n                case\"2nd\":convertedTiming = \"10:00 AM\";break;\r\n                case\"3rd\":convertedTiming = \"11:45 AM\";break;\r\n                case\"4th\":convertedTiming = \"01:45 PM\";break;\r\n                case\"5th\":convertedTiming = \"03:45 PM\";break;\r\n            }\r\n            response = await axiosCall(optionSelected,`${link}/academicMember/courseInstructor/slotsAssignment`,\r\n            {\r\n                gucId: id,\r\n                courseName: course,\r\n                slot: {\r\n                  day: day,\r\n                  time: convertedTiming\r\n                }\r\n            });\r\n\r\n            if(response.data.error){\r\n                addToast(response.data.error, {appearance: 'warning',autoDismiss: true});\r\n            }else{\r\n                // console.log(response.data.data);\r\n                if(optionSelected === \"post\")\r\n                    addToast(\"The slot assignment is added successfully\", {appearance: 'success',autoDismiss: true});\r\n                else if(optionSelected === \"put\"){\r\n                    addToast(\"The slot assignment is updated successfully\", {appearance: 'success',autoDismiss: true});\r\n                }else{\r\n                    addToast(\"The slot assignment is deleted successfully\", {appearance: 'success',autoDismiss: true});\r\n                }\r\n            }\r\n        }catch(e){\r\n            console.log('~ err', e);\r\n            document.location.href = window.location.origin + \"/unauthorized\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"crud-outer-container\">\r\n        <div className=\"crud-container\">\r\n          <Add\r\n            text=\"Slot Assignment\"\r\n            onClick={() =>\r\n              setBtns({\r\n                add: true,\r\n                update: false,\r\n                delete: false,\r\n              })\r\n            }\r\n          />\r\n          <Update\r\n            text=\"Slot Assignment\"\r\n            onClick={() =>\r\n              setBtns({\r\n                add: false,\r\n                update: true,\r\n                delete: false,\r\n              })\r\n            }\r\n          />\r\n          <Delete\r\n            text=\"Slot Assignment\"\r\n            onClick={() =>\r\n              setBtns({\r\n                add: false,\r\n                update: false,\r\n                delete: true,\r\n              })\r\n            }\r\n          />\r\n        </div>\r\n        {(!crudBtns.add && !crudBtns.update && !crudBtns.delete)?null:\r\n            <div className=\"crud-inner-container\">\r\n                <div className=\"crud-form\">\r\n                    <FormControl className=\"crud-formControl\" required>\r\n                    <InputLabel className=\"crud-inputLabel\">Course Name</InputLabel>\r\n                    <Select\r\n                        className=\"crud-select\"\r\n                        value={course}\r\n                        onChange={(event) => {\r\n                        handleOnChange(event.target);\r\n                        }}\r\n                    >\r\n                        {courses.length > 0 &&\r\n                        courses.map((coursename) => (\r\n                            <MenuItem\r\n                            className=\"crud-menuItem\"\r\n                            value={coursename}\r\n                            key={coursename}\r\n                            >\r\n                            {coursename}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText className=\"crud-helperText\">\r\n                        This field is required\r\n                    </FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <FormControl className=\"crud-formControl\" required>\r\n                    <InputLabel className=\"crud-inputLabel\">Slot Day</InputLabel>\r\n                    <Select\r\n                        className=\"crud-select\"\r\n                        value={day}\r\n                        onChange={(event) => {\r\n                        setDay(event.target.value);\r\n                        }}\r\n                    >\r\n                        {weekDays.map((weekDay) => (\r\n                            <MenuItem\r\n                            className=\"crud-menuItem\"\r\n                            value={weekDay}\r\n                            key={weekDay}\r\n                            >\r\n                            {weekDay}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText className=\"crud-helperText\">\r\n                        This field is required\r\n                    </FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <FormControl className=\"crud-formControl\" required>\r\n                    <InputLabel className=\"crud-inputLabel\">Slot Timing</InputLabel>\r\n                    <Select\r\n                        className=\"crud-select\"\r\n                        value={timing}\r\n                        onChange={(event) => {\r\n                        setTiming(event.target.value);\r\n                        }}\r\n                    >\r\n                        {slotTiming.map((slotTime) => (\r\n                            <MenuItem\r\n                            className=\"crud-menuItem\"\r\n                            value={slotTime}\r\n                            key={slotTime}\r\n                            >\r\n                            {slotTime}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <FormHelperText className=\"crud-helperText\">\r\n                        This field is required\r\n                    </FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <FormControl className=\"crud-formControl\" required>\r\n                    <InputLabel className=\"crud-inputLabel\">Member GUC ID</InputLabel>\r\n                    <Input\r\n                        className=\"crud-input\"\r\n                        value={id}\r\n                        onChange={(event) => setID(event.target.value)}\r\n                    />\r\n                    <FormHelperText className=\"crud-helperText\">\r\n                        This field is required\r\n                    </FormHelperText>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <Button\r\n                    variant={crudBtns.add?\"success\":crudBtns.update?\"primary\":\"danger\"}\r\n                    className= {crudBtns.add?\"crud-submit crud-add-btn green\":\r\n                                crudBtns.update?\"crud-submit crud-update-btn blue\":\r\n                                \"crud-submit crud-delete-btn red\"}\r\n                    disabled={id === \"\" || timing === \"\" || day === \"\" || course === \"\"? true : false}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    {crudBtns.add? \"Assign\":crudBtns.update? \"Update\":\"Delete\"}\r\n                </Button>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AcademicMemberCourseSlot\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\HOD\\ViewAllStaff.jsx",["265","266"],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\HOD\\ViewCourseCoverage.jsx",["267"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport axiosCall from \"../../helpers/axiosCall\";\r\nimport { link } from \"../../helpers/constants.js\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nfunction ViewCourseCoverage() {\r\n  const [data, setData] = useState([]); //table data\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (!loggedInUser) {\r\n      document.location.href = window.location.origin + \"/login\";\r\n    } else {\r\n      async function fetchData() {\r\n        try {\r\n          const response = await axiosCall(\r\n            \"get\",\r\n            `${link}/departments/viewCourseCoverage`\r\n          );\r\n          if (response.data.data.error) {\r\n            addToast(response.data.data.error, {\r\n              appearance: \"warning\",\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            let data = response.data.data;\r\n            setData(data);\r\n          }\r\n        } catch (err) {\r\n          console.log(\"~ err\", err);\r\n          document.location.href = window.location.origin + \"/unauthorized\";\r\n        }\r\n      }\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"my-table\">\r\n      <Fade>\r\n        <h3 className=\"general-header\">View course coverage</h3>\r\n        <hr className=\"general-line\" />\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={8}>\r\n            <MaterialTable\r\n              title=\"\"\r\n              columns={[\r\n                { title: \"Course name\", field: \"course\" },\r\n                { title: \"Coverage %\", field: \"coverage\" },\r\n              ]}\r\n              data={data}\r\n              options={{\r\n                headerStyle: {\r\n                  backgroundColor: \"#045CC8\",\r\n                  color: \"#FFF\",\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\nexport default ViewCourseCoverage;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\CC\\CourseSlotCRUD.jsx",["268","269","270","271"],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Course.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\MyAttendanceRecord.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\ChangePassword.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Staff.jsx",["272"],"import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Avatar from \"react-avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport axiosCall from \"../helpers/axiosCall\";\r\nimport { link } from \"../helpers/constants.js\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport add from \"../assets/add.svg\";\r\nimport auth from \"../helpers/auth\";\r\n\r\nfunction Staff() {\r\n  const [data, setData] = useState([]); //table data\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (!loggedInUser) {\r\n      document.location.href = window.location.origin + \"/login\";\r\n    } else {\r\n      async function fetchData() {\r\n        try {\r\n          await auth([\"HR\"]);\r\n          const response = await axiosCall(\"get\", `/staffMembers/all/all`);\r\n\r\n          const locations = await axiosCall(\r\n            \"get\",\r\n            `${link}/locations/room/all`\r\n          );\r\n\r\n          if (response.data.data.error) {\r\n            addToast(response.data.data.error, {\r\n              appearance: \"danger\",\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            //get missing hours and days\r\n            const missingRes = await axiosCall(\r\n              \"get\",\r\n              \"attendance/viewStaffMissing\"\r\n            );\r\n\r\n            let data = await response.data.data.map((staff) => {\r\n              return {\r\n                name: staff.name,\r\n                gucId: staff.gucId,\r\n                gender: staff.gender,\r\n                email: staff.email,\r\n                role: staff.role,\r\n                salary: staff.salary,\r\n                dayOff: staff.dayOff,\r\n                id: staff._id,\r\n                location: locations.data.data\r\n                  .map((location) => {\r\n                    if (staff.officeLocation === location._id) {\r\n                      return location.location;\r\n                    } else return null;\r\n                  })\r\n                  .filter((location) => location !== null),\r\n                missingHours: missingRes.data.data\r\n                  .map((rec) => {\r\n                    if (rec.GUCID === staff.gucId) {\r\n                      return rec.MissingHours;\r\n                    } else return null;\r\n                  })\r\n                  .filter((rec) => rec !== null),\r\n                missingDays: missingRes.data.data\r\n                  .map((rec) => {\r\n                    if (rec.GUCID === staff.gucId) {\r\n                      return rec.MissingDays;\r\n                    } else return null;\r\n                  })\r\n                  .filter((rec) => rec !== null),\r\n              };\r\n            });\r\n\r\n            await setData(data);\r\n          }\r\n        } catch (err) {\r\n          console.log(\"~ err\", err);\r\n          //   document.location.href = \"/unauthorized\";\r\n        }\r\n      }\r\n      fetchData();\r\n    }\r\n  }, []);\r\n\r\n  const handleDelete = async (gucId) => {\r\n    try {\r\n      const res = await axiosCall(\"delete\", \"staffMembers/staff\", {\r\n        gucId: gucId,\r\n      });\r\n\r\n      if (res.data.data) {\r\n        addToast(\"Staff deleted successfully\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n\r\n        // delete from table\r\n        const filtered = await data.filter((staff) => staff.gucId !== gucId);\r\n        setData(filtered);\r\n      }\r\n\r\n      if (res.data.error) {\r\n        addToast(res.data.error, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      addToast(error, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-table\">\r\n      <Fade>\r\n        <h3 className=\"general-header\">Staff Members</h3>\r\n        <hr className=\"general-line\" />\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={11}>\r\n            <MaterialTable\r\n              title=\"\"\r\n              columns={[\r\n                {\r\n                  title: \"Avatar\",\r\n                  render: (rowData) => (\r\n                    <Avatar\r\n                      maxInitials={1}\r\n                      size={35}\r\n                      round={true}\r\n                      name={rowData === undefined ? \" \" : rowData.name}\r\n                    />\r\n                  ),\r\n                },\r\n                { title: \"Name\", field: \"name\" },\r\n                { title: \"Gender\", field: \"gender\" },\r\n                { title: \"ID\", field: \"gucId\" },\r\n                { title: \"Role\", field: \"role\" },\r\n                { title: \"Email\", field: \"email\" },\r\n                { title: \"Day off\", field: \"dayOff\" },\r\n                { title: \"office\", field: \"location\" },\r\n                { title: \"Missing Days\", field: \"missingDays\" },\r\n                { title: \"Missing Hours\", field: \"missingHours\" },\r\n              ]}\r\n              onRowClick={(event, rowData) =>\r\n                // <StaffProfile gucId={rowData.gucId} />\r\n                (document.location.href =\r\n                  window.location.origin + `/staffProfile/${rowData.gucId}`)\r\n              }\r\n              align=\"center\"\r\n              data={data}\r\n              actions={[\r\n                {\r\n                  title: \"Delete\",\r\n                  icon: \"delete\",\r\n                  tooltip: \"Delete Staff\",\r\n                  onClick: (event, rowData) => {\r\n                    handleDelete(rowData.gucId);\r\n                  },\r\n                },\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1,\r\n                headerStyle: {\r\n                  backgroundColor: \"#FFF\",\r\n                  color: \"#000\",\r\n                  letterSpacing: \"0.1em\",\r\n                  fontSize: \"18px\",\r\n                  margin: \"0\",\r\n                  padding: \"0 0 10px 0\",\r\n                },\r\n                rowStyle: {\r\n                  fontSize: \"15px\",\r\n                },\r\n              }}\r\n              components={{\r\n                Toolbar: (props) => (\r\n                  <Button\r\n                    variant=\"success\"\r\n                    className=\"add-new-staff green\"\r\n                    onClick={() =>\r\n                      (document.location.href =\r\n                        window.location.origin + \"/newStaffMember\")\r\n                    }\r\n                  >\r\n                    <img src={add} alt=\"add-icon\" className=\"icon\" />\r\n                    <h5 className=\"text\">New Staff Member </h5>\r\n                  </Button>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Staff;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\test.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Profile.jsx",["273"],"import React, { useState, useEffect } from \"react\";\r\nimport axiosCall from \"../helpers/axiosCall\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport checkLogin from \"../helpers/checkLogin\";\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\n\r\n//TODO: refactor\r\nfunction Profile(props) {\r\n  const [btn, setBtn] = useState(\"Update profile\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [HR, setHr] = useState(false);\r\n  const [gucId, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dayOff, setDayOff] = useState(\"\");\r\n  const [salary, setSalary] = useState(\"\");\r\n  const [deductedSalary, setDeductedSalary] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [rooms, setRooms] = useState({ rooms: [] });\r\n  const [roomChosen, setRoomChosen] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [faculty, setFaculty] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      //get user\r\n      let user = await checkLogin();\r\n\r\n      setId(user.gucId);\r\n      setName(user.name);\r\n      setGender(user.gender);\r\n      setEmail(user.email);\r\n      setDayOff(user.dayOff);\r\n      setSalary(user.salary);\r\n      setPosition(user.type);\r\n\r\n      let dSalary = await axiosCall(\"get\", `staffMembers/salary/${user.gucId}`);\r\n      setDeductedSalary(dSalary.data.salary.toFixed(2));\r\n\r\n      //get location\r\n      const locationRes = await axiosCall(\"get\", \"locations/room/all\");\r\n      const filtered = locationRes.data.data.filter(\r\n        (loc) => loc.type === \"Office\"\r\n      );\r\n      setRooms(filtered);\r\n      let office;\r\n      if (locationRes.data.data) {\r\n        office = locationRes.data.data.find(\r\n          ({ _id }) => _id === user.officeLocation\r\n        );\r\n        setRoomChosen(office._id);\r\n        setLocation(office.location);\r\n      }\r\n\r\n      if (user.type === \"Academic Member\") {\r\n        setRole(user.role);\r\n\r\n        //get faculty\r\n        const facultyRes = await axiosCall(\"get\", \"faculties/faculty/all\");\r\n        let fac;\r\n        if (facultyRes.data.data) {\r\n          fac = facultyRes.data.data.find(({ _id }) => _id === user.faculty);\r\n          setFaculty(fac.code);\r\n        }\r\n\r\n        //get department\r\n        const depRes = await axiosCall(\"get\", \"departments/department/all/all\");\r\n        let dep;\r\n        if (depRes.data.data) {\r\n          dep = depRes.data.data.find(({ _id }) => _id === user.department);\r\n          setDepartment(dep.name);\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [props.user]);\r\n\r\n  const handleUpdateProfile = async () => {\r\n    setBtn(\"Submit Changes\");\r\n    setUpdate(true);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const body = {\r\n        gucId: gucId,\r\n        name: name,\r\n        gender: gender,\r\n        role: role,\r\n      };\r\n\r\n      const res = await axiosCall(\"put\", \"staffMembers/profile\", body);\r\n\r\n      if (res.data.data) {\r\n        addToast(\"Profile updated successfully\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n        setBtn(\"Update Profile\");\r\n        setUpdate(false);\r\n      }\r\n      if (res.data.error) {\r\n        addToast(res.data.error, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(\"~err: \", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-inner-container\">\r\n      <div className=\"profile-all\">\r\n        <div className=\"profile-form\">\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">GUC Id</InputLabel>\r\n            <Input className=\"profile-input\" value={gucId} disabled={true} />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            className={\r\n              update ? `profile-formControl toUpdate` : `profile-formControl`\r\n            }\r\n          >\r\n            <InputLabel className=\"profile-inputLabel\">Name</InputLabel>\r\n            <Input\r\n              className=\"profile-input\"\r\n              value={name}\r\n              disabled={update ? false : true}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            className={\r\n              update ? `profile-formControl toUpdate` : `profile-formControl`\r\n            }\r\n          >\r\n            <InputLabel className=\"profile-inputLabel\">Gender</InputLabel>\r\n            <Input\r\n              className=\"profile-input\"\r\n              value={gender}\r\n              disabled={update ? false : true}\r\n              onChange={(event) => setGender(event.target.value)}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">Email</InputLabel>\r\n            <Input className=\"profile-input\" value={email} disabled={true} />\r\n          </FormControl>\r\n\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">Day off</InputLabel>\r\n            <Input className=\"profile-input\" value={dayOff} disabled={true} />\r\n          </FormControl>\r\n\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">Salary</InputLabel>\r\n            <Input className=\"profile-input\" value={salary} disabled={true} />\r\n          </FormControl>\r\n\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">\r\n              Deducted Salary\r\n            </InputLabel>\r\n            <Input\r\n              className=\"profile-input\"\r\n              value={deductedSalary}\r\n              disabled={true}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl className=\"profile-formControl\">\r\n            <InputLabel className=\"profile-inputLabel\">Position</InputLabel>\r\n            <Input className=\"profile-input\" value={position} disabled={true} />\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            className={\r\n              update && HR\r\n                ? `profile-formControl toUpdate`\r\n                : `profile-formControl`\r\n            }\r\n          >\r\n            <InputLabel className=\"profile-inputLabel\">\r\n              Office Location\r\n            </InputLabel>\r\n            {update ? (\r\n              <Select\r\n                className=\"profile-select\"\r\n                value={roomChosen}\r\n                onChange={(event) => {\r\n                  setRoomChosen(event.target.value);\r\n                }}\r\n                disabled={update && HR ? false : true}\r\n              >\r\n                {update &&\r\n                  rooms.length > 0 &&\r\n                  rooms.map((room) => (\r\n                    <MenuItem\r\n                      className=\"profile-menuItem\"\r\n                      value={room._id}\r\n                      key={room._id}\r\n                    >\r\n                      {room.location}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            ) : (\r\n              <Input\r\n                className=\"profile-input\"\r\n                value={location}\r\n                disabled={true}\r\n              />\r\n            )}\r\n          </FormControl>\r\n\r\n          {position === \"Academic Member\" ? (\r\n            <div>\r\n              <FormControl\r\n                className={\r\n                  update\r\n                    ? `profile-formControl toUpdate`\r\n                    : `profile-formControl`\r\n                }\r\n              >\r\n                <InputLabel className=\"profile-inputLabel\">Role</InputLabel>\r\n                <Input\r\n                  className=\"profile-input\"\r\n                  value={role}\r\n                  disabled={update ? false : true}\r\n                  onChange={(event) => setRole(event.target.value)}\r\n                />\r\n              </FormControl>\r\n              <FormControl className=\"profile-formControl\">\r\n                <InputLabel className=\"profile-inputLabel\">Faculty</InputLabel>\r\n                <Input\r\n                  className=\"profile-input\"\r\n                  value={faculty}\r\n                  disabled={true}\r\n                />\r\n              </FormControl>\r\n              <FormControl className=\"profile-formControl\">\r\n                <InputLabel className=\"profile-inputLabel\">\r\n                  Department\r\n                </InputLabel>\r\n                <Input\r\n                  className=\"profile-input\"\r\n                  value={department}\r\n                  disabled={true}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"profile-buttons\">\r\n          <button\r\n            className=\"blue profile-update-btn\"\r\n            onClick={update ? handleSubmit : handleUpdateProfile}\r\n          >\r\n            {btn}\r\n          </button>\r\n          <button\r\n            className=\"profile-change-password-btn\"\r\n            onClick={() =>\r\n              (document.location.href =\r\n                window.location.origin + \"/changePassword\")\r\n            }\r\n          >\r\n            Change Password\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\AttendanceRecord.jsx",[],["274","275"],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\DeleteCourse.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\UpdateCourse.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\course\\AddCourse.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\TAMenuItems.jsx",["276","277","278"],"import React, { useState } from \"react\";\r\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\n//icons\r\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\r\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\r\n\r\nfunction TAMenuItems() {\r\n  const [icons, setIcons] = useState({\r\n    courseCoverage: false,\r\n    staff: false,\r\n  });\r\n\r\n  const routeChange = (path) => {\r\n    document.location.href = window.location.origin + `/${path}`;\r\n  };\r\n\r\n  const showTag = (name) => {\r\n    setIcons({\r\n      ...icons,\r\n      [name]: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu iconShape=\"round\" className=\"first-new\">\r\n      <MenuItem\r\n        icon={<MdPersonAdd />}\r\n        onMouseEnter={() => showTag(\"staff\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewStaff\")}\r\n      >\r\n        {icons.staff ? \"Staff \" : \"\"}\r\n      </MenuItem>\r\n\r\n      <MenuItem\r\n        icon={<FaBook />}\r\n        onMouseEnter={() => showTag(\"course\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewCourseCoverage\")}\r\n      >\r\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default TAMenuItems;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\HODMenuItems.jsx",["279","280","281"],"import React, { useState } from \"react\";\r\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\n//icons\r\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\r\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\r\n\r\nfunction HODMenuItems() {\r\n  const [icons, setIcons] = useState({\r\n    courseCoverage: false,\r\n    staff: false,\r\n  });\r\n\r\n  const routeChange = (path) => {\r\n    document.location.href = window.location.origin + `/${path}`;\r\n  };\r\n\r\n  const showTag = (name) => {\r\n    setIcons({\r\n      ...icons,\r\n      [name]: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu iconShape=\"round\" className=\"first-new\">\r\n      <MenuItem\r\n        icon={<MdPersonAdd />}\r\n        onMouseEnter={() => showTag(\"staff\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewStaff\")}\r\n      >\r\n        {icons.staff ? \"Staff \" : \"\"}\r\n      </MenuItem>\r\n\r\n      <MenuItem\r\n        icon={<FaBook />}\r\n        onMouseEnter={() => showTag(\"courseCoverage\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewCourseCoverage\")}\r\n      >\r\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default HODMenuItems;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\sidebar\\CIMenuItems.jsx",["282","283","284"],"import React, { useState } from \"react\";\r\nimport { Menu, MenuItem } from \"react-pro-sidebar\";\r\n\r\n//icons\r\nimport { MdLocationOn, MdPersonAdd } from \"react-icons/md\";\r\nimport { FaUniversity, FaClipboardList, FaBook } from \"react-icons/fa\";\r\n\r\nfunction CIMenuItems() {\r\n  const [icons, setIcons] = useState({\r\n    courseCoverage: false,\r\n    staff: false,\r\n  });\r\n\r\n  const routeChange = (path) => {\r\n    document.location.href = window.location.origin + `/${path}`;\r\n  };\r\n\r\n  const showTag = (name) => {\r\n    setIcons({\r\n      ...icons,\r\n      [name]: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Menu iconShape=\"round\" className=\"first-new\">\r\n      <MenuItem\r\n        icon={<MdPersonAdd />}\r\n        onMouseEnter={() => showTag(\"staff\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewStaff\")}\r\n      >\r\n        {icons.staff ? \"Staff \" : \"\"}\r\n      </MenuItem>\r\n\r\n      <MenuItem\r\n        icon={<FaBook />}\r\n        onMouseEnter={() => showTag(\"course\")}\r\n        onMouseLeave={() => setIcons(false)}\r\n        onClick={() => routeChange(\"viewCourseCoverage\")}\r\n      >\r\n        {icons.courseCoverage ? \"Course Coverage\" : \"\"}\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default CIMenuItems;\r\n","D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\StaffProfile.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\NewStaffMember.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\pages\\Staff\\StaffAttendance.jsx",[],"D:\\GUC\\Semester 7\\CSEN 704\\Project\\M2\\milestone-1-team51\\client\\src\\components\\AttendanceTable.jsx",["285"],"import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport axiosCall from \"../helpers/axiosCall\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { IoFilter, IoCloseSharp } from \"react-icons/io5\";\r\nimport { Select, MenuItem } from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  TimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nfunction AttendanceTable(props) {\r\n  const [staff, setStaff] = useState([]);\r\n  const [HR, setHr] = useState(false);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [data, setData] = useState([]); //table data\r\n  const [filtered, setFiltered] = useState(false);\r\n  const [selectedMonth, setMonth] = useState(\"Month\");\r\n\r\n  const { addToast } = useToasts();\r\n\r\n  const month = [\r\n    \"11 Jan - 10 Feb\", //0 1-2\r\n    \"11 Feb - 10 Mar\", //1 2-3\r\n    \"11 Mar - 10 Apr\", //2 3-4\r\n    \"11 Apr - 10 May\", //3 4-5\r\n    \"11 May - 10 Jun\", //4 5-6\r\n    \"11 Jun - 10 Jul\", //5 6-7\r\n    \"11 Jul - 10 Aug\", //6 7-8\r\n    \"11 Aug - 10 Sep\", //7 8-9\r\n    \"11 Sep - 10 Oct\", //8 9-10\r\n    \"11 Oct - 10 Nov\", //9 10-11\r\n    \"11 Nov - 10 Dec\", //10 11-12\r\n    \"11 Dec - 10 Jan\", //11 12-1\r\n  ];\r\n\r\n  const compare = (a, b) => {\r\n    const rec1 = a.date;\r\n    const rec2 = b.date;\r\n\r\n    let comparison = 0;\r\n    if (rec1 < rec2) {\r\n      comparison = 1;\r\n    } else if (rec1 > rec2) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (!loggedInUser) {\r\n      document.location.href = window.location.origin + \"/login\";\r\n    } else {\r\n      async function fetchData() {\r\n        try {\r\n          let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\r\n          let staff = \"\";\r\n          if (temp.data.data) staff = temp.data.data;\r\n\r\n          if (props.hr) setHr(true);\r\n\r\n          if (staff) {\r\n            setStaff(staff);\r\n            let records = staff.attendanceRecords;\r\n            // console.log(\r\n            //   \"🚀 ~ file: AttendanceTable.jsx ~ line 73 ~ fetchData ~ records\",\r\n            //   records\r\n            // );\r\n            // for (let i = 0; i < records.length; i++) {\r\n            //   console.log(records[i].endTime);\r\n            //   let nweDate = \"2021-01-01T\" + records[i].endTime;\r\n            //   records[i].endTime = new Date(nweDate);\r\n\r\n            //   // console.log(t);\r\n            // }\r\n\r\n            //sorted .. from most to least recent\r\n            const result = records.sort(compare);\r\n            setOriginalData(result);\r\n            setData(result);\r\n          } else {\r\n            addToast(\"Error occurred, please try again later\", {\r\n              appearance: \"danger\",\r\n              autoDismiss: true,\r\n            });\r\n          }\r\n        } catch (err) {\r\n          console.log(\"~ err\", err);\r\n        }\r\n      }\r\n      fetchData();\r\n    }\r\n  }, [props]);\r\n\r\n  const handleFilter = async () => {\r\n    try {\r\n      if (selectedMonth === \"Month\") {\r\n      } else {\r\n        setFiltered(true);\r\n        let term = parseInt(month.indexOf(selectedMonth));\r\n        if (term > -1) {\r\n          let month1 = term + 1;\r\n          let month2;\r\n          if (month1 === 12) month2 = 1;\r\n          else month2 = month1 + 1;\r\n\r\n          const res = await axiosCall(\r\n            \"get\",\r\n            `attendance/viewAttendance/${month1}/${month2}`\r\n          );\r\n\r\n          addToast(\"filtered successfully\", {\r\n            appearance: \"success\",\r\n            autoDismiss: true,\r\n          });\r\n\r\n          return setData(res.data);\r\n        } else {\r\n          addToast(\"Sorry this is not a valid month\", {\r\n            appearance: \"danger\",\r\n            autoDismiss: true,\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      addToast(\"crashed\", {\r\n        appearance: \"danger\",\r\n        autoDismiss: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRemoveFilter = async () => {\r\n    setData(originalData);\r\n    setFiltered(false);\r\n    setMonth(\"\");\r\n  };\r\n\r\n  const handleRowUpdate = async (newData, oldData) => {\r\n    //get number\r\n    const filtered = originalData.filter((rec) => rec.date === oldData.date);\r\n    let numberHere = 0;\r\n    for (let i = 0; i < filtered.length; i++) {\r\n      if (filtered[i]._id === oldData._id) {\r\n        numberHere = i + 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const newSignIn = newData.startTime;\r\n    const newSignOut = newData.endTime;\r\n\r\n    if (typeof newSignIn === \"object\" && typeof newSignOut === \"object\") {\r\n      return addToast(\"Sorry you cannot both signIn and sign Out\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n    } else if (!oldData.startTime && newData.startTime) {\r\n      //changed signIn\r\n      let time = newData.startTime.toLocaleTimeString().split(\" \");\r\n      let signIn = time[0];\r\n      let splitted = time[0].split(\":\");\r\n      if (time[1] === \"PM\") {\r\n        splitted[0] = parseInt(splitted[0]) + 12;\r\n      } else {\r\n        if (parseInt(splitted[0]) < 7) {\r\n          splitted[0] = 7;\r\n          splitted[1] = \"00\";\r\n          splitted[2] = \"00\";\r\n        }\r\n      }\r\n      signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\r\n\r\n      if (signIn.length < 8) signIn = \"0\" + signIn;\r\n\r\n      const body = {\r\n        id: staff.gucId,\r\n        signIn: signIn,\r\n        date: oldData.date,\r\n        day: oldData.day,\r\n        number: parseInt(numberHere),\r\n      };\r\n\r\n      const res = await axiosCall(\r\n        \"put\",\r\n        \"attendance/addMissingSignInOut\",\r\n        body\r\n      );\r\n\r\n      if (res.data.data) {\r\n        addToast(\"Record updated successfully\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 3000,\r\n        });\r\n\r\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\r\n        let staffUpdated = \"\";\r\n        if (temp.data.data) staffUpdated = temp.data.data;\r\n\r\n        if (staffUpdated) {\r\n          let records = staffUpdated.attendanceRecords;\r\n\r\n          //sorted .. from most to least recent\r\n          const result = records.sort(compare);\r\n\r\n          setOriginalData(result);\r\n          setData(result);\r\n        }\r\n      }\r\n      if (res.data.error) {\r\n        addToast(res.data.error, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 2000,\r\n        });\r\n      }\r\n    } else if (!oldData.endTime && newData.endTime) {\r\n      //changed signOut\r\n\r\n      let time = newData.endTime.toLocaleTimeString().split(\" \");\r\n      let signOut = time[0];\r\n      if (time[1] === \"PM\") {\r\n        let splitted = time[0].split(\":\");\r\n        splitted[0] = parseInt(splitted[0]) + 12;\r\n        if (splitted[0] > 19) {\r\n          splitted[0] = 19;\r\n          splitted[1] = \"00\";\r\n          splitted[2] = \"00\";\r\n        }\r\n        signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\r\n      }\r\n      if (signOut.length < 8) signOut = \"0\" + signOut;\r\n\r\n      const body = {\r\n        id: staff.gucId,\r\n        signOut: signOut,\r\n        date: oldData.date,\r\n        day: oldData.day,\r\n        number: parseInt(numberHere),\r\n      };\r\n\r\n      const res = await axiosCall(\r\n        \"put\",\r\n        \"attendance/addMissingSignInOut\",\r\n        body\r\n      );\r\n\r\n      if (res.data.data) {\r\n        addToast(\"Record updated successfully\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 3000,\r\n        });\r\n\r\n        let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\r\n        let staffUpdated = \"\";\r\n        if (temp.data.data) staffUpdated = temp.data.data;\r\n\r\n        if (staffUpdated) {\r\n          let records = staffUpdated.attendanceRecords;\r\n\r\n          //sorted .. from most to least recent\r\n          const result = records.sort(compare);\r\n\r\n          setOriginalData(result);\r\n          setData(result);\r\n        }\r\n      }\r\n      if (res.data.error) {\r\n        addToast(res.data.error, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 2000,\r\n        });\r\n      }\r\n    } else if (\r\n      (typeof oldData.startTime === \"string\" &&\r\n        typeof newData.startTime === \"object\") ||\r\n      (typeof oldData.endTime === \"string\" &&\r\n        typeof newData.endTime === \"object\")\r\n    ) {\r\n      return addToast(\"You can not change existing records\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n    } else {\r\n      return addToast(\"You did not change any record\", {\r\n        appearance: \"warning\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRowAdd = async (newData) => {\r\n    let input = newData.date;\r\n\r\n    if (!newData.date || !newData.startTime || !newData.endTime) {\r\n      return addToast(\"Please enter all details\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n    }\r\n\r\n    //day\r\n    let day;\r\n    switch (input.toString().split(\" \")[0]) {\r\n      case \"Sat\":\r\n        day = \"Saturday\";\r\n        break;\r\n      case \"Sun\":\r\n        day = \"Sunday\";\r\n        break;\r\n      case \"Mon\":\r\n        day = \"Monday\";\r\n        break;\r\n      case \"Tues\":\r\n        day = \"Tuesday\";\r\n        break;\r\n      case \"Wed\":\r\n        day = \"Wednesday\";\r\n        break;\r\n      case \"Thu\":\r\n        day = \"Thursday\";\r\n        break;\r\n      case \"Fri\":\r\n        return addToast(\"Sorry you cannot add a record on Friday\", {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 2000,\r\n        });\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //date\r\n    let dayOfMonth =\r\n      input.getDate() > 9 ? input.getDate() : \"0\" + input.getDate();\r\n    let monthOfYear =\r\n      input.getMonth() + 1 > 9\r\n        ? input.getMonth() + 1\r\n        : \"0\" + (input.getMonth() + 1);\r\n\r\n    let date = input.getFullYear() + \"-\" + monthOfYear + \"-\" + dayOfMonth;\r\n\r\n    //signIn\r\n    let time = newData.startTime.toLocaleTimeString().split(\" \");\r\n    let signIn = time[0];\r\n    let splitted = time[0].split(\":\");\r\n    if (time[1] === \"PM\") {\r\n      splitted[0] = parseInt(splitted[0]) + 12;\r\n    } else {\r\n      if (parseInt(splitted[0]) < 7) {\r\n        splitted[0] = 7;\r\n        splitted[1] = \"00\";\r\n        splitted[2] = \"00\";\r\n      }\r\n    }\r\n    signIn = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\r\n\r\n    if (signIn.length < 8) signIn = \"0\" + signIn;\r\n\r\n    //signOut\r\n    time = newData.endTime.toLocaleTimeString().split(\" \");\r\n    let signOut = time[0];\r\n    if (time[1] === \"PM\") {\r\n      let splitted = time[0].split(\":\");\r\n      splitted[0] = parseInt(splitted[0]) + 12;\r\n      if (splitted[0] > 19) {\r\n        splitted[0] = 19;\r\n        splitted[1] = \"00\";\r\n        splitted[2] = \"00\";\r\n      }\r\n      signOut = splitted[0] + \":\" + splitted[1] + \":\" + splitted[2];\r\n    }\r\n    if (signOut.length < 8) signOut = \"0\" + signOut;\r\n\r\n    const body = {\r\n      id: staff.gucId,\r\n      signIn: signIn,\r\n      signOut: signOut,\r\n      date: date,\r\n      day: day,\r\n      number: 1,\r\n    };\r\n\r\n    const res = await axiosCall(\"put\", \"attendance/addMissingSignInOut\", body);\r\n\r\n    if (res.data.data) {\r\n      addToast(\"Record updated successfully\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n\r\n      let temp = await axiosCall(\"get\", `staffMembers/all/${props.gucId}`);\r\n      let staffUpdated = \"\";\r\n      if (temp.data.data) staffUpdated = temp.data.data;\r\n\r\n      if (staffUpdated) {\r\n        let records = staffUpdated.attendanceRecords;\r\n\r\n        //sorted .. from most to least recent\r\n        const result = records.sort(compare);\r\n\r\n        setOriginalData(result);\r\n        setData(result);\r\n      }\r\n    }\r\n    if (res.data.error) {\r\n      addToast(res.data.error, {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-table\">\r\n      <Fade>\r\n        <h3 className=\"general-header\">{props.title}</h3>\r\n        <hr className=\"general-line\" />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={11}>\r\n              <MaterialTable\r\n                title=\"\"\r\n                columns={[\r\n                  {\r\n                    title: \"Day\",\r\n                    field: \"day\",\r\n                    filtering: false,\r\n                  },\r\n                  {\r\n                    title: \"Date\",\r\n                    field: \"date\",\r\n                    editComponent: ({ value, onChange }) => (\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <KeyboardDatePicker\r\n                          value={value}\r\n                          onChange={onChange}\r\n                          ampm={false}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ),\r\n                  },\r\n                  {\r\n                    title: \"Sign In\",\r\n                    field: \"startTime\",\r\n                    filtering: false,\r\n                    editComponent: ({ value, onChange }) => (\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <TimePicker\r\n                          value={value}\r\n                          onChange={onChange}\r\n                          ampm={false}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ),\r\n                  },\r\n                  {\r\n                    title: \"Sign Out\",\r\n                    field: \"endTime\",\r\n                    sorting: false,\r\n                    filtering: false,\r\n                    editComponent: ({ value, onChange }) => (\r\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <TimePicker\r\n                          value={value}\r\n                          onChange={onChange}\r\n                          ampm={false}\r\n                        />\r\n                      </MuiPickersUtilsProvider>\r\n                    ),\r\n                  },\r\n                  {\r\n                    title: \"leave\",\r\n                    field: \"absentsatisfied\",\r\n                    sorting: false,\r\n                    filtering: false,\r\n                    editable: false,\r\n                  },\r\n                  {\r\n                    title: \"Absent Status\",\r\n                    field: \"absentStatus\",\r\n                    sorting: false,\r\n                    filtering: false,\r\n                    editable: false,\r\n                  },\r\n                  {\r\n                    title: \"Description\",\r\n                    field: \"description\",\r\n                    sorting: false,\r\n                    filtering: false,\r\n                    editable: false,\r\n                  },\r\n                ]}\r\n                align=\"center\"\r\n                data={data}\r\n                options={{\r\n                  search: true,\r\n                  // filtering: true,\r\n                  sorting: true,\r\n                  actionsColumnIndex: -1,\r\n                  headerStyle: {\r\n                    backgroundColor: \"#FFF\",\r\n                    color: \"#000\",\r\n                    letterSpacing: \"0.1em\",\r\n                    fontSize: \"18px\",\r\n                    margin: \"0\",\r\n                    padding: \"0 0 10px 0\",\r\n                  },\r\n                  rowStyle: {\r\n                    fontSize: \"15px\",\r\n                  },\r\n                }}\r\n                components={{\r\n                  Toolbar: (props) => (\r\n                    <div className=\"select-table-container\">\r\n                      <MTableToolbar {...props} />\r\n                      <Select\r\n                        className=\"table-select month\"\r\n                        value={selectedMonth}\r\n                        onChange={(event) => setMonth(event.target.value)}\r\n                        placeholder=\"Month\"\r\n                      >\r\n                        <MenuItem className=\"\" value={\"Month\"} key={\"Month\"}>\r\n                          Month\r\n                        </MenuItem>\r\n                        {month.map((mon) => (\r\n                          <MenuItem className=\"\" value={mon} key={mon}>\r\n                            {mon}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n\r\n                      <IoFilter\r\n                        className=\"filter-icon\"\r\n                        onClick={() => handleFilter()}\r\n                      />\r\n                      {filtered ? (\r\n                        <IoCloseSharp\r\n                          className=\"filter-icon\"\r\n                          onClick={handleRemoveFilter}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  ),\r\n                }}\r\n                editable={\r\n                  HR\r\n                    ? {\r\n                        // handle row add\r\n                        onRowAdd: (newData) =>\r\n                          new Promise((resolve, reject) => {\r\n                            setTimeout(() => {\r\n                              handleRowAdd(newData, resolve);\r\n\r\n                              resolve();\r\n                            }, 1500);\r\n                          }),\r\n\r\n                        //to update row\r\n                        onRowUpdate: (newData, oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              handleRowUpdate(newData, oldData);\r\n                              resolve();\r\n                            }, 1500);\r\n                          }),\r\n                      }\r\n                    : false\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </MuiPickersUtilsProvider>\r\n      </Fade>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AttendanceTable;\r\n",{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":13},{"ruleId":"290","severity":1,"message":"294","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":17},{"ruleId":"290","severity":1,"message":"295","line":7,"column":8,"nodeType":"292","messageId":"293","endLine":7,"endColumn":17},{"ruleId":"290","severity":1,"message":"296","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":22},{"ruleId":"290","severity":1,"message":"297","line":9,"column":8,"nodeType":"292","messageId":"293","endLine":9,"endColumn":17},{"ruleId":"290","severity":1,"message":"298","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":16},{"ruleId":"290","severity":1,"message":"299","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":13},{"ruleId":"300","severity":1,"message":"301","line":52,"column":6,"nodeType":"302","endLine":52,"endColumn":8,"suggestions":"303"},{"ruleId":"300","severity":1,"message":"301","line":154,"column":5,"nodeType":"302","endLine":154,"endColumn":7,"suggestions":"304"},{"ruleId":"300","severity":1,"message":"301","line":139,"column":6,"nodeType":"302","endLine":139,"endColumn":8,"suggestions":"305"},{"ruleId":"306","severity":2,"message":"307","line":19,"column":34,"nodeType":"292","endLine":19,"endColumn":42},{"ruleId":"306","severity":2,"message":"307","line":20,"column":32,"nodeType":"292","endLine":20,"endColumn":40},{"ruleId":"306","severity":2,"message":"308","line":21,"column":24,"nodeType":"292","endLine":21,"endColumn":33},{"ruleId":"306","severity":2,"message":"309","line":38,"column":21,"nodeType":"292","endLine":38,"endColumn":30},{"ruleId":"306","severity":2,"message":"310","line":40,"column":5,"nodeType":"292","endLine":40,"endColumn":14},{"ruleId":"300","severity":1,"message":"311","line":40,"column":15,"nodeType":"312","endLine":60,"endColumn":6},{"ruleId":"313","severity":2,"message":"314","line":46,"column":53,"nodeType":"292","messageId":"315","endLine":46,"endColumn":57},{"ruleId":"300","severity":1,"message":"301","line":60,"column":7,"nodeType":"302","endLine":60,"endColumn":9,"suggestions":"316"},{"ruleId":"300","severity":1,"message":"301","line":76,"column":7,"nodeType":"302","endLine":76,"endColumn":9,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":94,"column":13,"nodeType":"320","messageId":"321","endLine":100,"endColumn":14},{"ruleId":"290","severity":1,"message":"322","line":14,"column":8,"nodeType":"292","messageId":"293","endLine":14,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":76,"column":6,"nodeType":"302","endLine":76,"endColumn":8,"suggestions":"323"},{"ruleId":"300","severity":1,"message":"301","line":40,"column":6,"nodeType":"302","endLine":40,"endColumn":8,"suggestions":"324"},{"ruleId":"300","severity":1,"message":"311","line":199,"column":15,"nodeType":"312","endLine":212,"endColumn":6},{"ruleId":"300","severity":1,"message":"301","line":212,"column":7,"nodeType":"302","endLine":212,"endColumn":9,"suggestions":"325"},{"ruleId":"300","severity":1,"message":"326","line":217,"column":5,"nodeType":"302","endLine":217,"endColumn":94,"suggestions":"327"},{"ruleId":"328","severity":1,"message":"329","line":294,"column":50,"nodeType":"330","endLine":294,"endColumn":54},{"ruleId":"300","severity":1,"message":"301","line":87,"column":6,"nodeType":"302","endLine":87,"endColumn":8,"suggestions":"331"},{"ruleId":"290","severity":1,"message":"332","line":18,"column":14,"nodeType":"292","messageId":"293","endLine":18,"endColumn":19},{"ruleId":"286","replacedBy":"333"},{"ruleId":"288","replacedBy":"334"},{"ruleId":"290","severity":1,"message":"335","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":22},{"ruleId":"290","severity":1,"message":"336","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":22},{"ruleId":"290","severity":1,"message":"337","line":6,"column":24,"nodeType":"292","messageId":"293","endLine":6,"endColumn":39},{"ruleId":"290","severity":1,"message":"335","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":22},{"ruleId":"290","severity":1,"message":"336","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":22},{"ruleId":"290","severity":1,"message":"337","line":6,"column":24,"nodeType":"292","messageId":"293","endLine":6,"endColumn":39},{"ruleId":"290","severity":1,"message":"335","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":22},{"ruleId":"290","severity":1,"message":"336","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":22},{"ruleId":"290","severity":1,"message":"337","line":6,"column":24,"nodeType":"292","messageId":"293","endLine":6,"endColumn":39},{"ruleId":"300","severity":1,"message":"301","line":98,"column":6,"nodeType":"302","endLine":98,"endColumn":13,"suggestions":"338"},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.","ArrayExpression",["341"],["342"],["343"],"react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"academicMemberCourseSlot\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useToasts\" is called in function \"academicMemberCourseSlot\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useStyles\" is called in function \"academicMemberCourseSlot\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"academicMemberCourseSlot\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-undef","'link' is not defined.","undef",["344"],["345"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'AddCircleIcon' is defined but never used.",["346"],["347"],["348"],"React Hook useEffect has a missing dependency: 'handleButtonEnable'. Either include it or remove the dependency array.",["349"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["350"],"'setHr' is assigned a value but never used.",["339"],["340"],"'MdLocationOn' is defined but never used.","'FaUniversity' is defined but never used.","'FaClipboardList' is defined but never used.",["351"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"352","fix":"354"},{"desc":"352","fix":"355"},{"desc":"352","fix":"356"},{"desc":"352","fix":"357"},{"desc":"352","fix":"358"},{"desc":"352","fix":"359"},{"desc":"352","fix":"360"},{"desc":"361","fix":"362"},{"desc":"352","fix":"363"},{"desc":"364","fix":"365"},"Update the dependencies array to be: [addToast]",{"range":"366","text":"367"},{"range":"368","text":"367"},{"range":"369","text":"367"},{"range":"370","text":"367"},{"range":"371","text":"367"},{"range":"372","text":"367"},{"range":"373","text":"367"},{"range":"374","text":"367"},"Update the dependencies array to be: [courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",{"range":"375","text":"376"},{"range":"377","text":"367"},"Update the dependencies array to be: [addToast, props]",{"range":"378","text":"379"},[1910,1912],"[addToast]",[5368,5370],[4537,4539],[2065,2067],[2400,2402],[2713,2715],[1315,1317],[8182,8184],[8253,8342],"[courses, course1, day, dayU, timing, timingU, location, locationU, optionSelected, buttonEnabled, handleButtonEnable]",[3021,3023],[3093,3100],"[addToast, props]"]